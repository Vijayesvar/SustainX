{
	"id": "ca0d8e441ae9ae8190d5df83659c1c8c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"Backend/TokenContract.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract TokenContract is ERC20, Ownable {\n\n    // Token details will be inherited from ERC20 and not defined manually\n    // These variables are automatically defined by the ERC20 contract.\n    \n    uint256 public initialSupply = 1000000 * (10 ** uint256(decimals())); // 1 million tokens\n\n    // Mapping to track rewards for users\n    mapping(address => uint256) public rewards;\n\n    // Event to log minting action\n    event TokensMinted(address indexed to, uint256 amount);\n\n    /**\n     * @notice Constructor for initializing the token contract\n     * @param initialOwner The address of the initial owner (usually deployer's address)\n     */\n    constructor(address initialOwner) ERC20(\"SustainabilityToken\", \"SUS\")Ownable(initialOwner) {\n        // Mint initial supply to the contract owner\n        _mint(initialOwner, initialSupply);\n        // Transfer ownership to the initial owner\n        transferOwnership(initialOwner);\n    }\n\n    /**\n     * @notice Mint new tokens to an address (only owner can mint)\n     * @param to The address to mint tokens to\n     * @param amount The amount of tokens to mint\n     */\n    function mint(address to, uint256 amount) external onlyOwner {\n        _mint(to, amount);  // Mint the specified amount to the 'to' address\n        emit TokensMinted(to, amount);  // Emit an event for transparency\n    }\n\n    /**\n     * @notice Burn tokens from an address (only owner can burn)\n     * @param from The address to burn tokens from\n     * @param amount The amount of tokens to burn\n     */\n    function burn(address from, uint256 amount) external onlyOwner {\n        _burn(from, amount);  // Burn the specified amount from the 'from' address\n    }\n\n    /**\n     * @notice Reward a user with tokens for an eco-friendly action (like recycling)\n     * @param user The address of the user to reward\n     * @param amount The amount of tokens to reward the user\n     */\n    function rewardUser(address user, uint256 amount) external onlyOwner {\n        _mint(user, amount);  // Mint tokens to the user's address\n        rewards[user] = rewards[user] + amount;  // Update the rewards mapping for the user\n    }\n\n    /**\n     * @notice Transfer tokens from one address to another (inherits from ERC20)\n     * @param to The address to transfer tokens to\n     * @param amount The amount of tokens to transfer\n     * @return success Returns true if the transfer was successful\n     */\n    function transfer(address to, uint256 amount) public override returns (bool) {\n        return super.transfer(to, amount);  // Transfer the tokens using ERC20's built-in function\n    }\n\n    /**\n     * @notice Get the balance of tokens for a given address\n     * @param account The address to check the balance for\n     * @return balance The token balance of the given address\n     */\n    function balanceOf(address account) public view override returns (uint256) {\n        return super.balanceOf(account);  // Return the balance using ERC20's built-in function\n    }\n\n    /**\n     * @notice Approve another address to spend tokens on your behalf\n     * @param spender The address allowed to spend the tokens\n     * @param amount The amount of tokens that can be spent\n     * @return success Returns true if the approval was successful\n     */\n    function approve(address spender, uint256 amount) public override returns (bool) {\n        return super.approve(spender, amount);  // Approve spending using ERC20's built-in function\n    }\n\n    /**\n     * @notice Transfer tokens on behalf of another address\n     * @param from The address to transfer tokens from\n     * @param to The address to transfer tokens to\n     * @param amount The amount of tokens to transfer\n     * @return success Returns true if the transfer was successful\n     */\n    function transferFrom(address from, address to, uint256 amount) public override returns (bool) {\n        return super.transferFrom(from, to, amount);  // Transfer using ERC20's built-in function\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Backend/TokenContract.sol": {
				"TokenContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensMinted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "rewardUser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "rewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"params": {
									"amount": "The amount of tokens that can be spent",
									"spender": "The address allowed to spend the tokens"
								},
								"returns": {
									"_0": "success Returns true if the approval was successful"
								}
							},
							"balanceOf(address)": {
								"params": {
									"account": "The address to check the balance for"
								},
								"returns": {
									"_0": "balance The token balance of the given address"
								}
							},
							"burn(address,uint256)": {
								"params": {
									"amount": "The amount of tokens to burn",
									"from": "The address to burn tokens from"
								}
							},
							"constructor": {
								"params": {
									"initialOwner": "The address of the initial owner (usually deployer's address)"
								}
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"mint(address,uint256)": {
								"params": {
									"amount": "The amount of tokens to mint",
									"to": "The address to mint tokens to"
								}
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"rewardUser(address,uint256)": {
								"params": {
									"amount": "The amount of tokens to reward the user",
									"user": "The address of the user to reward"
								}
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"params": {
									"amount": "The amount of tokens to transfer",
									"to": "The address to transfer tokens to"
								},
								"returns": {
									"_0": "success Returns true if the transfer was successful"
								}
							},
							"transferFrom(address,address,uint256)": {
								"params": {
									"amount": "The amount of tokens to transfer",
									"from": "The address to transfer tokens from",
									"to": "The address to transfer tokens to"
								},
								"returns": {
									"_0": "success Returns true if the transfer was successful"
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Backend/TokenContract.sol\":168:4127  contract TokenContract is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"Backend/TokenContract.sol\":424:434  decimals() */\n  tag_1\n    /* \"Backend/TokenContract.sol\":424:432  decimals */\n  shl(0x20, tag_2)\n    /* \"Backend/TokenContract.sol\":424:434  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_1:\n    /* \"Backend/TokenContract.sol\":416:435  uint256(decimals()) */\n  0xff\n  and\n    /* \"Backend/TokenContract.sol\":410:412  10 */\n  0x0a\n    /* \"Backend/TokenContract.sol\":410:435  10 ** uint256(decimals()) */\n  tag_3\n  swap2\n  swap1\n  tag_4\n  jump\t// in\ntag_3:\n    /* \"Backend/TokenContract.sol\":399:406  1000000 */\n  0x0f4240\n    /* \"Backend/TokenContract.sol\":399:436  1000000 * (10 ** uint256(decimals())) */\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n    /* \"Backend/TokenContract.sol\":368:436  uint256 public initialSupply = 1000000 * (10 ** uint256(decimals())) */\n  0x06\n  sstore\n    /* \"Backend/TokenContract.sol\":818:1105  constructor(address initialOwner) ERC20(\"SustainabilityToken\", \"SUS\")Ownable(initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_7\n  jumpi\n  0x00\n  dup1\n  revert\ntag_7:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n    /* \"Backend/TokenContract.sol\":895:907  initialOwner */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x13\n  dup2\n  mstore\n  0x20\n  add\n  0x5375737461696e6162696c697479546f6b656e00000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x5355530000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_16\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_16:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_18\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_18:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_21\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_22)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_21:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"Backend/TokenContract.sol\":972:1006  _mint(initialOwner, initialSupply) */\n  tag_24\n    /* \"Backend/TokenContract.sol\":978:990  initialOwner */\n  dup2\n    /* \"Backend/TokenContract.sol\":992:1005  initialSupply */\n  sload(0x06)\n    /* \"Backend/TokenContract.sol\":972:977  _mint */\n  shl(0x20, tag_25)\n    /* \"Backend/TokenContract.sol\":972:1006  _mint(initialOwner, initialSupply) */\n  0x20\n  shr\n  jump\t// in\ntag_24:\n    /* \"Backend/TokenContract.sol\":1067:1098  transferOwnership(initialOwner) */\n  tag_26\n    /* \"Backend/TokenContract.sol\":1085:1097  initialOwner */\n  dup2\n    /* \"Backend/TokenContract.sol\":1067:1084  transferOwnership */\n  shl(0x20, tag_27)\n    /* \"Backend/TokenContract.sol\":1067:1098  transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_26:\n    /* \"Backend/TokenContract.sol\":818:1105  constructor(address initialOwner) ERC20(\"SustainabilityToken\", \"SUS\")Ownable(initialOwner) {... */\n  pop\n    /* \"Backend/TokenContract.sol\":168:4127  contract TokenContract is ERC20, Ownable {... */\n  jump(tag_28)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n  0x12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_22:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_32\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_33\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_33:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_34\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  shl(0x20, tag_35)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_34:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\ntag_27:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n  tag_37\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n  shl(0x20, tag_38)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n  0x20\n  shr\n  jump\t// in\ntag_37:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n  tag_40\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_41\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_41:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\ntag_40:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n  tag_42\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n  shl(0x20, tag_22)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_42:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_35:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_44\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_45\n  swap2\n  swap1\n  tag_46\n  jump\t// in\ntag_45:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  jump(tag_47)\ntag_44:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_48\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_49\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_50\n  jump\t// in\ntag_49:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_48:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_47:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_51\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_52)\ntag_51:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_52:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_53\n  swap2\n  swap1\n  tag_54\n  jump\t// in\ntag_53:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\ntag_38:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n  tag_56\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n  shl(0x20, tag_57)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_56:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n  tag_58\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n  shl(0x20, tag_59)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n  0x20\n  shr\n  jump\t// in\ntag_58:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n  tag_60\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n  tag_61\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n  shl(0x20, tag_57)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_61:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n  mload(0x40)\n  0x118cdaa700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_62\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_62:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\ntag_60:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_57:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\ntag_59:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:187   */\ntag_65:\n    /* \"#utility.yul\":55:132   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":52:53   */\n  0x00\n    /* \"#utility.yul\":45:133   */\n  mstore\n    /* \"#utility.yul\":152:156   */\n  0x11\n    /* \"#utility.yul\":149:150   */\n  0x04\n    /* \"#utility.yul\":142:157   */\n  mstore\n    /* \"#utility.yul\":176:180   */\n  0x24\n    /* \"#utility.yul\":173:174   */\n  0x00\n    /* \"#utility.yul\":166:181   */\n  revert\n    /* \"#utility.yul\":193:295   */\ntag_66:\n    /* \"#utility.yul\":235:243   */\n  0x00\n    /* \"#utility.yul\":282:287   */\n  dup2\n    /* \"#utility.yul\":279:280   */\n  0x01\n    /* \"#utility.yul\":275:288   */\n  shr\n    /* \"#utility.yul\":254:288   */\n  swap1\n  pop\n    /* \"#utility.yul\":193:295   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":301:1149   */\ntag_67:\n    /* \"#utility.yul\":362:367   */\n  0x00\n    /* \"#utility.yul\":369:373   */\n  dup1\n    /* \"#utility.yul\":393:399   */\n  dup3\n    /* \"#utility.yul\":384:399   */\n  swap2\n  pop\n    /* \"#utility.yul\":417:422   */\n  dup4\n    /* \"#utility.yul\":408:422   */\n  swap1\n  pop\n    /* \"#utility.yul\":431:1143   */\ntag_102:\n    /* \"#utility.yul\":452:453   */\n  0x01\n    /* \"#utility.yul\":442:450   */\n  dup6\n    /* \"#utility.yul\":439:454   */\n  gt\n    /* \"#utility.yul\":431:1143   */\n  iszero\n  tag_104\n  jumpi\n    /* \"#utility.yul\":547:551   */\n  dup1\n    /* \"#utility.yul\":542:545   */\n  dup7\n    /* \"#utility.yul\":538:552   */\n  div\n    /* \"#utility.yul\":532:536   */\n  dup2\n    /* \"#utility.yul\":529:553   */\n  gt\n    /* \"#utility.yul\":526:576   */\n  iszero\n  tag_105\n  jumpi\n    /* \"#utility.yul\":556:574   */\n  tag_106\n  tag_65\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":526:576   */\ntag_105:\n    /* \"#utility.yul\":606:607   */\n  0x01\n    /* \"#utility.yul\":596:604   */\n  dup6\n    /* \"#utility.yul\":592:608   */\n  and\n    /* \"#utility.yul\":589:1040   */\n  iszero\n  tag_107\n  jumpi\n    /* \"#utility.yul\":1021:1025   */\n  dup1\n    /* \"#utility.yul\":1014:1019   */\n  dup3\n    /* \"#utility.yul\":1010:1026   */\n  mul\n    /* \"#utility.yul\":1001:1026   */\n  swap2\n  pop\n    /* \"#utility.yul\":589:1040   */\ntag_107:\n    /* \"#utility.yul\":1071:1075   */\n  dup1\n    /* \"#utility.yul\":1065:1069   */\n  dup2\n    /* \"#utility.yul\":1061:1076   */\n  mul\n    /* \"#utility.yul\":1053:1076   */\n  swap1\n  pop\n    /* \"#utility.yul\":1101:1133   */\n  tag_108\n    /* \"#utility.yul\":1124:1132   */\n  dup6\n    /* \"#utility.yul\":1101:1133   */\n  tag_66\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":1089:1133   */\n  swap5\n  pop\n    /* \"#utility.yul\":431:1143   */\n  jump(tag_102)\ntag_104:\n    /* \"#utility.yul\":301:1149   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1155:2228   */\ntag_68:\n    /* \"#utility.yul\":1209:1214   */\n  0x00\n    /* \"#utility.yul\":1400:1408   */\n  dup3\n    /* \"#utility.yul\":1390:1430   */\n  tag_110\n  jumpi\n    /* \"#utility.yul\":1421:1422   */\n  0x01\n    /* \"#utility.yul\":1412:1422   */\n  swap1\n  pop\n    /* \"#utility.yul\":1423:1428   */\n  jump(tag_109)\n    /* \"#utility.yul\":1390:1430   */\ntag_110:\n    /* \"#utility.yul\":1449:1453   */\n  dup2\n    /* \"#utility.yul\":1439:1475   */\n  tag_111\n  jumpi\n    /* \"#utility.yul\":1466:1467   */\n  0x00\n    /* \"#utility.yul\":1457:1467   */\n  swap1\n  pop\n    /* \"#utility.yul\":1468:1473   */\n  jump(tag_109)\n    /* \"#utility.yul\":1439:1475   */\ntag_111:\n    /* \"#utility.yul\":1535:1539   */\n  dup2\n    /* \"#utility.yul\":1583:1584   */\n  0x01\n    /* \"#utility.yul\":1578:1605   */\n  dup2\n  eq\n  tag_113\n  jumpi\n    /* \"#utility.yul\":1619:1620   */\n  0x02\n    /* \"#utility.yul\":1614:1805   */\n  dup2\n  eq\n  tag_114\n  jumpi\n    /* \"#utility.yul\":1528:1805   */\n  jump(tag_112)\n    /* \"#utility.yul\":1578:1605   */\ntag_113:\n    /* \"#utility.yul\":1596:1597   */\n  0x01\n    /* \"#utility.yul\":1587:1597   */\n  swap2\n  pop\n    /* \"#utility.yul\":1598:1603   */\n  pop\n  jump(tag_109)\n    /* \"#utility.yul\":1614:1805   */\ntag_114:\n    /* \"#utility.yul\":1659:1662   */\n  0xff\n    /* \"#utility.yul\":1649:1657   */\n  dup5\n    /* \"#utility.yul\":1646:1663   */\n  gt\n    /* \"#utility.yul\":1643:1686   */\n  iszero\n  tag_115\n  jumpi\n    /* \"#utility.yul\":1666:1684   */\n  tag_116\n  tag_65\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":1643:1686   */\ntag_115:\n    /* \"#utility.yul\":1715:1723   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  0x02\n    /* \"#utility.yul\":1708:1724   */\n  exp\n    /* \"#utility.yul\":1699:1724   */\n  swap2\n  pop\n    /* \"#utility.yul\":1750:1753   */\n  dup5\n    /* \"#utility.yul\":1743:1748   */\n  dup3\n    /* \"#utility.yul\":1740:1754   */\n  gt\n    /* \"#utility.yul\":1737:1777   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":1757:1775   */\n  tag_118\n  tag_65\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":1737:1777   */\ntag_117:\n    /* \"#utility.yul\":1790:1795   */\n  pop\n  jump(tag_109)\n    /* \"#utility.yul\":1528:1805   */\ntag_112:\n  pop\n    /* \"#utility.yul\":1914:1916   */\n  0x20\n    /* \"#utility.yul\":1904:1912   */\n  dup4\n    /* \"#utility.yul\":1901:1917   */\n  lt\n    /* \"#utility.yul\":1895:1898   */\n  0x0133\n    /* \"#utility.yul\":1889:1893   */\n  dup4\n    /* \"#utility.yul\":1886:1899   */\n  lt\n    /* \"#utility.yul\":1882:1918   */\n  and\n    /* \"#utility.yul\":1864:1866   */\n  0x4e\n    /* \"#utility.yul\":1854:1862   */\n  dup5\n    /* \"#utility.yul\":1851:1867   */\n  lt\n    /* \"#utility.yul\":1846:1848   */\n  0x0b\n    /* \"#utility.yul\":1840:1844   */\n  dup5\n    /* \"#utility.yul\":1837:1849   */\n  lt\n    /* \"#utility.yul\":1833:1868   */\n  and\n    /* \"#utility.yul\":1817:1928   */\n  or\n    /* \"#utility.yul\":1814:2060   */\n  iszero\n  tag_119\n  jumpi\n    /* \"#utility.yul\":1970:1978   */\n  dup3\n    /* \"#utility.yul\":1964:1968   */\n  dup3\n    /* \"#utility.yul\":1960:1979   */\n  exp\n    /* \"#utility.yul\":1951:1979   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2008   */\n  dup4\n    /* \"#utility.yul\":1998:2003   */\n  dup2\n    /* \"#utility.yul\":1995:2009   */\n  gt\n    /* \"#utility.yul\":1992:2032   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":2012:2030   */\n  tag_121\n  tag_65\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":1992:2032   */\ntag_120:\n    /* \"#utility.yul\":2045:2050   */\n  jump(tag_109)\n    /* \"#utility.yul\":1814:2060   */\ntag_119:\n    /* \"#utility.yul\":2085:2127   */\n  tag_122\n    /* \"#utility.yul\":2123:2126   */\n  dup5\n    /* \"#utility.yul\":2113:2121   */\n  dup5\n    /* \"#utility.yul\":2107:2111   */\n  dup5\n    /* \"#utility.yul\":2104:2105   */\n  0x01\n    /* \"#utility.yul\":2085:2127   */\n  tag_67\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":2070:2127   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":2159:2163   */\n  dup2\n    /* \"#utility.yul\":2154:2157   */\n  dup5\n    /* \"#utility.yul\":2150:2164   */\n  div\n    /* \"#utility.yul\":2143:2148   */\n  dup2\n    /* \"#utility.yul\":2140:2165   */\n  gt\n    /* \"#utility.yul\":2137:2188   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":2168:2186   */\n  tag_124\n  tag_65\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":2137:2188   */\ntag_123:\n    /* \"#utility.yul\":2217:2221   */\n  dup2\n    /* \"#utility.yul\":2210:2215   */\n  dup2\n    /* \"#utility.yul\":2206:2222   */\n  mul\n    /* \"#utility.yul\":2197:2222   */\n  swap1\n  pop\n    /* \"#utility.yul\":1155:2228   */\ntag_109:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2234:2311   */\ntag_69:\n    /* \"#utility.yul\":2271:2278   */\n  0x00\n    /* \"#utility.yul\":2300:2305   */\n  dup2\n    /* \"#utility.yul\":2289:2305   */\n  swap1\n  pop\n    /* \"#utility.yul\":2234:2311   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2317:2602   */\ntag_4:\n    /* \"#utility.yul\":2377:2382   */\n  0x00\n    /* \"#utility.yul\":2401:2424   */\n  tag_127\n    /* \"#utility.yul\":2419:2423   */\n  dup3\n    /* \"#utility.yul\":2401:2424   */\n  tag_69\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":2393:2424   */\n  swap2\n  pop\n    /* \"#utility.yul\":2445:2472   */\n  tag_128\n    /* \"#utility.yul\":2463:2471   */\n  dup4\n    /* \"#utility.yul\":2445:2472   */\n  tag_69\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":2433:2472   */\n  swap3\n  pop\n    /* \"#utility.yul\":2491:2595   */\n  tag_129\n    /* \"#utility.yul\":2528:2594   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2518:2526   */\n  dup5\n    /* \"#utility.yul\":2512:2516   */\n  dup5\n    /* \"#utility.yul\":2491:2595   */\n  tag_68\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":2482:2595   */\n  swap1\n  pop\n    /* \"#utility.yul\":2317:2602   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2608:3018   */\ntag_6:\n    /* \"#utility.yul\":2648:2655   */\n  0x00\n    /* \"#utility.yul\":2671:2691   */\n  tag_131\n    /* \"#utility.yul\":2689:2690   */\n  dup3\n    /* \"#utility.yul\":2671:2691   */\n  tag_69\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":2666:2691   */\n  swap2\n  pop\n    /* \"#utility.yul\":2705:2725   */\n  tag_132\n    /* \"#utility.yul\":2723:2724   */\n  dup4\n    /* \"#utility.yul\":2705:2725   */\n  tag_69\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":2700:2725   */\n  swap3\n  pop\n    /* \"#utility.yul\":2760:2761   */\n  dup3\n    /* \"#utility.yul\":2757:2758   */\n  dup3\n    /* \"#utility.yul\":2753:2762   */\n  mul\n    /* \"#utility.yul\":2782:2812   */\n  tag_133\n    /* \"#utility.yul\":2800:2811   */\n  dup2\n    /* \"#utility.yul\":2782:2812   */\n  tag_69\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":2771:2812   */\n  swap2\n  pop\n    /* \"#utility.yul\":2961:2962   */\n  dup3\n    /* \"#utility.yul\":2952:2959   */\n  dup3\n    /* \"#utility.yul\":2948:2963   */\n  div\n    /* \"#utility.yul\":2945:2946   */\n  dup5\n    /* \"#utility.yul\":2942:2964   */\n  eq\n    /* \"#utility.yul\":2922:2923   */\n  dup4\n    /* \"#utility.yul\":2915:2924   */\n  iszero\n    /* \"#utility.yul\":2895:2978   */\n  or\n    /* \"#utility.yul\":2872:3011   */\n  tag_134\n  jumpi\n    /* \"#utility.yul\":2991:3009   */\n  tag_135\n  tag_65\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":2872:3011   */\ntag_134:\n    /* \"#utility.yul\":2656:3018   */\n  pop\n    /* \"#utility.yul\":2608:3018   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3105:3222   */\ntag_71:\n    /* \"#utility.yul\":3214:3215   */\n  0x00\n    /* \"#utility.yul\":3211:3212   */\n  dup1\n    /* \"#utility.yul\":3204:3216   */\n  revert\n    /* \"#utility.yul\":3351:3477   */\ntag_73:\n    /* \"#utility.yul\":3388:3395   */\n  0x00\n    /* \"#utility.yul\":3428:3470   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":3421:3426   */\n  dup3\n    /* \"#utility.yul\":3417:3471   */\n  and\n    /* \"#utility.yul\":3406:3471   */\n  swap1\n  pop\n    /* \"#utility.yul\":3351:3477   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3483:3579   */\ntag_74:\n    /* \"#utility.yul\":3520:3527   */\n  0x00\n    /* \"#utility.yul\":3549:3573   */\n  tag_141\n    /* \"#utility.yul\":3567:3572   */\n  dup3\n    /* \"#utility.yul\":3549:3573   */\n  tag_73\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":3538:3573   */\n  swap1\n  pop\n    /* \"#utility.yul\":3483:3579   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3585:3707   */\ntag_75:\n    /* \"#utility.yul\":3658:3682   */\n  tag_143\n    /* \"#utility.yul\":3676:3681   */\n  dup2\n    /* \"#utility.yul\":3658:3682   */\n  tag_74\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":3651:3656   */\n  dup2\n    /* \"#utility.yul\":3648:3683   */\n  eq\n    /* \"#utility.yul\":3638:3701   */\n  tag_144\n  jumpi\n    /* \"#utility.yul\":3697:3698   */\n  0x00\n    /* \"#utility.yul\":3694:3695   */\n  dup1\n    /* \"#utility.yul\":3687:3699   */\n  revert\n    /* \"#utility.yul\":3638:3701   */\ntag_144:\n    /* \"#utility.yul\":3585:3707   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3713:3856   */\ntag_76:\n    /* \"#utility.yul\":3770:3775   */\n  0x00\n    /* \"#utility.yul\":3801:3807   */\n  dup2\n    /* \"#utility.yul\":3795:3808   */\n  mload\n    /* \"#utility.yul\":3786:3808   */\n  swap1\n  pop\n    /* \"#utility.yul\":3817:3850   */\n  tag_146\n    /* \"#utility.yul\":3844:3849   */\n  dup2\n    /* \"#utility.yul\":3817:3850   */\n  tag_75\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":3713:3856   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3862:4213   */\ntag_9:\n    /* \"#utility.yul\":3932:3938   */\n  0x00\n    /* \"#utility.yul\":3981:3983   */\n  0x20\n    /* \"#utility.yul\":3969:3978   */\n  dup3\n    /* \"#utility.yul\":3960:3967   */\n  dup5\n    /* \"#utility.yul\":3956:3979   */\n  sub\n    /* \"#utility.yul\":3952:3984   */\n  slt\n    /* \"#utility.yul\":3949:4068   */\n  iszero\n  tag_148\n  jumpi\n    /* \"#utility.yul\":3987:4066   */\n  tag_149\n  tag_71\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":3949:4068   */\ntag_148:\n    /* \"#utility.yul\":4107:4108   */\n  0x00\n    /* \"#utility.yul\":4132:4196   */\n  tag_150\n    /* \"#utility.yul\":4188:4195   */\n  dup5\n    /* \"#utility.yul\":4179:4185   */\n  dup3\n    /* \"#utility.yul\":4168:4177   */\n  dup6\n    /* \"#utility.yul\":4164:4186   */\n  add\n    /* \"#utility.yul\":4132:4196   */\n  tag_76\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":4122:4196   */\n  swap2\n  pop\n    /* \"#utility.yul\":4078:4206   */\n  pop\n    /* \"#utility.yul\":3862:4213   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4219:4318   */\ntag_77:\n    /* \"#utility.yul\":4271:4277   */\n  0x00\n    /* \"#utility.yul\":4305:4310   */\n  dup2\n    /* \"#utility.yul\":4299:4311   */\n  mload\n    /* \"#utility.yul\":4289:4311   */\n  swap1\n  pop\n    /* \"#utility.yul\":4219:4318   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4324:4504   */\ntag_78:\n    /* \"#utility.yul\":4372:4449   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4369:4370   */\n  0x00\n    /* \"#utility.yul\":4362:4450   */\n  mstore\n    /* \"#utility.yul\":4469:4473   */\n  0x41\n    /* \"#utility.yul\":4466:4467   */\n  0x04\n    /* \"#utility.yul\":4459:4474   */\n  mstore\n    /* \"#utility.yul\":4493:4497   */\n  0x24\n    /* \"#utility.yul\":4490:4491   */\n  0x00\n    /* \"#utility.yul\":4483:4498   */\n  revert\n    /* \"#utility.yul\":4510:4690   */\ntag_79:\n    /* \"#utility.yul\":4558:4635   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4555:4556   */\n  0x00\n    /* \"#utility.yul\":4548:4636   */\n  mstore\n    /* \"#utility.yul\":4655:4659   */\n  0x22\n    /* \"#utility.yul\":4652:4653   */\n  0x04\n    /* \"#utility.yul\":4645:4660   */\n  mstore\n    /* \"#utility.yul\":4679:4683   */\n  0x24\n    /* \"#utility.yul\":4676:4677   */\n  0x00\n    /* \"#utility.yul\":4669:4684   */\n  revert\n    /* \"#utility.yul\":4696:5016   */\ntag_80:\n    /* \"#utility.yul\":4740:4746   */\n  0x00\n    /* \"#utility.yul\":4777:4778   */\n  0x02\n    /* \"#utility.yul\":4771:4775   */\n  dup3\n    /* \"#utility.yul\":4767:4779   */\n  div\n    /* \"#utility.yul\":4757:4779   */\n  swap1\n  pop\n    /* \"#utility.yul\":4824:4825   */\n  0x01\n    /* \"#utility.yul\":4818:4822   */\n  dup3\n    /* \"#utility.yul\":4814:4826   */\n  and\n    /* \"#utility.yul\":4845:4863   */\n  dup1\n    /* \"#utility.yul\":4835:4916   */\n  tag_155\n  jumpi\n    /* \"#utility.yul\":4901:4905   */\n  0x7f\n    /* \"#utility.yul\":4893:4899   */\n  dup3\n    /* \"#utility.yul\":4889:4906   */\n  and\n    /* \"#utility.yul\":4879:4906   */\n  swap2\n  pop\n    /* \"#utility.yul\":4835:4916   */\ntag_155:\n    /* \"#utility.yul\":4963:4965   */\n  0x20\n    /* \"#utility.yul\":4955:4961   */\n  dup3\n    /* \"#utility.yul\":4952:4966   */\n  lt\n    /* \"#utility.yul\":4932:4950   */\n  dup2\n    /* \"#utility.yul\":4929:4967   */\n  sub\n    /* \"#utility.yul\":4926:5010   */\n  tag_156\n  jumpi\n    /* \"#utility.yul\":4982:5000   */\n  tag_157\n  tag_79\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":4926:5010   */\ntag_156:\n    /* \"#utility.yul\":4747:5016   */\n  pop\n    /* \"#utility.yul\":4696:5016   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5022:5163   */\ntag_81:\n    /* \"#utility.yul\":5071:5075   */\n  0x00\n    /* \"#utility.yul\":5094:5097   */\n  dup2\n    /* \"#utility.yul\":5086:5097   */\n  swap1\n  pop\n    /* \"#utility.yul\":5117:5120   */\n  dup2\n    /* \"#utility.yul\":5114:5115   */\n  0x00\n    /* \"#utility.yul\":5107:5121   */\n  mstore\n    /* \"#utility.yul\":5151:5155   */\n  0x20\n    /* \"#utility.yul\":5148:5149   */\n  0x00\n    /* \"#utility.yul\":5138:5156   */\n  keccak256\n    /* \"#utility.yul\":5130:5156   */\n  swap1\n  pop\n    /* \"#utility.yul\":5022:5163   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5169:5262   */\ntag_82:\n    /* \"#utility.yul\":5206:5212   */\n  0x00\n    /* \"#utility.yul\":5253:5255   */\n  0x20\n    /* \"#utility.yul\":5248:5250   */\n  0x1f\n    /* \"#utility.yul\":5241:5246   */\n  dup4\n    /* \"#utility.yul\":5237:5251   */\n  add\n    /* \"#utility.yul\":5233:5256   */\n  div\n    /* \"#utility.yul\":5223:5256   */\n  swap1\n  pop\n    /* \"#utility.yul\":5169:5262   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5268:5375   */\ntag_83:\n    /* \"#utility.yul\":5312:5320   */\n  0x00\n    /* \"#utility.yul\":5362:5367   */\n  dup3\n    /* \"#utility.yul\":5356:5360   */\n  dup3\n    /* \"#utility.yul\":5352:5368   */\n  shl\n    /* \"#utility.yul\":5331:5368   */\n  swap1\n  pop\n    /* \"#utility.yul\":5268:5375   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5381:5774   */\ntag_84:\n    /* \"#utility.yul\":5450:5456   */\n  0x00\n    /* \"#utility.yul\":5500:5501   */\n  0x08\n    /* \"#utility.yul\":5488:5498   */\n  dup4\n    /* \"#utility.yul\":5484:5502   */\n  mul\n    /* \"#utility.yul\":5523:5620   */\n  tag_162\n    /* \"#utility.yul\":5553:5619   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5542:5551   */\n  dup3\n    /* \"#utility.yul\":5523:5620   */\n  tag_83\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":5641:5680   */\n  tag_163\n    /* \"#utility.yul\":5671:5679   */\n  dup7\n    /* \"#utility.yul\":5660:5669   */\n  dup4\n    /* \"#utility.yul\":5641:5680   */\n  tag_83\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":5629:5680   */\n  swap6\n  pop\n    /* \"#utility.yul\":5713:5717   */\n  dup1\n    /* \"#utility.yul\":5709:5718   */\n  not\n    /* \"#utility.yul\":5702:5707   */\n  dup5\n    /* \"#utility.yul\":5698:5719   */\n  and\n    /* \"#utility.yul\":5689:5719   */\n  swap4\n  pop\n    /* \"#utility.yul\":5762:5766   */\n  dup1\n    /* \"#utility.yul\":5752:5760   */\n  dup7\n    /* \"#utility.yul\":5748:5767   */\n  and\n    /* \"#utility.yul\":5741:5746   */\n  dup5\n    /* \"#utility.yul\":5738:5768   */\n  or\n    /* \"#utility.yul\":5728:5768   */\n  swap3\n  pop\n    /* \"#utility.yul\":5457:5774   */\n  pop\n  pop\n    /* \"#utility.yul\":5381:5774   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5780:5840   */\ntag_85:\n    /* \"#utility.yul\":5808:5811   */\n  0x00\n    /* \"#utility.yul\":5829:5834   */\n  dup2\n    /* \"#utility.yul\":5822:5834   */\n  swap1\n  pop\n    /* \"#utility.yul\":5780:5840   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5846:5988   */\ntag_86:\n    /* \"#utility.yul\":5896:5905   */\n  0x00\n    /* \"#utility.yul\":5929:5982   */\n  tag_166\n    /* \"#utility.yul\":5947:5981   */\n  tag_167\n    /* \"#utility.yul\":5956:5980   */\n  tag_168\n    /* \"#utility.yul\":5974:5979   */\n  dup5\n    /* \"#utility.yul\":5956:5980   */\n  tag_69\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":5947:5981   */\n  tag_85\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":5929:5982   */\n  tag_69\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":5916:5982   */\n  swap1\n  pop\n    /* \"#utility.yul\":5846:5988   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5994:6069   */\ntag_87:\n    /* \"#utility.yul\":6037:6040   */\n  0x00\n    /* \"#utility.yul\":6058:6063   */\n  dup2\n    /* \"#utility.yul\":6051:6063   */\n  swap1\n  pop\n    /* \"#utility.yul\":5994:6069   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6075:6344   */\ntag_88:\n    /* \"#utility.yul\":6185:6224   */\n  tag_171\n    /* \"#utility.yul\":6216:6223   */\n  dup4\n    /* \"#utility.yul\":6185:6224   */\n  tag_86\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":6246:6337   */\n  tag_172\n    /* \"#utility.yul\":6295:6336   */\n  tag_173\n    /* \"#utility.yul\":6319:6335   */\n  dup3\n    /* \"#utility.yul\":6295:6336   */\n  tag_87\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":6287:6293   */\n  dup5\n    /* \"#utility.yul\":6280:6284   */\n  dup5\n    /* \"#utility.yul\":6274:6285   */\n  sload\n    /* \"#utility.yul\":6246:6337   */\n  tag_84\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":6240:6244   */\n  dup3\n    /* \"#utility.yul\":6233:6338   */\n  sstore\n    /* \"#utility.yul\":6151:6344   */\n  pop\n    /* \"#utility.yul\":6075:6344   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6350:6423   */\ntag_89:\n    /* \"#utility.yul\":6395:6398   */\n  0x00\n    /* \"#utility.yul\":6350:6423   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6429:6618   */\ntag_90:\n    /* \"#utility.yul\":6506:6538   */\n  tag_176\n  tag_89\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":6547:6612   */\n  tag_177\n    /* \"#utility.yul\":6605:6611   */\n  dup2\n    /* \"#utility.yul\":6597:6603   */\n  dup5\n    /* \"#utility.yul\":6591:6595   */\n  dup5\n    /* \"#utility.yul\":6547:6612   */\n  tag_88\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":6482:6618   */\n  pop\n    /* \"#utility.yul\":6429:6618   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6624:6810   */\ntag_91:\n    /* \"#utility.yul\":6684:6804   */\ntag_179:\n    /* \"#utility.yul\":6701:6704   */\n  dup2\n    /* \"#utility.yul\":6694:6699   */\n  dup2\n    /* \"#utility.yul\":6691:6705   */\n  lt\n    /* \"#utility.yul\":6684:6804   */\n  iszero\n  tag_181\n  jumpi\n    /* \"#utility.yul\":6755:6794   */\n  tag_182\n    /* \"#utility.yul\":6792:6793   */\n  0x00\n    /* \"#utility.yul\":6785:6790   */\n  dup3\n    /* \"#utility.yul\":6755:6794   */\n  tag_90\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":6728:6729   */\n  0x01\n    /* \"#utility.yul\":6721:6726   */\n  dup2\n    /* \"#utility.yul\":6717:6730   */\n  add\n    /* \"#utility.yul\":6708:6730   */\n  swap1\n  pop\n    /* \"#utility.yul\":6684:6804   */\n  jump(tag_179)\ntag_181:\n    /* \"#utility.yul\":6624:6810   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6816:7359   */\ntag_92:\n    /* \"#utility.yul\":6917:6919   */\n  0x1f\n    /* \"#utility.yul\":6912:6915   */\n  dup3\n    /* \"#utility.yul\":6909:6920   */\n  gt\n    /* \"#utility.yul\":6906:7352   */\n  iszero\n  tag_184\n  jumpi\n    /* \"#utility.yul\":6951:6989   */\n  tag_185\n    /* \"#utility.yul\":6983:6988   */\n  dup2\n    /* \"#utility.yul\":6951:6989   */\n  tag_81\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":7035:7064   */\n  tag_186\n    /* \"#utility.yul\":7053:7063   */\n  dup5\n    /* \"#utility.yul\":7035:7064   */\n  tag_82\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":7025:7033   */\n  dup2\n    /* \"#utility.yul\":7021:7065   */\n  add\n    /* \"#utility.yul\":7218:7220   */\n  0x20\n    /* \"#utility.yul\":7206:7216   */\n  dup6\n    /* \"#utility.yul\":7203:7221   */\n  lt\n    /* \"#utility.yul\":7200:7249   */\n  iszero\n  tag_187\n  jumpi\n    /* \"#utility.yul\":7239:7247   */\n  dup2\n    /* \"#utility.yul\":7224:7247   */\n  swap1\n  pop\n    /* \"#utility.yul\":7200:7249   */\ntag_187:\n    /* \"#utility.yul\":7262:7342   */\n  tag_188\n    /* \"#utility.yul\":7318:7340   */\n  tag_189\n    /* \"#utility.yul\":7336:7339   */\n  dup6\n    /* \"#utility.yul\":7318:7340   */\n  tag_82\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":7308:7316   */\n  dup4\n    /* \"#utility.yul\":7304:7341   */\n  add\n    /* \"#utility.yul\":7291:7302   */\n  dup3\n    /* \"#utility.yul\":7262:7342   */\n  tag_91\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":6921:7352   */\n  pop\n  pop\n    /* \"#utility.yul\":6906:7352   */\ntag_184:\n    /* \"#utility.yul\":6816:7359   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7365:7482   */\ntag_93:\n    /* \"#utility.yul\":7419:7427   */\n  0x00\n    /* \"#utility.yul\":7469:7474   */\n  dup3\n    /* \"#utility.yul\":7463:7467   */\n  dup3\n    /* \"#utility.yul\":7459:7475   */\n  shr\n    /* \"#utility.yul\":7438:7475   */\n  swap1\n  pop\n    /* \"#utility.yul\":7365:7482   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7488:7657   */\ntag_94:\n    /* \"#utility.yul\":7532:7538   */\n  0x00\n    /* \"#utility.yul\":7565:7616   */\n  tag_192\n    /* \"#utility.yul\":7613:7614   */\n  0x00\n    /* \"#utility.yul\":7609:7615   */\n  not\n    /* \"#utility.yul\":7601:7606   */\n  dup5\n    /* \"#utility.yul\":7598:7599   */\n  0x08\n    /* \"#utility.yul\":7594:7607   */\n  mul\n    /* \"#utility.yul\":7565:7616   */\n  tag_93\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":7561:7617   */\n  not\n    /* \"#utility.yul\":7646:7650   */\n  dup1\n    /* \"#utility.yul\":7640:7644   */\n  dup4\n    /* \"#utility.yul\":7636:7651   */\n  and\n    /* \"#utility.yul\":7626:7651   */\n  swap2\n  pop\n    /* \"#utility.yul\":7539:7657   */\n  pop\n    /* \"#utility.yul\":7488:7657   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7662:7957   */\ntag_95:\n    /* \"#utility.yul\":7738:7742   */\n  0x00\n    /* \"#utility.yul\":7884:7913   */\n  tag_194\n    /* \"#utility.yul\":7909:7912   */\n  dup4\n    /* \"#utility.yul\":7903:7907   */\n  dup4\n    /* \"#utility.yul\":7884:7913   */\n  tag_94\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":7876:7913   */\n  swap2\n  pop\n    /* \"#utility.yul\":7946:7949   */\n  dup3\n    /* \"#utility.yul\":7943:7944   */\n  0x02\n    /* \"#utility.yul\":7939:7950   */\n  mul\n    /* \"#utility.yul\":7933:7937   */\n  dup3\n    /* \"#utility.yul\":7930:7951   */\n  or\n    /* \"#utility.yul\":7922:7951   */\n  swap1\n  pop\n    /* \"#utility.yul\":7662:7957   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7962:9357   */\ntag_15:\n    /* \"#utility.yul\":8079:8116   */\n  tag_196\n    /* \"#utility.yul\":8112:8115   */\n  dup3\n    /* \"#utility.yul\":8079:8116   */\n  tag_77\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":8181:8199   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8173:8179   */\n  dup2\n    /* \"#utility.yul\":8170:8200   */\n  gt\n    /* \"#utility.yul\":8167:8223   */\n  iszero\n  tag_197\n  jumpi\n    /* \"#utility.yul\":8203:8221   */\n  tag_198\n  tag_78\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":8167:8223   */\ntag_197:\n    /* \"#utility.yul\":8247:8285   */\n  tag_199\n    /* \"#utility.yul\":8279:8283   */\n  dup3\n    /* \"#utility.yul\":8273:8284   */\n  sload\n    /* \"#utility.yul\":8247:8285   */\n  tag_80\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":8332:8399   */\n  tag_200\n    /* \"#utility.yul\":8392:8398   */\n  dup3\n    /* \"#utility.yul\":8384:8390   */\n  dup3\n    /* \"#utility.yul\":8378:8382   */\n  dup6\n    /* \"#utility.yul\":8332:8399   */\n  tag_92\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":8426:8427   */\n  0x00\n    /* \"#utility.yul\":8450:8454   */\n  0x20\n    /* \"#utility.yul\":8437:8454   */\n  swap1\n  pop\n    /* \"#utility.yul\":8482:8484   */\n  0x1f\n    /* \"#utility.yul\":8474:8480   */\n  dup4\n    /* \"#utility.yul\":8471:8485   */\n  gt\n    /* \"#utility.yul\":8499:8500   */\n  0x01\n    /* \"#utility.yul\":8494:9112   */\n  dup2\n  eq\n  tag_202\n  jumpi\n    /* \"#utility.yul\":9156:9157   */\n  0x00\n    /* \"#utility.yul\":9173:9179   */\n  dup5\n    /* \"#utility.yul\":9170:9247   */\n  iszero\n  tag_203\n  jumpi\n    /* \"#utility.yul\":9222:9231   */\n  dup3\n    /* \"#utility.yul\":9217:9220   */\n  dup8\n    /* \"#utility.yul\":9213:9232   */\n  add\n    /* \"#utility.yul\":9207:9233   */\n  mload\n    /* \"#utility.yul\":9198:9233   */\n  swap1\n  pop\n    /* \"#utility.yul\":9170:9247   */\ntag_203:\n    /* \"#utility.yul\":9273:9340   */\n  tag_204\n    /* \"#utility.yul\":9333:9339   */\n  dup6\n    /* \"#utility.yul\":9326:9331   */\n  dup3\n    /* \"#utility.yul\":9273:9340   */\n  tag_95\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":9267:9271   */\n  dup7\n    /* \"#utility.yul\":9260:9341   */\n  sstore\n    /* \"#utility.yul\":9129:9351   */\n  pop\n    /* \"#utility.yul\":8464:9351   */\n  jump(tag_201)\n    /* \"#utility.yul\":8494:9112   */\ntag_202:\n    /* \"#utility.yul\":8546:8550   */\n  0x1f\n    /* \"#utility.yul\":8542:8551   */\n  not\n    /* \"#utility.yul\":8534:8540   */\n  dup5\n    /* \"#utility.yul\":8530:8552   */\n  and\n    /* \"#utility.yul\":8580:8617   */\n  tag_205\n    /* \"#utility.yul\":8612:8616   */\n  dup7\n    /* \"#utility.yul\":8580:8617   */\n  tag_81\n  jump\t// in\ntag_205:\n    /* \"#utility.yul\":8639:8640   */\n  0x00\n    /* \"#utility.yul\":8653:8861   */\ntag_206:\n    /* \"#utility.yul\":8667:8674   */\n  dup3\n    /* \"#utility.yul\":8664:8665   */\n  dup2\n    /* \"#utility.yul\":8661:8675   */\n  lt\n    /* \"#utility.yul\":8653:8861   */\n  iszero\n  tag_208\n  jumpi\n    /* \"#utility.yul\":8746:8755   */\n  dup5\n    /* \"#utility.yul\":8741:8744   */\n  dup10\n    /* \"#utility.yul\":8737:8756   */\n  add\n    /* \"#utility.yul\":8731:8757   */\n  mload\n    /* \"#utility.yul\":8723:8729   */\n  dup3\n    /* \"#utility.yul\":8716:8758   */\n  sstore\n    /* \"#utility.yul\":8797:8798   */\n  0x01\n    /* \"#utility.yul\":8789:8795   */\n  dup3\n    /* \"#utility.yul\":8785:8799   */\n  add\n    /* \"#utility.yul\":8775:8799   */\n  swap2\n  pop\n    /* \"#utility.yul\":8844:8846   */\n  0x20\n    /* \"#utility.yul\":8833:8842   */\n  dup6\n    /* \"#utility.yul\":8829:8847   */\n  add\n    /* \"#utility.yul\":8816:8847   */\n  swap5\n  pop\n    /* \"#utility.yul\":8690:8694   */\n  0x20\n    /* \"#utility.yul\":8687:8688   */\n  dup2\n    /* \"#utility.yul\":8683:8695   */\n  add\n    /* \"#utility.yul\":8678:8695   */\n  swap1\n  pop\n    /* \"#utility.yul\":8653:8861   */\n  jump(tag_206)\ntag_208:\n    /* \"#utility.yul\":8889:8895   */\n  dup7\n    /* \"#utility.yul\":8880:8887   */\n  dup4\n    /* \"#utility.yul\":8877:8896   */\n  lt\n    /* \"#utility.yul\":8874:9053   */\n  iszero\n  tag_209\n  jumpi\n    /* \"#utility.yul\":8947:8956   */\n  dup5\n    /* \"#utility.yul\":8942:8945   */\n  dup10\n    /* \"#utility.yul\":8938:8957   */\n  add\n    /* \"#utility.yul\":8932:8958   */\n  mload\n    /* \"#utility.yul\":8990:9038   */\n  tag_210\n    /* \"#utility.yul\":9032:9036   */\n  0x1f\n    /* \"#utility.yul\":9024:9030   */\n  dup10\n    /* \"#utility.yul\":9020:9037   */\n  and\n    /* \"#utility.yul\":9009:9018   */\n  dup3\n    /* \"#utility.yul\":8990:9038   */\n  tag_94\n  jump\t// in\ntag_210:\n    /* \"#utility.yul\":8982:8988   */\n  dup4\n    /* \"#utility.yul\":8975:9039   */\n  sstore\n    /* \"#utility.yul\":8897:9053   */\n  pop\n    /* \"#utility.yul\":8874:9053   */\ntag_209:\n    /* \"#utility.yul\":9099:9100   */\n  0x01\n    /* \"#utility.yul\":9095:9096   */\n  0x02\n    /* \"#utility.yul\":9087:9093   */\n  dup9\n    /* \"#utility.yul\":9083:9097   */\n  mul\n    /* \"#utility.yul\":9079:9101   */\n  add\n    /* \"#utility.yul\":9073:9077   */\n  dup9\n    /* \"#utility.yul\":9066:9102   */\n  sstore\n    /* \"#utility.yul\":8501:9112   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8464:9351   */\ntag_201:\n  pop\n    /* \"#utility.yul\":8054:9357   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7962:9357   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9363:9481   */\ntag_96:\n    /* \"#utility.yul\":9450:9474   */\n  tag_212\n    /* \"#utility.yul\":9468:9473   */\n  dup2\n    /* \"#utility.yul\":9450:9474   */\n  tag_74\n  jump\t// in\ntag_212:\n    /* \"#utility.yul\":9445:9448   */\n  dup3\n    /* \"#utility.yul\":9438:9475   */\n  mstore\n    /* \"#utility.yul\":9363:9481   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9487:9709   */\ntag_20:\n    /* \"#utility.yul\":9580:9584   */\n  0x00\n    /* \"#utility.yul\":9618:9620   */\n  0x20\n    /* \"#utility.yul\":9607:9616   */\n  dup3\n    /* \"#utility.yul\":9603:9621   */\n  add\n    /* \"#utility.yul\":9595:9621   */\n  swap1\n  pop\n    /* \"#utility.yul\":9631:9702   */\n  tag_214\n    /* \"#utility.yul\":9699:9700   */\n  0x00\n    /* \"#utility.yul\":9688:9697   */\n  dup4\n    /* \"#utility.yul\":9684:9701   */\n  add\n    /* \"#utility.yul\":9675:9681   */\n  dup5\n    /* \"#utility.yul\":9631:9702   */\n  tag_96\n  jump\t// in\ntag_214:\n    /* \"#utility.yul\":9487:9709   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9715:9906   */\ntag_46:\n    /* \"#utility.yul\":9755:9758   */\n  0x00\n    /* \"#utility.yul\":9774:9794   */\n  tag_216\n    /* \"#utility.yul\":9792:9793   */\n  dup3\n    /* \"#utility.yul\":9774:9794   */\n  tag_69\n  jump\t// in\ntag_216:\n    /* \"#utility.yul\":9769:9794   */\n  swap2\n  pop\n    /* \"#utility.yul\":9808:9828   */\n  tag_217\n    /* \"#utility.yul\":9826:9827   */\n  dup4\n    /* \"#utility.yul\":9808:9828   */\n  tag_69\n  jump\t// in\ntag_217:\n    /* \"#utility.yul\":9803:9828   */\n  swap3\n  pop\n    /* \"#utility.yul\":9851:9852   */\n  dup3\n    /* \"#utility.yul\":9848:9849   */\n  dup3\n    /* \"#utility.yul\":9844:9853   */\n  add\n    /* \"#utility.yul\":9837:9853   */\n  swap1\n  pop\n    /* \"#utility.yul\":9872:9875   */\n  dup1\n    /* \"#utility.yul\":9869:9870   */\n  dup3\n    /* \"#utility.yul\":9866:9876   */\n  gt\n    /* \"#utility.yul\":9863:9899   */\n  iszero\n  tag_218\n  jumpi\n    /* \"#utility.yul\":9879:9897   */\n  tag_219\n  tag_65\n  jump\t// in\ntag_219:\n    /* \"#utility.yul\":9863:9899   */\ntag_218:\n    /* \"#utility.yul\":9715:9906   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9912:10030   */\ntag_97:\n    /* \"#utility.yul\":9999:10023   */\n  tag_221\n    /* \"#utility.yul\":10017:10022   */\n  dup2\n    /* \"#utility.yul\":9999:10023   */\n  tag_69\n  jump\t// in\ntag_221:\n    /* \"#utility.yul\":9994:9997   */\n  dup3\n    /* \"#utility.yul\":9987:10024   */\n  mstore\n    /* \"#utility.yul\":9912:10030   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10036:10478   */\ntag_50:\n    /* \"#utility.yul\":10185:10189   */\n  0x00\n    /* \"#utility.yul\":10223:10225   */\n  0x60\n    /* \"#utility.yul\":10212:10221   */\n  dup3\n    /* \"#utility.yul\":10208:10226   */\n  add\n    /* \"#utility.yul\":10200:10226   */\n  swap1\n  pop\n    /* \"#utility.yul\":10236:10307   */\n  tag_223\n    /* \"#utility.yul\":10304:10305   */\n  0x00\n    /* \"#utility.yul\":10293:10302   */\n  dup4\n    /* \"#utility.yul\":10289:10306   */\n  add\n    /* \"#utility.yul\":10280:10286   */\n  dup7\n    /* \"#utility.yul\":10236:10307   */\n  tag_96\n  jump\t// in\ntag_223:\n    /* \"#utility.yul\":10317:10389   */\n  tag_224\n    /* \"#utility.yul\":10385:10387   */\n  0x20\n    /* \"#utility.yul\":10374:10383   */\n  dup4\n    /* \"#utility.yul\":10370:10388   */\n  add\n    /* \"#utility.yul\":10361:10367   */\n  dup6\n    /* \"#utility.yul\":10317:10389   */\n  tag_97\n  jump\t// in\ntag_224:\n    /* \"#utility.yul\":10399:10471   */\n  tag_225\n    /* \"#utility.yul\":10467:10469   */\n  0x40\n    /* \"#utility.yul\":10456:10465   */\n  dup4\n    /* \"#utility.yul\":10452:10470   */\n  add\n    /* \"#utility.yul\":10443:10449   */\n  dup5\n    /* \"#utility.yul\":10399:10471   */\n  tag_97\n  jump\t// in\ntag_225:\n    /* \"#utility.yul\":10036:10478   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10484:10706   */\ntag_54:\n    /* \"#utility.yul\":10577:10581   */\n  0x00\n    /* \"#utility.yul\":10615:10617   */\n  0x20\n    /* \"#utility.yul\":10604:10613   */\n  dup3\n    /* \"#utility.yul\":10600:10618   */\n  add\n    /* \"#utility.yul\":10592:10618   */\n  swap1\n  pop\n    /* \"#utility.yul\":10628:10699   */\n  tag_227\n    /* \"#utility.yul\":10696:10697   */\n  0x00\n    /* \"#utility.yul\":10685:10694   */\n  dup4\n    /* \"#utility.yul\":10681:10698   */\n  add\n    /* \"#utility.yul\":10672:10678   */\n  dup5\n    /* \"#utility.yul\":10628:10699   */\n  tag_97\n  jump\t// in\ntag_227:\n    /* \"#utility.yul\":10484:10706   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Backend/TokenContract.sol\":168:4127  contract TokenContract is ERC20, Ownable {... */\ntag_28:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Backend/TokenContract.sol\":168:4127  contract TokenContract is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x9dc29fac\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xe4e103dc\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x23b872dd\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x378dc3dc\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0700037d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Backend/TokenContract.sol\":505:547  mapping(address => uint256) public rewards */\n    tag_4:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Backend/TokenContract.sol\":3428:3616  function approve(address spender, uint256 amount) public override returns (bool) {... */\n    tag_5:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Backend/TokenContract.sol\":3925:4125  function transferFrom(address from, address to, uint256 amount) public override returns (bool) {... */\n    tag_7:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Backend/TokenContract.sol\":368:436  uint256 public initialSupply = 1000000 * (10 ** uint256(decimals())) */\n    tag_9:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Backend/TokenContract.sol\":1291:1510  function mint(address to, uint256 amount) external onlyOwner {... */\n    tag_10:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      stop\n        /* \"Backend/TokenContract.sol\":2969:3147  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_11:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_13:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_14:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Backend/TokenContract.sol\":1698:1851  function burn(address from, uint256 amount) external onlyOwner {... */\n    tag_15:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      stop\n        /* \"Backend/TokenContract.sol\":2582:2765  function transfer(address to, uint256 amount) public override returns (bool) {... */\n    tag_16:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_17:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Backend/TokenContract.sol\":2072:2307  function rewardUser(address user, uint256 amount) external onlyOwner {... */\n    tag_18:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_89\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_90\n      jump\t// in\n    tag_91:\n      dup1\n      iszero\n      tag_92\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_93\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_92)\n    tag_93:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_94:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_94\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_92:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Backend/TokenContract.sol\":505:547  mapping(address => uint256) public rewards */\n    tag_30:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"Backend/TokenContract.sol\":3428:3616  function approve(address spender, uint256 amount) public override returns (bool) {... */\n    tag_36:\n        /* \"Backend/TokenContract.sol\":3503:3507  bool */\n      0x00\n        /* \"Backend/TokenContract.sol\":3526:3556  super.approve(spender, amount) */\n      tag_96\n        /* \"Backend/TokenContract.sol\":3540:3547  spender */\n      dup4\n        /* \"Backend/TokenContract.sol\":3549:3555  amount */\n      dup4\n        /* \"Backend/TokenContract.sol\":3526:3539  super.approve */\n      tag_97\n        /* \"Backend/TokenContract.sol\":3526:3556  super.approve(spender, amount) */\n      jump\t// in\n    tag_96:\n        /* \"Backend/TokenContract.sol\":3519:3556  return super.approve(spender, amount) */\n      swap1\n      pop\n        /* \"Backend/TokenContract.sol\":3428:3616  function approve(address spender, uint256 amount) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Backend/TokenContract.sol\":3925:4125  function transferFrom(address from, address to, uint256 amount) public override returns (bool) {... */\n    tag_45:\n        /* \"Backend/TokenContract.sol\":4014:4018  bool */\n      0x00\n        /* \"Backend/TokenContract.sol\":4037:4073  super.transferFrom(from, to, amount) */\n      tag_100\n        /* \"Backend/TokenContract.sol\":4056:4060  from */\n      dup5\n        /* \"Backend/TokenContract.sol\":4062:4064  to */\n      dup5\n        /* \"Backend/TokenContract.sol\":4066:4072  amount */\n      dup5\n        /* \"Backend/TokenContract.sol\":4037:4055  super.transferFrom */\n      tag_101\n        /* \"Backend/TokenContract.sol\":4037:4073  super.transferFrom(from, to, amount) */\n      jump\t// in\n    tag_100:\n        /* \"Backend/TokenContract.sol\":4030:4073  return super.transferFrom(from, to, amount) */\n      swap1\n      pop\n        /* \"Backend/TokenContract.sol\":3925:4125  function transferFrom(address from, address to, uint256 amount) public override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"Backend/TokenContract.sol\":368:436  uint256 public initialSupply = 1000000 * (10 ** uint256(decimals())) */\n    tag_52:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"Backend/TokenContract.sol\":1291:1510  function mint(address to, uint256 amount) external onlyOwner {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_104\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_105\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_104:\n        /* \"Backend/TokenContract.sol\":1362:1379  _mint(to, amount) */\n      tag_107\n        /* \"Backend/TokenContract.sol\":1368:1370  to */\n      dup3\n        /* \"Backend/TokenContract.sol\":1372:1378  amount */\n      dup3\n        /* \"Backend/TokenContract.sol\":1362:1367  _mint */\n      tag_108\n        /* \"Backend/TokenContract.sol\":1362:1379  _mint(to, amount) */\n      jump\t// in\n    tag_107:\n        /* \"Backend/TokenContract.sol\":1457:1459  to */\n      dup2\n        /* \"Backend/TokenContract.sol\":1444:1468  TokensMinted(to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3f2c9d57c068687834f0de942a9babb9e5acab57d516d3480a3c16ee165a4273\n        /* \"Backend/TokenContract.sol\":1461:1467  amount */\n      dup3\n        /* \"Backend/TokenContract.sol\":1444:1468  TokensMinted(to, amount) */\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Backend/TokenContract.sol\":1291:1510  function mint(address to, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Backend/TokenContract.sol\":2969:3147  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_59:\n        /* \"Backend/TokenContract.sol\":3035:3042  uint256 */\n      0x00\n        /* \"Backend/TokenContract.sol\":3061:3085  super.balanceOf(account) */\n      tag_111\n        /* \"Backend/TokenContract.sol\":3077:3084  account */\n      dup3\n        /* \"Backend/TokenContract.sol\":3061:3076  super.balanceOf */\n      tag_112\n        /* \"Backend/TokenContract.sol\":3061:3085  super.balanceOf(account) */\n      jump\t// in\n    tag_111:\n        /* \"Backend/TokenContract.sol\":3054:3085  return super.balanceOf(account) */\n      swap1\n      pop\n        /* \"Backend/TokenContract.sol\":2969:3147  function balanceOf(address account) public view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_114\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_105\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_120\n      swap1\n      tag_90\n      jump\t// in\n    tag_120:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_121\n      swap1\n      tag_90\n      jump\t// in\n    tag_121:\n      dup1\n      iszero\n      tag_122\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_123\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_122)\n    tag_123:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_124:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_124\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_122:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Backend/TokenContract.sol\":1698:1851  function burn(address from, uint256 amount) external onlyOwner {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_126\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_105\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_126:\n        /* \"Backend/TokenContract.sol\":1771:1790  _burn(from, amount) */\n      tag_128\n        /* \"Backend/TokenContract.sol\":1777:1781  from */\n      dup3\n        /* \"Backend/TokenContract.sol\":1783:1789  amount */\n      dup3\n        /* \"Backend/TokenContract.sol\":1771:1776  _burn */\n      tag_129\n        /* \"Backend/TokenContract.sol\":1771:1790  _burn(from, amount) */\n      jump\t// in\n    tag_128:\n        /* \"Backend/TokenContract.sol\":1698:1851  function burn(address from, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Backend/TokenContract.sol\":2582:2765  function transfer(address to, uint256 amount) public override returns (bool) {... */\n    tag_75:\n        /* \"Backend/TokenContract.sol\":2653:2657  bool */\n      0x00\n        /* \"Backend/TokenContract.sol\":2676:2702  super.transfer(to, amount) */\n      tag_131\n        /* \"Backend/TokenContract.sol\":2691:2693  to */\n      dup4\n        /* \"Backend/TokenContract.sol\":2695:2701  amount */\n      dup4\n        /* \"Backend/TokenContract.sol\":2676:2690  super.transfer */\n      tag_132\n        /* \"Backend/TokenContract.sol\":2676:2702  super.transfer(to, amount) */\n      jump\t// in\n    tag_131:\n        /* \"Backend/TokenContract.sol\":2669:2702  return super.transfer(to, amount) */\n      swap1\n      pop\n        /* \"Backend/TokenContract.sol\":2582:2765  function transfer(address to, uint256 amount) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Backend/TokenContract.sol\":2072:2307  function rewardUser(address user, uint256 amount) external onlyOwner {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_105\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_135:\n        /* \"Backend/TokenContract.sol\":2151:2170  _mint(user, amount) */\n      tag_137\n        /* \"Backend/TokenContract.sol\":2157:2161  user */\n      dup3\n        /* \"Backend/TokenContract.sol\":2163:2169  amount */\n      dup3\n        /* \"Backend/TokenContract.sol\":2151:2156  _mint */\n      tag_108\n        /* \"Backend/TokenContract.sol\":2151:2170  _mint(user, amount) */\n      jump\t// in\n    tag_137:\n        /* \"Backend/TokenContract.sol\":2250:2256  amount */\n      dup1\n        /* \"Backend/TokenContract.sol\":2234:2241  rewards */\n      0x07\n        /* \"Backend/TokenContract.sol\":2234:2247  rewards[user] */\n      0x00\n        /* \"Backend/TokenContract.sol\":2242:2246  user */\n      dup5\n        /* \"Backend/TokenContract.sol\":2234:2247  rewards[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Backend/TokenContract.sol\":2234:2256  rewards[user] + amount */\n      tag_138\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n        /* \"Backend/TokenContract.sol\":2218:2225  rewards */\n      0x07\n        /* \"Backend/TokenContract.sol\":2218:2231  rewards[user] */\n      0x00\n        /* \"Backend/TokenContract.sol\":2226:2230  user */\n      dup5\n        /* \"Backend/TokenContract.sol\":2218:2231  rewards[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Backend/TokenContract.sol\":2218:2256  rewards[user] = rewards[user] + amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Backend/TokenContract.sol\":2072:2307  function rewardUser(address user, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_105\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_143\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_147\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_150\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_153\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_158\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_148\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_159\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_64\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_160\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_161\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_148\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_164\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8073:8074  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8061  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n      tag_171\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8125:8126  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8156:8163  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8173:8174  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8177:8182  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8155  _update */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10600:10617  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10617  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n      tag_183\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10656:10661  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10653  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10661  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n      iszero\n      tag_184\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10715:10722  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10724:10740  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10742:10747  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      tag_187\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10813:10818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10820:10827  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10853  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10845  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10853  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10855:10860  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10812  _approve */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10892  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_189\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_191\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_195\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_196\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_196:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_197)\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_198\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_200\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_201)\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_201:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_202\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_204\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_206\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_208\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_209\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_210:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_211:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_212:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_237:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_237)\n    tag_239:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_213:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_214:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_242\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_210\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":818:889   */\n      tag_243\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_211\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_244\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_212\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":988:1017   */\n      tag_245\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_213\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_26:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_247\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_214\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_216:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_218:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_219:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_253\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_218\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_220:\n        /* \"#utility.yul\":1983:2007   */\n      tag_255\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_219\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_256\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_256:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_221:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_258\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_220\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2512   */\n    tag_29:\n        /* \"#utility.yul\":2242:2248   */\n      0x00\n        /* \"#utility.yul\":2291:2293   */\n      0x20\n        /* \"#utility.yul\":2279:2288   */\n      dup3\n        /* \"#utility.yul\":2270:2277   */\n      dup5\n        /* \"#utility.yul\":2266:2289   */\n      sub\n        /* \"#utility.yul\":2262:2294   */\n      slt\n        /* \"#utility.yul\":2259:2378   */\n      iszero\n      tag_260\n      jumpi\n        /* \"#utility.yul\":2297:2376   */\n      tag_261\n      tag_216\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":2259:2378   */\n    tag_260:\n        /* \"#utility.yul\":2417:2418   */\n      0x00\n        /* \"#utility.yul\":2442:2495   */\n      tag_262\n        /* \"#utility.yul\":2487:2494   */\n      dup5\n        /* \"#utility.yul\":2478:2484   */\n      dup3\n        /* \"#utility.yul\":2467:2476   */\n      dup6\n        /* \"#utility.yul\":2463:2485   */\n      add\n        /* \"#utility.yul\":2442:2495   */\n      tag_221\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":2432:2495   */\n      swap2\n      pop\n        /* \"#utility.yul\":2388:2505   */\n      pop\n        /* \"#utility.yul\":2183:2512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2518:2595   */\n    tag_222:\n        /* \"#utility.yul\":2555:2562   */\n      0x00\n        /* \"#utility.yul\":2584:2589   */\n      dup2\n        /* \"#utility.yul\":2573:2589   */\n      swap1\n      pop\n        /* \"#utility.yul\":2518:2595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2601:2719   */\n    tag_223:\n        /* \"#utility.yul\":2688:2712   */\n      tag_265\n        /* \"#utility.yul\":2706:2711   */\n      dup2\n        /* \"#utility.yul\":2688:2712   */\n      tag_222\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":2683:2686   */\n      dup3\n        /* \"#utility.yul\":2676:2713   */\n      mstore\n        /* \"#utility.yul\":2601:2719   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2725:2947   */\n    tag_32:\n        /* \"#utility.yul\":2818:2822   */\n      0x00\n        /* \"#utility.yul\":2856:2858   */\n      0x20\n        /* \"#utility.yul\":2845:2854   */\n      dup3\n        /* \"#utility.yul\":2841:2859   */\n      add\n        /* \"#utility.yul\":2833:2859   */\n      swap1\n      pop\n        /* \"#utility.yul\":2869:2940   */\n      tag_267\n        /* \"#utility.yul\":2937:2938   */\n      0x00\n        /* \"#utility.yul\":2926:2935   */\n      dup4\n        /* \"#utility.yul\":2922:2939   */\n      add\n        /* \"#utility.yul\":2913:2919   */\n      dup5\n        /* \"#utility.yul\":2869:2940   */\n      tag_223\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":2725:2947   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2953:3075   */\n    tag_224:\n        /* \"#utility.yul\":3026:3050   */\n      tag_269\n        /* \"#utility.yul\":3044:3049   */\n      dup2\n        /* \"#utility.yul\":3026:3050   */\n      tag_222\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":3019:3024   */\n      dup2\n        /* \"#utility.yul\":3016:3051   */\n      eq\n        /* \"#utility.yul\":3006:3069   */\n      tag_270\n      jumpi\n        /* \"#utility.yul\":3065:3066   */\n      0x00\n        /* \"#utility.yul\":3062:3063   */\n      dup1\n        /* \"#utility.yul\":3055:3067   */\n      revert\n        /* \"#utility.yul\":3006:3069   */\n    tag_270:\n        /* \"#utility.yul\":2953:3075   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3081:3220   */\n    tag_225:\n        /* \"#utility.yul\":3127:3132   */\n      0x00\n        /* \"#utility.yul\":3165:3171   */\n      dup2\n        /* \"#utility.yul\":3152:3172   */\n      calldataload\n        /* \"#utility.yul\":3143:3172   */\n      swap1\n      pop\n        /* \"#utility.yul\":3181:3214   */\n      tag_272\n        /* \"#utility.yul\":3208:3213   */\n      dup2\n        /* \"#utility.yul\":3181:3214   */\n      tag_224\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":3081:3220   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3226:3700   */\n    tag_35:\n        /* \"#utility.yul\":3294:3300   */\n      0x00\n        /* \"#utility.yul\":3302:3308   */\n      dup1\n        /* \"#utility.yul\":3351:3353   */\n      0x40\n        /* \"#utility.yul\":3339:3348   */\n      dup4\n        /* \"#utility.yul\":3330:3337   */\n      dup6\n        /* \"#utility.yul\":3326:3349   */\n      sub\n        /* \"#utility.yul\":3322:3354   */\n      slt\n        /* \"#utility.yul\":3319:3438   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":3357:3436   */\n      tag_275\n      tag_216\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":3319:3438   */\n    tag_274:\n        /* \"#utility.yul\":3477:3478   */\n      0x00\n        /* \"#utility.yul\":3502:3555   */\n      tag_276\n        /* \"#utility.yul\":3547:3554   */\n      dup6\n        /* \"#utility.yul\":3538:3544   */\n      dup3\n        /* \"#utility.yul\":3527:3536   */\n      dup7\n        /* \"#utility.yul\":3523:3545   */\n      add\n        /* \"#utility.yul\":3502:3555   */\n      tag_221\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":3492:3555   */\n      swap3\n      pop\n        /* \"#utility.yul\":3448:3565   */\n      pop\n        /* \"#utility.yul\":3604:3606   */\n      0x20\n        /* \"#utility.yul\":3630:3683   */\n      tag_277\n        /* \"#utility.yul\":3675:3682   */\n      dup6\n        /* \"#utility.yul\":3666:3672   */\n      dup3\n        /* \"#utility.yul\":3655:3664   */\n      dup7\n        /* \"#utility.yul\":3651:3673   */\n      add\n        /* \"#utility.yul\":3630:3683   */\n      tag_225\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":3620:3683   */\n      swap2\n      pop\n        /* \"#utility.yul\":3575:3693   */\n      pop\n        /* \"#utility.yul\":3226:3700   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3706:3796   */\n    tag_226:\n        /* \"#utility.yul\":3740:3747   */\n      0x00\n        /* \"#utility.yul\":3783:3788   */\n      dup2\n        /* \"#utility.yul\":3776:3789   */\n      iszero\n        /* \"#utility.yul\":3769:3790   */\n      iszero\n        /* \"#utility.yul\":3758:3790   */\n      swap1\n      pop\n        /* \"#utility.yul\":3706:3796   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3802:3911   */\n    tag_227:\n        /* \"#utility.yul\":3883:3904   */\n      tag_280\n        /* \"#utility.yul\":3898:3903   */\n      dup2\n        /* \"#utility.yul\":3883:3904   */\n      tag_226\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":3878:3881   */\n      dup3\n        /* \"#utility.yul\":3871:3905   */\n      mstore\n        /* \"#utility.yul\":3802:3911   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3917:4127   */\n    tag_38:\n        /* \"#utility.yul\":4004:4008   */\n      0x00\n        /* \"#utility.yul\":4042:4044   */\n      0x20\n        /* \"#utility.yul\":4031:4040   */\n      dup3\n        /* \"#utility.yul\":4027:4045   */\n      add\n        /* \"#utility.yul\":4019:4045   */\n      swap1\n      pop\n        /* \"#utility.yul\":4055:4120   */\n      tag_282\n        /* \"#utility.yul\":4117:4118   */\n      0x00\n        /* \"#utility.yul\":4106:4115   */\n      dup4\n        /* \"#utility.yul\":4102:4119   */\n      add\n        /* \"#utility.yul\":4093:4099   */\n      dup5\n        /* \"#utility.yul\":4055:4120   */\n      tag_227\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":3917:4127   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4133:4752   */\n    tag_44:\n        /* \"#utility.yul\":4210:4216   */\n      0x00\n        /* \"#utility.yul\":4218:4224   */\n      dup1\n        /* \"#utility.yul\":4226:4232   */\n      0x00\n        /* \"#utility.yul\":4275:4277   */\n      0x60\n        /* \"#utility.yul\":4263:4272   */\n      dup5\n        /* \"#utility.yul\":4254:4261   */\n      dup7\n        /* \"#utility.yul\":4250:4273   */\n      sub\n        /* \"#utility.yul\":4246:4278   */\n      slt\n        /* \"#utility.yul\":4243:4362   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":4281:4360   */\n      tag_285\n      tag_216\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":4243:4362   */\n    tag_284:\n        /* \"#utility.yul\":4401:4402   */\n      0x00\n        /* \"#utility.yul\":4426:4479   */\n      tag_286\n        /* \"#utility.yul\":4471:4478   */\n      dup7\n        /* \"#utility.yul\":4462:4468   */\n      dup3\n        /* \"#utility.yul\":4451:4460   */\n      dup8\n        /* \"#utility.yul\":4447:4469   */\n      add\n        /* \"#utility.yul\":4426:4479   */\n      tag_221\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":4416:4479   */\n      swap4\n      pop\n        /* \"#utility.yul\":4372:4489   */\n      pop\n        /* \"#utility.yul\":4528:4530   */\n      0x20\n        /* \"#utility.yul\":4554:4607   */\n      tag_287\n        /* \"#utility.yul\":4599:4606   */\n      dup7\n        /* \"#utility.yul\":4590:4596   */\n      dup3\n        /* \"#utility.yul\":4579:4588   */\n      dup8\n        /* \"#utility.yul\":4575:4597   */\n      add\n        /* \"#utility.yul\":4554:4607   */\n      tag_221\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":4544:4607   */\n      swap3\n      pop\n        /* \"#utility.yul\":4499:4617   */\n      pop\n        /* \"#utility.yul\":4656:4658   */\n      0x40\n        /* \"#utility.yul\":4682:4735   */\n      tag_288\n        /* \"#utility.yul\":4727:4734   */\n      dup7\n        /* \"#utility.yul\":4718:4724   */\n      dup3\n        /* \"#utility.yul\":4707:4716   */\n      dup8\n        /* \"#utility.yul\":4703:4725   */\n      add\n        /* \"#utility.yul\":4682:4735   */\n      tag_225\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":4672:4735   */\n      swap2\n      pop\n        /* \"#utility.yul\":4627:4745   */\n      pop\n        /* \"#utility.yul\":4133:4752   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4758:4844   */\n    tag_228:\n        /* \"#utility.yul\":4793:4800   */\n      0x00\n        /* \"#utility.yul\":4833:4837   */\n      0xff\n        /* \"#utility.yul\":4826:4831   */\n      dup3\n        /* \"#utility.yul\":4822:4838   */\n      and\n        /* \"#utility.yul\":4811:4838   */\n      swap1\n      pop\n        /* \"#utility.yul\":4758:4844   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4850:4962   */\n    tag_229:\n        /* \"#utility.yul\":4933:4955   */\n      tag_291\n        /* \"#utility.yul\":4949:4954   */\n      dup2\n        /* \"#utility.yul\":4933:4955   */\n      tag_228\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":4928:4931   */\n      dup3\n        /* \"#utility.yul\":4921:4956   */\n      mstore\n        /* \"#utility.yul\":4850:4962   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4968:5182   */\n    tag_50:\n        /* \"#utility.yul\":5057:5061   */\n      0x00\n        /* \"#utility.yul\":5095:5097   */\n      0x20\n        /* \"#utility.yul\":5084:5093   */\n      dup3\n        /* \"#utility.yul\":5080:5098   */\n      add\n        /* \"#utility.yul\":5072:5098   */\n      swap1\n      pop\n        /* \"#utility.yul\":5108:5175   */\n      tag_293\n        /* \"#utility.yul\":5172:5173   */\n      0x00\n        /* \"#utility.yul\":5161:5170   */\n      dup4\n        /* \"#utility.yul\":5157:5174   */\n      add\n        /* \"#utility.yul\":5148:5154   */\n      dup5\n        /* \"#utility.yul\":5108:5175   */\n      tag_229\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":4968:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5306   */\n    tag_230:\n        /* \"#utility.yul\":5275:5299   */\n      tag_295\n        /* \"#utility.yul\":5293:5298   */\n      dup2\n        /* \"#utility.yul\":5275:5299   */\n      tag_219\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":5270:5273   */\n      dup3\n        /* \"#utility.yul\":5263:5300   */\n      mstore\n        /* \"#utility.yul\":5188:5306   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5312:5534   */\n    tag_66:\n        /* \"#utility.yul\":5405:5409   */\n      0x00\n        /* \"#utility.yul\":5443:5445   */\n      0x20\n        /* \"#utility.yul\":5432:5441   */\n      dup3\n        /* \"#utility.yul\":5428:5446   */\n      add\n        /* \"#utility.yul\":5420:5446   */\n      swap1\n      pop\n        /* \"#utility.yul\":5456:5527   */\n      tag_297\n        /* \"#utility.yul\":5524:5525   */\n      0x00\n        /* \"#utility.yul\":5513:5522   */\n      dup4\n        /* \"#utility.yul\":5509:5526   */\n      add\n        /* \"#utility.yul\":5500:5506   */\n      dup5\n        /* \"#utility.yul\":5456:5527   */\n      tag_230\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":5312:5534   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5540:6014   */\n    tag_79:\n        /* \"#utility.yul\":5608:5614   */\n      0x00\n        /* \"#utility.yul\":5616:5622   */\n      dup1\n        /* \"#utility.yul\":5665:5667   */\n      0x40\n        /* \"#utility.yul\":5653:5662   */\n      dup4\n        /* \"#utility.yul\":5644:5651   */\n      dup6\n        /* \"#utility.yul\":5640:5663   */\n      sub\n        /* \"#utility.yul\":5636:5668   */\n      slt\n        /* \"#utility.yul\":5633:5752   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":5671:5750   */\n      tag_300\n      tag_216\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":5633:5752   */\n    tag_299:\n        /* \"#utility.yul\":5791:5792   */\n      0x00\n        /* \"#utility.yul\":5816:5869   */\n      tag_301\n        /* \"#utility.yul\":5861:5868   */\n      dup6\n        /* \"#utility.yul\":5852:5858   */\n      dup3\n        /* \"#utility.yul\":5841:5850   */\n      dup7\n        /* \"#utility.yul\":5837:5859   */\n      add\n        /* \"#utility.yul\":5816:5869   */\n      tag_221\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":5806:5869   */\n      swap3\n      pop\n        /* \"#utility.yul\":5762:5879   */\n      pop\n        /* \"#utility.yul\":5918:5920   */\n      0x20\n        /* \"#utility.yul\":5944:5997   */\n      tag_302\n        /* \"#utility.yul\":5989:5996   */\n      dup6\n        /* \"#utility.yul\":5980:5986   */\n      dup3\n        /* \"#utility.yul\":5969:5978   */\n      dup7\n        /* \"#utility.yul\":5965:5987   */\n      add\n        /* \"#utility.yul\":5944:5997   */\n      tag_221\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":5934:5997   */\n      swap2\n      pop\n        /* \"#utility.yul\":5889:6007   */\n      pop\n        /* \"#utility.yul\":5540:6014   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6020:6200   */\n    tag_231:\n        /* \"#utility.yul\":6068:6145   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6065:6066   */\n      0x00\n        /* \"#utility.yul\":6058:6146   */\n      mstore\n        /* \"#utility.yul\":6165:6169   */\n      0x22\n        /* \"#utility.yul\":6162:6163   */\n      0x04\n        /* \"#utility.yul\":6155:6170   */\n      mstore\n        /* \"#utility.yul\":6189:6193   */\n      0x24\n        /* \"#utility.yul\":6186:6187   */\n      0x00\n        /* \"#utility.yul\":6179:6194   */\n      revert\n        /* \"#utility.yul\":6206:6526   */\n    tag_90:\n        /* \"#utility.yul\":6250:6256   */\n      0x00\n        /* \"#utility.yul\":6287:6288   */\n      0x02\n        /* \"#utility.yul\":6281:6285   */\n      dup3\n        /* \"#utility.yul\":6277:6289   */\n      div\n        /* \"#utility.yul\":6267:6289   */\n      swap1\n      pop\n        /* \"#utility.yul\":6334:6335   */\n      0x01\n        /* \"#utility.yul\":6328:6332   */\n      dup3\n        /* \"#utility.yul\":6324:6336   */\n      and\n        /* \"#utility.yul\":6355:6373   */\n      dup1\n        /* \"#utility.yul\":6345:6426   */\n      tag_305\n      jumpi\n        /* \"#utility.yul\":6411:6415   */\n      0x7f\n        /* \"#utility.yul\":6403:6409   */\n      dup3\n        /* \"#utility.yul\":6399:6416   */\n      and\n        /* \"#utility.yul\":6389:6416   */\n      swap2\n      pop\n        /* \"#utility.yul\":6345:6426   */\n    tag_305:\n        /* \"#utility.yul\":6473:6475   */\n      0x20\n        /* \"#utility.yul\":6465:6471   */\n      dup3\n        /* \"#utility.yul\":6462:6476   */\n      lt\n        /* \"#utility.yul\":6442:6460   */\n      dup2\n        /* \"#utility.yul\":6439:6477   */\n      sub\n        /* \"#utility.yul\":6436:6520   */\n      tag_306\n      jumpi\n        /* \"#utility.yul\":6492:6510   */\n      tag_307\n      tag_231\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":6436:6520   */\n    tag_306:\n        /* \"#utility.yul\":6257:6526   */\n      pop\n        /* \"#utility.yul\":6206:6526   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6532:6712   */\n    tag_232:\n        /* \"#utility.yul\":6580:6657   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6577:6578   */\n      0x00\n        /* \"#utility.yul\":6570:6658   */\n      mstore\n        /* \"#utility.yul\":6677:6681   */\n      0x11\n        /* \"#utility.yul\":6674:6675   */\n      0x04\n        /* \"#utility.yul\":6667:6682   */\n      mstore\n        /* \"#utility.yul\":6701:6705   */\n      0x24\n        /* \"#utility.yul\":6698:6699   */\n      0x00\n        /* \"#utility.yul\":6691:6706   */\n      revert\n        /* \"#utility.yul\":6718:6909   */\n    tag_139:\n        /* \"#utility.yul\":6758:6761   */\n      0x00\n        /* \"#utility.yul\":6777:6797   */\n      tag_310\n        /* \"#utility.yul\":6795:6796   */\n      dup3\n        /* \"#utility.yul\":6777:6797   */\n      tag_222\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":6772:6797   */\n      swap2\n      pop\n        /* \"#utility.yul\":6811:6831   */\n      tag_311\n        /* \"#utility.yul\":6829:6830   */\n      dup4\n        /* \"#utility.yul\":6811:6831   */\n      tag_222\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":6806:6831   */\n      swap3\n      pop\n        /* \"#utility.yul\":6854:6855   */\n      dup3\n        /* \"#utility.yul\":6851:6852   */\n      dup3\n        /* \"#utility.yul\":6847:6856   */\n      add\n        /* \"#utility.yul\":6840:6856   */\n      swap1\n      pop\n        /* \"#utility.yul\":6875:6878   */\n      dup1\n        /* \"#utility.yul\":6872:6873   */\n      dup3\n        /* \"#utility.yul\":6869:6879   */\n      gt\n        /* \"#utility.yul\":6866:6902   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":6882:6900   */\n      tag_313\n      tag_232\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":6866:6902   */\n    tag_312:\n        /* \"#utility.yul\":6718:6909   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6915:7357   */\n    tag_186:\n        /* \"#utility.yul\":7064:7068   */\n      0x00\n        /* \"#utility.yul\":7102:7104   */\n      0x60\n        /* \"#utility.yul\":7091:7100   */\n      dup3\n        /* \"#utility.yul\":7087:7105   */\n      add\n        /* \"#utility.yul\":7079:7105   */\n      swap1\n      pop\n        /* \"#utility.yul\":7115:7186   */\n      tag_315\n        /* \"#utility.yul\":7183:7184   */\n      0x00\n        /* \"#utility.yul\":7172:7181   */\n      dup4\n        /* \"#utility.yul\":7168:7185   */\n      add\n        /* \"#utility.yul\":7159:7165   */\n      dup7\n        /* \"#utility.yul\":7115:7186   */\n      tag_230\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":7196:7268   */\n      tag_316\n        /* \"#utility.yul\":7264:7266   */\n      0x20\n        /* \"#utility.yul\":7253:7262   */\n      dup4\n        /* \"#utility.yul\":7249:7267   */\n      add\n        /* \"#utility.yul\":7240:7246   */\n      dup6\n        /* \"#utility.yul\":7196:7268   */\n      tag_223\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":7278:7350   */\n      tag_317\n        /* \"#utility.yul\":7346:7348   */\n      0x40\n        /* \"#utility.yul\":7335:7344   */\n      dup4\n        /* \"#utility.yul\":7331:7349   */\n      add\n        /* \"#utility.yul\":7322:7328   */\n      dup5\n        /* \"#utility.yul\":7278:7350   */\n      tag_223\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":6915:7357   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e607775e84c94630f95198c2b351f27baba26c68422d2b3367cf3d08349b98ae64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_986": {
									"entryPoint": null,
									"id": 986,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1470,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 633,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 1632,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 438,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 922,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 430,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1639,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 771,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 2302,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 2324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3305,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3322,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2372,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3247,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1736,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 2069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1826,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2149,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2824,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2258,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2060,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2786,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2663,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2975,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2542,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2946,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2916,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1679,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2427,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2382,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2223,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 2557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 1724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2569,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2711,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2754,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10709:7",
										"nodeType": "YulBlock",
										"src": "0:10709:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "35:152:7",
													"nodeType": "YulBlock",
													"src": "35:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "52:1:7",
																		"nodeType": "YulLiteral",
																		"src": "52:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "55:77:7",
																		"nodeType": "YulLiteral",
																		"src": "55:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "45:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "45:6:7"
																},
																"nativeSrc": "45:88:7",
																"nodeType": "YulFunctionCall",
																"src": "45:88:7"
															},
															"nativeSrc": "45:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "45:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "149:1:7",
																		"nodeType": "YulLiteral",
																		"src": "149:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "152:4:7",
																		"nodeType": "YulLiteral",
																		"src": "152:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "142:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "142:6:7"
																},
																"nativeSrc": "142:15:7",
																"nodeType": "YulFunctionCall",
																"src": "142:15:7"
															},
															"nativeSrc": "142:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "142:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "173:1:7",
																		"nodeType": "YulLiteral",
																		"src": "173:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "176:4:7",
																		"nodeType": "YulLiteral",
																		"src": "176:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "166:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:7"
																},
																"nativeSrc": "166:15:7",
																"nodeType": "YulFunctionCall",
																"src": "166:15:7"
															},
															"nativeSrc": "166:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "166:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "7:180:7"
											},
											{
												"body": {
													"nativeSrc": "244:51:7",
													"nodeType": "YulBlock",
													"src": "244:51:7",
													"statements": [
														{
															"nativeSrc": "254:34:7",
															"nodeType": "YulAssignment",
															"src": "254:34:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "279:1:7",
																		"nodeType": "YulLiteral",
																		"src": "279:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "282:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "282:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "275:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:7"
																},
																"nativeSrc": "275:13:7",
																"nodeType": "YulFunctionCall",
																"src": "275:13:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "254:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "254:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "193:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "225:5:7",
														"nodeType": "YulTypedName",
														"src": "225:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "235:8:7",
														"nodeType": "YulTypedName",
														"src": "235:8:7",
														"type": ""
													}
												],
												"src": "193:102:7"
											},
											{
												"body": {
													"nativeSrc": "374:775:7",
													"nodeType": "YulBlock",
													"src": "374:775:7",
													"statements": [
														{
															"nativeSrc": "384:15:7",
															"nodeType": "YulAssignment",
															"src": "384:15:7",
															"value": {
																"name": "_power",
																"nativeSrc": "393:6:7",
																"nodeType": "YulIdentifier",
																"src": "393:6:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "384:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "384:5:7"
																}
															]
														},
														{
															"nativeSrc": "408:14:7",
															"nodeType": "YulAssignment",
															"src": "408:14:7",
															"value": {
																"name": "_base",
																"nativeSrc": "417:5:7",
																"nodeType": "YulIdentifier",
																"src": "417:5:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "408:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "408:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "466:677:7",
																"nodeType": "YulBlock",
																"src": "466:677:7",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "554:22:7",
																			"nodeType": "YulBlock",
																			"src": "554:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "556:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "556:16:7"
																						},
																						"nativeSrc": "556:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "556:18:7"
																					},
																					"nativeSrc": "556:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "556:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "532:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "532:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "542:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:7"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "547:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "547:4:7"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "538:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "538:3:7"
																					},
																					"nativeSrc": "538:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "538:14:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "529:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "529:2:7"
																			},
																			"nativeSrc": "529:24:7",
																			"nodeType": "YulFunctionCall",
																			"src": "529:24:7"
																		},
																		"nativeSrc": "526:50:7",
																		"nodeType": "YulIf",
																		"src": "526:50:7"
																	},
																	{
																		"body": {
																			"nativeSrc": "621:419:7",
																			"nodeType": "YulBlock",
																			"src": "621:419:7",
																			"statements": [
																				{
																					"nativeSrc": "1001:25:7",
																					"nodeType": "YulAssignment",
																					"src": "1001:25:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "1014:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "1014:5:7"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "1021:4:7",
																								"nodeType": "YulIdentifier",
																								"src": "1021:4:7"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "1010:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1010:3:7"
																						},
																						"nativeSrc": "1010:16:7",
																						"nodeType": "YulFunctionCall",
																						"src": "1010:16:7"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "1001:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "1001:5:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "596:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "596:8:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "606:1:7",
																					"nodeType": "YulLiteral",
																					"src": "606:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "592:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "592:3:7"
																			},
																			"nativeSrc": "592:16:7",
																			"nodeType": "YulFunctionCall",
																			"src": "592:16:7"
																		},
																		"nativeSrc": "589:451:7",
																		"nodeType": "YulIf",
																		"src": "589:451:7"
																	},
																	{
																		"nativeSrc": "1053:23:7",
																		"nodeType": "YulAssignment",
																		"src": "1053:23:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "1065:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "1065:4:7"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "1071:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "1071:4:7"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "1061:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1061:3:7"
																			},
																			"nativeSrc": "1061:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1061:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "1053:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1053:4:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "1089:44:7",
																		"nodeType": "YulAssignment",
																		"src": "1089:44:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "1124:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "1124:8:7"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "1101:22:7",
																				"nodeType": "YulIdentifier",
																				"src": "1101:22:7"
																			},
																			"nativeSrc": "1101:32:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1101:32:7"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "1089:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "1089:8:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "442:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "442:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "452:1:7",
																		"nodeType": "YulLiteral",
																		"src": "452:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "439:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "439:2:7"
																},
																"nativeSrc": "439:15:7",
																"nodeType": "YulFunctionCall",
																"src": "439:15:7"
															},
															"nativeSrc": "431:712:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "455:2:7",
																"nodeType": "YulBlock",
																"src": "455:2:7",
																"statements": []
															},
															"pre": {
																"nativeSrc": "435:3:7",
																"nodeType": "YulBlock",
																"src": "435:3:7",
																"statements": []
															},
															"src": "431:712:7"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "301:848:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "329:6:7",
														"nodeType": "YulTypedName",
														"src": "329:6:7",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "337:5:7",
														"nodeType": "YulTypedName",
														"src": "337:5:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "344:8:7",
														"nodeType": "YulTypedName",
														"src": "344:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "354:3:7",
														"nodeType": "YulTypedName",
														"src": "354:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "362:5:7",
														"nodeType": "YulTypedName",
														"src": "362:5:7",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "369:4:7",
														"nodeType": "YulTypedName",
														"src": "369:4:7",
														"type": ""
													}
												],
												"src": "301:848:7"
											},
											{
												"body": {
													"nativeSrc": "1215:1013:7",
													"nodeType": "YulBlock",
													"src": "1215:1013:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1410:20:7",
																"nodeType": "YulBlock",
																"src": "1410:20:7",
																"statements": [
																	{
																		"nativeSrc": "1412:10:7",
																		"nodeType": "YulAssignment",
																		"src": "1412:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "1421:1:7",
																			"nodeType": "YulLiteral",
																			"src": "1421:1:7",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "1412:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1412:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "1423:5:7",
																		"nodeType": "YulLeave",
																		"src": "1423:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "1400:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "1400:8:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1393:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1393:6:7"
																},
																"nativeSrc": "1393:16:7",
																"nodeType": "YulFunctionCall",
																"src": "1393:16:7"
															},
															"nativeSrc": "1390:40:7",
															"nodeType": "YulIf",
															"src": "1390:40:7"
														},
														{
															"body": {
																"nativeSrc": "1455:20:7",
																"nodeType": "YulBlock",
																"src": "1455:20:7",
																"statements": [
																	{
																		"nativeSrc": "1457:10:7",
																		"nodeType": "YulAssignment",
																		"src": "1457:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "1466:1:7",
																			"nodeType": "YulLiteral",
																			"src": "1466:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "1457:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1457:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "1468:5:7",
																		"nodeType": "YulLeave",
																		"src": "1468:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "1449:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1449:4:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1442:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:7"
																},
																"nativeSrc": "1442:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1442:12:7"
															},
															"nativeSrc": "1439:36:7",
															"nodeType": "YulIf",
															"src": "1439:36:7"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1585:20:7",
																		"nodeType": "YulBlock",
																		"src": "1585:20:7",
																		"statements": [
																			{
																				"nativeSrc": "1587:10:7",
																				"nodeType": "YulAssignment",
																				"src": "1587:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1596:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1596:1:7",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "1587:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1587:5:7"
																					}
																				]
																			},
																			{
																				"nativeSrc": "1598:5:7",
																				"nodeType": "YulLeave",
																				"src": "1598:5:7"
																			}
																		]
																	},
																	"nativeSrc": "1578:27:7",
																	"nodeType": "YulCase",
																	"src": "1578:27:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1583:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1583:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "1629:176:7",
																		"nodeType": "YulBlock",
																		"src": "1629:176:7",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "1664:22:7",
																					"nodeType": "YulBlock",
																					"src": "1664:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "1666:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "1666:16:7"
																								},
																								"nativeSrc": "1666:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "1666:18:7"
																							},
																							"nativeSrc": "1666:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "1666:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "1649:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "1649:8:7"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1659:3:7",
																							"nodeType": "YulLiteral",
																							"src": "1659:3:7",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "1646:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "1646:2:7"
																					},
																					"nativeSrc": "1646:17:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1646:17:7"
																				},
																				"nativeSrc": "1643:43:7",
																				"nodeType": "YulIf",
																				"src": "1643:43:7"
																			},
																			{
																				"nativeSrc": "1699:25:7",
																				"nodeType": "YulAssignment",
																				"src": "1699:25:7",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1712:1:7",
																							"nodeType": "YulLiteral",
																							"src": "1712:1:7",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "1715:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "1715:8:7"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "1708:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "1708:3:7"
																					},
																					"nativeSrc": "1708:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1708:16:7"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "1699:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1699:5:7"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "1755:22:7",
																					"nodeType": "YulBlock",
																					"src": "1755:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "1757:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "1757:16:7"
																								},
																								"nativeSrc": "1757:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "1757:18:7"
																							},
																							"nativeSrc": "1757:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "1757:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "1743:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "1743:5:7"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "1750:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1750:3:7"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "1740:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "1740:2:7"
																					},
																					"nativeSrc": "1740:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1740:14:7"
																				},
																				"nativeSrc": "1737:40:7",
																				"nodeType": "YulIf",
																				"src": "1737:40:7"
																			},
																			{
																				"nativeSrc": "1790:5:7",
																				"nodeType": "YulLeave",
																				"src": "1790:5:7"
																			}
																		]
																	},
																	"nativeSrc": "1614:191:7",
																	"nodeType": "YulCase",
																	"src": "1614:191:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1619:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1619:1:7",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "1535:4:7",
																"nodeType": "YulIdentifier",
																"src": "1535:4:7"
															},
															"nativeSrc": "1528:277:7",
															"nodeType": "YulSwitch",
															"src": "1528:277:7"
														},
														{
															"body": {
																"nativeSrc": "1937:123:7",
																"nodeType": "YulBlock",
																"src": "1937:123:7",
																"statements": [
																	{
																		"nativeSrc": "1951:28:7",
																		"nodeType": "YulAssignment",
																		"src": "1951:28:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "1964:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "1964:4:7"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "1970:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "1970:8:7"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "1960:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1960:3:7"
																			},
																			"nativeSrc": "1960:19:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1960:19:7"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "1951:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1951:5:7"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2010:22:7",
																			"nodeType": "YulBlock",
																			"src": "2010:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "2012:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "2012:16:7"
																						},
																						"nativeSrc": "2012:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "2012:18:7"
																					},
																					"nativeSrc": "2012:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "2012:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "1998:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "1998:5:7"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "2005:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2005:3:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "1995:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "1995:2:7"
																			},
																			"nativeSrc": "1995:14:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1995:14:7"
																		},
																		"nativeSrc": "1992:40:7",
																		"nodeType": "YulIf",
																		"src": "1992:40:7"
																	},
																	{
																		"nativeSrc": "2045:5:7",
																		"nodeType": "YulLeave",
																		"src": "2045:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "1840:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "1840:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1846:2:7",
																						"nodeType": "YulLiteral",
																						"src": "1846:2:7",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1837:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "1837:2:7"
																				},
																				"nativeSrc": "1837:12:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1837:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "1854:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "1854:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1864:2:7",
																						"nodeType": "YulLiteral",
																						"src": "1864:2:7",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1851:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "1851:2:7"
																				},
																				"nativeSrc": "1851:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1851:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1833:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1833:3:7"
																		},
																		"nativeSrc": "1833:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1833:35:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "1889:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "1889:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1895:3:7",
																						"nodeType": "YulLiteral",
																						"src": "1895:3:7",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1886:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "1886:2:7"
																				},
																				"nativeSrc": "1886:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1886:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "1904:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "1904:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1914:2:7",
																						"nodeType": "YulLiteral",
																						"src": "1914:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1901:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "1901:2:7"
																				},
																				"nativeSrc": "1901:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1901:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1882:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1882:3:7"
																		},
																		"nativeSrc": "1882:36:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1882:36:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1817:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1817:2:7"
																},
																"nativeSrc": "1817:111:7",
																"nodeType": "YulFunctionCall",
																"src": "1817:111:7"
															},
															"nativeSrc": "1814:246:7",
															"nodeType": "YulIf",
															"src": "1814:246:7"
														},
														{
															"nativeSrc": "2070:57:7",
															"nodeType": "YulAssignment",
															"src": "2070:57:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2104:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2104:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "2107:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2107:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "2113:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "2113:8:7"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "2123:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2123:3:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "2085:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2085:18:7"
																},
																"nativeSrc": "2085:42:7",
																"nodeType": "YulFunctionCall",
																"src": "2085:42:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "2070:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2070:5:7"
																},
																{
																	"name": "base",
																	"nativeSrc": "2077:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2077:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2166:22:7",
																"nodeType": "YulBlock",
																"src": "2166:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2168:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "2168:16:7"
																			},
																			"nativeSrc": "2168:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2168:18:7"
																		},
																		"nativeSrc": "2168:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2168:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "2143:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2143:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "2154:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2154:3:7"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "2159:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "2159:4:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "2150:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2150:3:7"
																		},
																		"nativeSrc": "2150:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2150:14:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2140:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2140:2:7"
																},
																"nativeSrc": "2140:25:7",
																"nodeType": "YulFunctionCall",
																"src": "2140:25:7"
															},
															"nativeSrc": "2137:51:7",
															"nodeType": "YulIf",
															"src": "2137:51:7"
														},
														{
															"nativeSrc": "2197:25:7",
															"nodeType": "YulAssignment",
															"src": "2197:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "2210:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2210:5:7"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "2217:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2217:4:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2206:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2206:3:7"
																},
																"nativeSrc": "2206:16:7",
																"nodeType": "YulFunctionCall",
																"src": "2206:16:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "2197:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2197:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "1155:1073:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "1185:4:7",
														"nodeType": "YulTypedName",
														"src": "1185:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "1191:8:7",
														"nodeType": "YulTypedName",
														"src": "1191:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "1201:3:7",
														"nodeType": "YulTypedName",
														"src": "1201:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "1209:5:7",
														"nodeType": "YulTypedName",
														"src": "1209:5:7",
														"type": ""
													}
												],
												"src": "1155:1073:7"
											},
											{
												"body": {
													"nativeSrc": "2279:32:7",
													"nodeType": "YulBlock",
													"src": "2279:32:7",
													"statements": [
														{
															"nativeSrc": "2289:16:7",
															"nodeType": "YulAssignment",
															"src": "2289:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2300:5:7",
																"nodeType": "YulIdentifier",
																"src": "2300:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2289:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2289:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2234:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2261:5:7",
														"nodeType": "YulTypedName",
														"src": "2261:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2271:7:7",
														"nodeType": "YulTypedName",
														"src": "2271:7:7",
														"type": ""
													}
												],
												"src": "2234:77:7"
											},
											{
												"body": {
													"nativeSrc": "2383:219:7",
													"nodeType": "YulBlock",
													"src": "2383:219:7",
													"statements": [
														{
															"nativeSrc": "2393:31:7",
															"nodeType": "YulAssignment",
															"src": "2393:31:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "2419:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2419:4:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2401:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "2401:17:7"
																},
																"nativeSrc": "2401:23:7",
																"nodeType": "YulFunctionCall",
																"src": "2401:23:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "2393:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2393:4:7"
																}
															]
														},
														{
															"nativeSrc": "2433:39:7",
															"nodeType": "YulAssignment",
															"src": "2433:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "2463:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "2463:8:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2445:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "2445:17:7"
																},
																"nativeSrc": "2445:27:7",
																"nodeType": "YulFunctionCall",
																"src": "2445:27:7"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "2433:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "2433:8:7"
																}
															]
														},
														{
															"nativeSrc": "2482:113:7",
															"nodeType": "YulAssignment",
															"src": "2482:113:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "2512:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2512:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "2518:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "2518:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2528:66:7",
																		"nodeType": "YulLiteral",
																		"src": "2528:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "2491:20:7",
																	"nodeType": "YulIdentifier",
																	"src": "2491:20:7"
																},
																"nativeSrc": "2491:104:7",
																"nodeType": "YulFunctionCall",
																"src": "2491:104:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "2482:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2482:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nativeSrc": "2317:285:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "2358:4:7",
														"nodeType": "YulTypedName",
														"src": "2358:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "2364:8:7",
														"nodeType": "YulTypedName",
														"src": "2364:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "2377:5:7",
														"nodeType": "YulTypedName",
														"src": "2377:5:7",
														"type": ""
													}
												],
												"src": "2317:285:7"
											},
											{
												"body": {
													"nativeSrc": "2656:362:7",
													"nodeType": "YulBlock",
													"src": "2656:362:7",
													"statements": [
														{
															"nativeSrc": "2666:25:7",
															"nodeType": "YulAssignment",
															"src": "2666:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2689:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "2689:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2671:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "2671:17:7"
																},
																"nativeSrc": "2671:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2671:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2666:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "2666:1:7"
																}
															]
														},
														{
															"nativeSrc": "2700:25:7",
															"nodeType": "YulAssignment",
															"src": "2700:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2723:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "2723:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2705:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "2705:17:7"
																},
																"nativeSrc": "2705:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2705:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "2700:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "2700:1:7"
																}
															]
														},
														{
															"nativeSrc": "2734:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2734:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2757:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "2757:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2760:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "2760:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2753:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2753:3:7"
																},
																"nativeSrc": "2753:9:7",
																"nodeType": "YulFunctionCall",
																"src": "2753:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "2738:11:7",
																	"nodeType": "YulTypedName",
																	"src": "2738:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2771:41:7",
															"nodeType": "YulAssignment",
															"src": "2771:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "2800:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "2800:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2782:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "2782:17:7"
																},
																"nativeSrc": "2782:30:7",
																"nodeType": "YulFunctionCall",
																"src": "2782:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "2771:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2771:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2989:22:7",
																"nodeType": "YulBlock",
																"src": "2989:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2991:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "2991:16:7"
																			},
																			"nativeSrc": "2991:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2991:18:7"
																		},
																		"nativeSrc": "2991:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2991:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "2922:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "2922:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2915:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "2915:6:7"
																				},
																				"nativeSrc": "2915:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2915:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "2945:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "2945:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "2952:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "2952:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "2961:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "2961:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "2948:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "2948:3:7"
																						},
																						"nativeSrc": "2948:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "2948:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "2942:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "2942:2:7"
																				},
																				"nativeSrc": "2942:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2942:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2895:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2895:2:7"
																		},
																		"nativeSrc": "2895:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2895:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2875:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2875:6:7"
																},
																"nativeSrc": "2875:113:7",
																"nodeType": "YulFunctionCall",
																"src": "2875:113:7"
															},
															"nativeSrc": "2872:139:7",
															"nodeType": "YulIf",
															"src": "2872:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "2608:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2639:1:7",
														"nodeType": "YulTypedName",
														"src": "2639:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2642:1:7",
														"nodeType": "YulTypedName",
														"src": "2642:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "2648:7:7",
														"nodeType": "YulTypedName",
														"src": "2648:7:7",
														"type": ""
													}
												],
												"src": "2608:410:7"
											},
											{
												"body": {
													"nativeSrc": "3064:35:7",
													"nodeType": "YulBlock",
													"src": "3064:35:7",
													"statements": [
														{
															"nativeSrc": "3074:19:7",
															"nodeType": "YulAssignment",
															"src": "3074:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3090:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3090:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3084:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3084:5:7"
																},
																"nativeSrc": "3084:9:7",
																"nodeType": "YulFunctionCall",
																"src": "3084:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "3074:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3074:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "3024:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "3057:6:7",
														"nodeType": "YulTypedName",
														"src": "3057:6:7",
														"type": ""
													}
												],
												"src": "3024:75:7"
											},
											{
												"body": {
													"nativeSrc": "3194:28:7",
													"nodeType": "YulBlock",
													"src": "3194:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3211:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3211:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3214:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3214:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3204:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3204:6:7"
																},
																"nativeSrc": "3204:12:7",
																"nodeType": "YulFunctionCall",
																"src": "3204:12:7"
															},
															"nativeSrc": "3204:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "3204:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "3105:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "3105:117:7"
											},
											{
												"body": {
													"nativeSrc": "3317:28:7",
													"nodeType": "YulBlock",
													"src": "3317:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3334:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3334:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3337:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3337:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3327:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3327:6:7"
																},
																"nativeSrc": "3327:12:7",
																"nodeType": "YulFunctionCall",
																"src": "3327:12:7"
															},
															"nativeSrc": "3327:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "3327:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "3228:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "3228:117:7"
											},
											{
												"body": {
													"nativeSrc": "3396:81:7",
													"nodeType": "YulBlock",
													"src": "3396:81:7",
													"statements": [
														{
															"nativeSrc": "3406:65:7",
															"nodeType": "YulAssignment",
															"src": "3406:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3421:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3421:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3428:42:7",
																		"nodeType": "YulLiteral",
																		"src": "3428:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3417:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3417:3:7"
																},
																"nativeSrc": "3417:54:7",
																"nodeType": "YulFunctionCall",
																"src": "3417:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3406:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3406:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3351:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3378:5:7",
														"nodeType": "YulTypedName",
														"src": "3378:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3388:7:7",
														"nodeType": "YulTypedName",
														"src": "3388:7:7",
														"type": ""
													}
												],
												"src": "3351:126:7"
											},
											{
												"body": {
													"nativeSrc": "3528:51:7",
													"nodeType": "YulBlock",
													"src": "3528:51:7",
													"statements": [
														{
															"nativeSrc": "3538:35:7",
															"nodeType": "YulAssignment",
															"src": "3538:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3567:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3567:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3549:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "3549:17:7"
																},
																"nativeSrc": "3549:24:7",
																"nodeType": "YulFunctionCall",
																"src": "3549:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3538:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3538:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3483:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3510:5:7",
														"nodeType": "YulTypedName",
														"src": "3510:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3520:7:7",
														"nodeType": "YulTypedName",
														"src": "3520:7:7",
														"type": ""
													}
												],
												"src": "3483:96:7"
											},
											{
												"body": {
													"nativeSrc": "3628:79:7",
													"nodeType": "YulBlock",
													"src": "3628:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3685:16:7",
																"nodeType": "YulBlock",
																"src": "3685:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3694:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3694:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3697:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3697:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3687:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3687:6:7"
																			},
																			"nativeSrc": "3687:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3687:12:7"
																		},
																		"nativeSrc": "3687:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3687:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3651:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3651:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3676:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3676:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3658:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "3658:17:7"
																				},
																				"nativeSrc": "3658:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3658:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3648:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3648:2:7"
																		},
																		"nativeSrc": "3648:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3648:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3641:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3641:6:7"
																},
																"nativeSrc": "3641:43:7",
																"nodeType": "YulFunctionCall",
																"src": "3641:43:7"
															},
															"nativeSrc": "3638:63:7",
															"nodeType": "YulIf",
															"src": "3638:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3585:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3621:5:7",
														"nodeType": "YulTypedName",
														"src": "3621:5:7",
														"type": ""
													}
												],
												"src": "3585:122:7"
											},
											{
												"body": {
													"nativeSrc": "3776:80:7",
													"nodeType": "YulBlock",
													"src": "3776:80:7",
													"statements": [
														{
															"nativeSrc": "3786:22:7",
															"nodeType": "YulAssignment",
															"src": "3786:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3801:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3801:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3795:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3795:5:7"
																},
																"nativeSrc": "3795:13:7",
																"nodeType": "YulFunctionCall",
																"src": "3795:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3786:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3786:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3844:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3844:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3817:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "3817:26:7"
																},
																"nativeSrc": "3817:33:7",
																"nodeType": "YulFunctionCall",
																"src": "3817:33:7"
															},
															"nativeSrc": "3817:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "3817:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "3713:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3754:6:7",
														"nodeType": "YulTypedName",
														"src": "3754:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3762:3:7",
														"nodeType": "YulTypedName",
														"src": "3762:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3770:5:7",
														"nodeType": "YulTypedName",
														"src": "3770:5:7",
														"type": ""
													}
												],
												"src": "3713:143:7"
											},
											{
												"body": {
													"nativeSrc": "3939:274:7",
													"nodeType": "YulBlock",
													"src": "3939:274:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3985:83:7",
																"nodeType": "YulBlock",
																"src": "3985:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3987:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3987:77:7"
																			},
																			"nativeSrc": "3987:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3987:79:7"
																		},
																		"nativeSrc": "3987:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3987:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3960:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3960:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3969:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3969:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3956:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3956:3:7"
																		},
																		"nativeSrc": "3956:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3956:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3981:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3981:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3952:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3952:3:7"
																},
																"nativeSrc": "3952:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3952:32:7"
															},
															"nativeSrc": "3949:119:7",
															"nodeType": "YulIf",
															"src": "3949:119:7"
														},
														{
															"nativeSrc": "4078:128:7",
															"nodeType": "YulBlock",
															"src": "4078:128:7",
															"statements": [
																{
																	"nativeSrc": "4093:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4093:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4107:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4107:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4097:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4097:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4122:74:7",
																	"nodeType": "YulAssignment",
																	"src": "4122:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4168:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4168:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4179:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4179:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4164:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4164:3:7"
																				},
																				"nativeSrc": "4164:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4164:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4188:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4188:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "4132:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "4132:31:7"
																		},
																		"nativeSrc": "4132:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4132:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4122:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4122:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "3862:351:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3909:9:7",
														"nodeType": "YulTypedName",
														"src": "3909:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3920:7:7",
														"nodeType": "YulTypedName",
														"src": "3920:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3932:6:7",
														"nodeType": "YulTypedName",
														"src": "3932:6:7",
														"type": ""
													}
												],
												"src": "3862:351:7"
											},
											{
												"body": {
													"nativeSrc": "4278:40:7",
													"nodeType": "YulBlock",
													"src": "4278:40:7",
													"statements": [
														{
															"nativeSrc": "4289:22:7",
															"nodeType": "YulAssignment",
															"src": "4289:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4305:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4305:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4299:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4299:5:7"
																},
																"nativeSrc": "4299:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4299:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4289:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4289:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4219:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4261:5:7",
														"nodeType": "YulTypedName",
														"src": "4261:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4271:6:7",
														"nodeType": "YulTypedName",
														"src": "4271:6:7",
														"type": ""
													}
												],
												"src": "4219:99:7"
											},
											{
												"body": {
													"nativeSrc": "4352:152:7",
													"nodeType": "YulBlock",
													"src": "4352:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4369:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4369:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4372:77:7",
																		"nodeType": "YulLiteral",
																		"src": "4372:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4362:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4362:6:7"
																},
																"nativeSrc": "4362:88:7",
																"nodeType": "YulFunctionCall",
																"src": "4362:88:7"
															},
															"nativeSrc": "4362:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "4362:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4466:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4466:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4469:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4469:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4459:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4459:6:7"
																},
																"nativeSrc": "4459:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4459:15:7"
															},
															"nativeSrc": "4459:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4459:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4490:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4490:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4493:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4493:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4483:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4483:6:7"
																},
																"nativeSrc": "4483:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4483:15:7"
															},
															"nativeSrc": "4483:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4483:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "4324:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "4324:180:7"
											},
											{
												"body": {
													"nativeSrc": "4538:152:7",
													"nodeType": "YulBlock",
													"src": "4538:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4555:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4555:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4558:77:7",
																		"nodeType": "YulLiteral",
																		"src": "4558:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4548:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4548:6:7"
																},
																"nativeSrc": "4548:88:7",
																"nodeType": "YulFunctionCall",
																"src": "4548:88:7"
															},
															"nativeSrc": "4548:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "4548:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4652:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4652:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4655:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4655:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4645:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4645:6:7"
																},
																"nativeSrc": "4645:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4645:15:7"
															},
															"nativeSrc": "4645:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4645:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4676:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4676:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4679:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4679:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4669:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4669:6:7"
																},
																"nativeSrc": "4669:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4669:15:7"
															},
															"nativeSrc": "4669:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4669:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4510:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "4510:180:7"
											},
											{
												"body": {
													"nativeSrc": "4747:269:7",
													"nodeType": "YulBlock",
													"src": "4747:269:7",
													"statements": [
														{
															"nativeSrc": "4757:22:7",
															"nodeType": "YulAssignment",
															"src": "4757:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4771:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4771:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4777:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4777:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4767:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4767:3:7"
																},
																"nativeSrc": "4767:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4767:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4757:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4757:6:7"
																}
															]
														},
														{
															"nativeSrc": "4788:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4788:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4818:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4818:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4824:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4824:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4814:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4814:3:7"
																},
																"nativeSrc": "4814:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4814:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4792:18:7",
																	"nodeType": "YulTypedName",
																	"src": "4792:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4865:51:7",
																"nodeType": "YulBlock",
																"src": "4865:51:7",
																"statements": [
																	{
																		"nativeSrc": "4879:27:7",
																		"nodeType": "YulAssignment",
																		"src": "4879:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4893:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "4893:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4901:4:7",
																					"nodeType": "YulLiteral",
																					"src": "4901:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4889:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4889:3:7"
																			},
																			"nativeSrc": "4889:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4889:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4879:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4879:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4845:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "4845:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4838:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4838:6:7"
																},
																"nativeSrc": "4838:26:7",
																"nodeType": "YulFunctionCall",
																"src": "4838:26:7"
															},
															"nativeSrc": "4835:81:7",
															"nodeType": "YulIf",
															"src": "4835:81:7"
														},
														{
															"body": {
																"nativeSrc": "4968:42:7",
																"nodeType": "YulBlock",
																"src": "4968:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4982:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "4982:16:7"
																			},
																			"nativeSrc": "4982:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4982:18:7"
																		},
																		"nativeSrc": "4982:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4982:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4932:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "4932:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4955:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4955:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4963:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4963:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4952:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4952:2:7"
																		},
																		"nativeSrc": "4952:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4952:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4929:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4929:2:7"
																},
																"nativeSrc": "4929:38:7",
																"nodeType": "YulFunctionCall",
																"src": "4929:38:7"
															},
															"nativeSrc": "4926:84:7",
															"nodeType": "YulIf",
															"src": "4926:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4696:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4731:4:7",
														"nodeType": "YulTypedName",
														"src": "4731:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4740:6:7",
														"nodeType": "YulTypedName",
														"src": "4740:6:7",
														"type": ""
													}
												],
												"src": "4696:320:7"
											},
											{
												"body": {
													"nativeSrc": "5076:87:7",
													"nodeType": "YulBlock",
													"src": "5076:87:7",
													"statements": [
														{
															"nativeSrc": "5086:11:7",
															"nodeType": "YulAssignment",
															"src": "5086:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "5094:3:7",
																"nodeType": "YulIdentifier",
																"src": "5094:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5086:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5086:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5114:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5114:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "5117:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5117:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5107:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5107:6:7"
																},
																"nativeSrc": "5107:14:7",
																"nodeType": "YulFunctionCall",
																"src": "5107:14:7"
															},
															"nativeSrc": "5107:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "5107:14:7"
														},
														{
															"nativeSrc": "5130:26:7",
															"nodeType": "YulAssignment",
															"src": "5130:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5148:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5148:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5151:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5151:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "5138:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5138:9:7"
																},
																"nativeSrc": "5138:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5138:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5130:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5130:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "5022:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "5063:3:7",
														"nodeType": "YulTypedName",
														"src": "5063:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "5071:4:7",
														"nodeType": "YulTypedName",
														"src": "5071:4:7",
														"type": ""
													}
												],
												"src": "5022:141:7"
											},
											{
												"body": {
													"nativeSrc": "5213:49:7",
													"nodeType": "YulBlock",
													"src": "5213:49:7",
													"statements": [
														{
															"nativeSrc": "5223:33:7",
															"nodeType": "YulAssignment",
															"src": "5223:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5241:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5241:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5248:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5248:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5237:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5237:3:7"
																		},
																		"nativeSrc": "5237:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5237:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5253:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5253:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5233:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5233:3:7"
																},
																"nativeSrc": "5233:23:7",
																"nodeType": "YulFunctionCall",
																"src": "5233:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5223:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5223:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "5169:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5196:5:7",
														"nodeType": "YulTypedName",
														"src": "5196:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5206:6:7",
														"nodeType": "YulTypedName",
														"src": "5206:6:7",
														"type": ""
													}
												],
												"src": "5169:93:7"
											},
											{
												"body": {
													"nativeSrc": "5321:54:7",
													"nodeType": "YulBlock",
													"src": "5321:54:7",
													"statements": [
														{
															"nativeSrc": "5331:37:7",
															"nodeType": "YulAssignment",
															"src": "5331:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5356:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5356:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5362:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5362:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5352:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5352:3:7"
																},
																"nativeSrc": "5352:16:7",
																"nodeType": "YulFunctionCall",
																"src": "5352:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5331:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "5331:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "5268:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5296:4:7",
														"nodeType": "YulTypedName",
														"src": "5296:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5302:5:7",
														"nodeType": "YulTypedName",
														"src": "5302:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5312:8:7",
														"nodeType": "YulTypedName",
														"src": "5312:8:7",
														"type": ""
													}
												],
												"src": "5268:107:7"
											},
											{
												"body": {
													"nativeSrc": "5457:317:7",
													"nodeType": "YulBlock",
													"src": "5457:317:7",
													"statements": [
														{
															"nativeSrc": "5467:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5467:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5488:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "5488:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5500:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5500:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5484:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5484:3:7"
																},
																"nativeSrc": "5484:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5484:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5471:9:7",
																	"nodeType": "YulTypedName",
																	"src": "5471:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5511:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5511:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5542:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5542:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5553:66:7",
																		"nodeType": "YulLiteral",
																		"src": "5553:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5523:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5523:18:7"
																},
																"nativeSrc": "5523:97:7",
																"nodeType": "YulFunctionCall",
																"src": "5523:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5515:4:7",
																	"nodeType": "YulTypedName",
																	"src": "5515:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5629:51:7",
															"nodeType": "YulAssignment",
															"src": "5629:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5660:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5660:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5671:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "5671:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5641:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5641:18:7"
																},
																"nativeSrc": "5641:39:7",
																"nodeType": "YulFunctionCall",
																"src": "5641:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5629:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "5629:8:7"
																}
															]
														},
														{
															"nativeSrc": "5689:30:7",
															"nodeType": "YulAssignment",
															"src": "5689:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5702:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5702:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5713:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5713:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5709:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5709:3:7"
																		},
																		"nativeSrc": "5709:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5709:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5698:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5698:3:7"
																},
																"nativeSrc": "5698:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5698:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5689:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5689:5:7"
																}
															]
														},
														{
															"nativeSrc": "5728:40:7",
															"nodeType": "YulAssignment",
															"src": "5728:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5741:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5741:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5752:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "5752:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5762:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5762:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5748:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5748:3:7"
																		},
																		"nativeSrc": "5748:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5748:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5738:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5738:2:7"
																},
																"nativeSrc": "5738:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5738:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5728:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5728:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5381:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5418:5:7",
														"nodeType": "YulTypedName",
														"src": "5418:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5425:10:7",
														"nodeType": "YulTypedName",
														"src": "5425:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5437:8:7",
														"nodeType": "YulTypedName",
														"src": "5437:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5450:6:7",
														"nodeType": "YulTypedName",
														"src": "5450:6:7",
														"type": ""
													}
												],
												"src": "5381:393:7"
											},
											{
												"body": {
													"nativeSrc": "5812:28:7",
													"nodeType": "YulBlock",
													"src": "5812:28:7",
													"statements": [
														{
															"nativeSrc": "5822:12:7",
															"nodeType": "YulAssignment",
															"src": "5822:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "5829:5:7",
																"nodeType": "YulIdentifier",
																"src": "5829:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5822:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5822:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5780:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5798:5:7",
														"nodeType": "YulTypedName",
														"src": "5798:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5808:3:7",
														"nodeType": "YulTypedName",
														"src": "5808:3:7",
														"type": ""
													}
												],
												"src": "5780:60:7"
											},
											{
												"body": {
													"nativeSrc": "5906:82:7",
													"nodeType": "YulBlock",
													"src": "5906:82:7",
													"statements": [
														{
															"nativeSrc": "5916:66:7",
															"nodeType": "YulAssignment",
															"src": "5916:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5974:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "5974:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5956:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "5956:17:7"
																				},
																				"nativeSrc": "5956:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5956:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5947:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "5947:8:7"
																		},
																		"nativeSrc": "5947:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5947:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5929:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "5929:17:7"
																},
																"nativeSrc": "5929:53:7",
																"nodeType": "YulFunctionCall",
																"src": "5929:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5916:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5916:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5846:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5886:5:7",
														"nodeType": "YulTypedName",
														"src": "5886:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5896:9:7",
														"nodeType": "YulTypedName",
														"src": "5896:9:7",
														"type": ""
													}
												],
												"src": "5846:142:7"
											},
											{
												"body": {
													"nativeSrc": "6041:28:7",
													"nodeType": "YulBlock",
													"src": "6041:28:7",
													"statements": [
														{
															"nativeSrc": "6051:12:7",
															"nodeType": "YulAssignment",
															"src": "6051:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "6058:5:7",
																"nodeType": "YulIdentifier",
																"src": "6058:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6051:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6051:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5994:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6027:5:7",
														"nodeType": "YulTypedName",
														"src": "6027:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6037:3:7",
														"nodeType": "YulTypedName",
														"src": "6037:3:7",
														"type": ""
													}
												],
												"src": "5994:75:7"
											},
											{
												"body": {
													"nativeSrc": "6151:193:7",
													"nodeType": "YulBlock",
													"src": "6151:193:7",
													"statements": [
														{
															"nativeSrc": "6161:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6161:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "6216:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "6216:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "6185:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "6185:30:7"
																},
																"nativeSrc": "6185:39:7",
																"nodeType": "YulFunctionCall",
																"src": "6185:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "6165:16:7",
																	"nodeType": "YulTypedName",
																	"src": "6165:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6240:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6240:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6280:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "6280:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6274:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6274:5:7"
																				},
																				"nativeSrc": "6274:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6274:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6287:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6287:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6319:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "6319:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6295:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "6295:23:7"
																				},
																				"nativeSrc": "6295:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6295:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6246:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "6246:27:7"
																		},
																		"nativeSrc": "6246:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6246:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6233:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6233:6:7"
																},
																"nativeSrc": "6233:105:7",
																"nodeType": "YulFunctionCall",
																"src": "6233:105:7"
															},
															"nativeSrc": "6233:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "6233:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "6075:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6128:4:7",
														"nodeType": "YulTypedName",
														"src": "6128:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6134:6:7",
														"nodeType": "YulTypedName",
														"src": "6134:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "6142:7:7",
														"nodeType": "YulTypedName",
														"src": "6142:7:7",
														"type": ""
													}
												],
												"src": "6075:269:7"
											},
											{
												"body": {
													"nativeSrc": "6399:24:7",
													"nodeType": "YulBlock",
													"src": "6399:24:7",
													"statements": [
														{
															"nativeSrc": "6409:8:7",
															"nodeType": "YulAssignment",
															"src": "6409:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "6416:1:7",
																"nodeType": "YulLiteral",
																"src": "6416:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6409:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6409:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6350:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6395:3:7",
														"nodeType": "YulTypedName",
														"src": "6395:3:7",
														"type": ""
													}
												],
												"src": "6350:73:7"
											},
											{
												"body": {
													"nativeSrc": "6482:136:7",
													"nodeType": "YulBlock",
													"src": "6482:136:7",
													"statements": [
														{
															"nativeSrc": "6492:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6492:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6506:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "6506:30:7"
																},
																"nativeSrc": "6506:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6506:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6496:6:7",
																	"nodeType": "YulTypedName",
																	"src": "6496:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6591:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6591:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6597:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6597:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6605:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6605:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6547:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6547:43:7"
																},
																"nativeSrc": "6547:65:7",
																"nodeType": "YulFunctionCall",
																"src": "6547:65:7"
															},
															"nativeSrc": "6547:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "6547:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6429:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6468:4:7",
														"nodeType": "YulTypedName",
														"src": "6468:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6474:6:7",
														"nodeType": "YulTypedName",
														"src": "6474:6:7",
														"type": ""
													}
												],
												"src": "6429:189:7"
											},
											{
												"body": {
													"nativeSrc": "6674:136:7",
													"nodeType": "YulBlock",
													"src": "6674:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6741:63:7",
																"nodeType": "YulBlock",
																"src": "6741:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6785:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6785:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6792:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6792:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6755:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "6755:29:7"
																			},
																			"nativeSrc": "6755:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6755:39:7"
																		},
																		"nativeSrc": "6755:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6755:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6694:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6694:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6701:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6701:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6691:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6691:2:7"
																},
																"nativeSrc": "6691:14:7",
																"nodeType": "YulFunctionCall",
																"src": "6691:14:7"
															},
															"nativeSrc": "6684:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6706:26:7",
																"nodeType": "YulBlock",
																"src": "6706:26:7",
																"statements": [
																	{
																		"nativeSrc": "6708:22:7",
																		"nodeType": "YulAssignment",
																		"src": "6708:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6721:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6721:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6728:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6728:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6717:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6717:3:7"
																			},
																			"nativeSrc": "6717:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6717:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6708:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6708:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6688:2:7",
																"nodeType": "YulBlock",
																"src": "6688:2:7",
																"statements": []
															},
															"src": "6684:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6624:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6662:5:7",
														"nodeType": "YulTypedName",
														"src": "6662:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6669:3:7",
														"nodeType": "YulTypedName",
														"src": "6669:3:7",
														"type": ""
													}
												],
												"src": "6624:186:7"
											},
											{
												"body": {
													"nativeSrc": "6895:464:7",
													"nodeType": "YulBlock",
													"src": "6895:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6921:431:7",
																"nodeType": "YulBlock",
																"src": "6921:431:7",
																"statements": [
																	{
																		"nativeSrc": "6935:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6935:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6983:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6983:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6951:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "6951:31:7"
																			},
																			"nativeSrc": "6951:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6951:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6939:8:7",
																				"nodeType": "YulTypedName",
																				"src": "6939:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7002:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7002:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "7025:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "7025:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "7053:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "7053:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "7035:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "7035:17:7"
																					},
																					"nativeSrc": "7035:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7035:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7021:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7021:3:7"
																			},
																			"nativeSrc": "7021:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7021:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "7006:11:7",
																				"nodeType": "YulTypedName",
																				"src": "7006:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7222:27:7",
																			"nodeType": "YulBlock",
																			"src": "7222:27:7",
																			"statements": [
																				{
																					"nativeSrc": "7224:23:7",
																					"nodeType": "YulAssignment",
																					"src": "7224:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7239:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "7239:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "7224:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "7224:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "7206:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "7206:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7218:2:7",
																					"nodeType": "YulLiteral",
																					"src": "7218:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "7203:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "7203:2:7"
																			},
																			"nativeSrc": "7203:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7203:18:7"
																		},
																		"nativeSrc": "7200:49:7",
																		"nodeType": "YulIf",
																		"src": "7200:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7291:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "7291:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7308:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "7308:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7336:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "7336:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7318:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "7318:17:7"
																							},
																							"nativeSrc": "7318:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "7318:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7304:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "7304:3:7"
																					},
																					"nativeSrc": "7304:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7304:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7262:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "7262:28:7"
																			},
																			"nativeSrc": "7262:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7262:80:7"
																		},
																		"nativeSrc": "7262:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7262:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6912:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6912:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6917:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6917:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6909:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6909:2:7"
																},
																"nativeSrc": "6909:11:7",
																"nodeType": "YulFunctionCall",
																"src": "6909:11:7"
															},
															"nativeSrc": "6906:446:7",
															"nodeType": "YulIf",
															"src": "6906:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6816:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6871:5:7",
														"nodeType": "YulTypedName",
														"src": "6871:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6878:3:7",
														"nodeType": "YulTypedName",
														"src": "6878:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6883:10:7",
														"nodeType": "YulTypedName",
														"src": "6883:10:7",
														"type": ""
													}
												],
												"src": "6816:543:7"
											},
											{
												"body": {
													"nativeSrc": "7428:54:7",
													"nodeType": "YulBlock",
													"src": "7428:54:7",
													"statements": [
														{
															"nativeSrc": "7438:37:7",
															"nodeType": "YulAssignment",
															"src": "7438:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7463:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7463:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7469:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7469:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7459:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7459:3:7"
																},
																"nativeSrc": "7459:16:7",
																"nodeType": "YulFunctionCall",
																"src": "7459:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7438:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "7438:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7365:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7403:4:7",
														"nodeType": "YulTypedName",
														"src": "7403:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7409:5:7",
														"nodeType": "YulTypedName",
														"src": "7409:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7419:8:7",
														"nodeType": "YulTypedName",
														"src": "7419:8:7",
														"type": ""
													}
												],
												"src": "7365:117:7"
											},
											{
												"body": {
													"nativeSrc": "7539:118:7",
													"nodeType": "YulBlock",
													"src": "7539:118:7",
													"statements": [
														{
															"nativeSrc": "7549:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7549:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7598:1:7",
																						"nodeType": "YulLiteral",
																						"src": "7598:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7601:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "7601:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7594:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7594:3:7"
																				},
																				"nativeSrc": "7594:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7594:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7613:1:7",
																						"nodeType": "YulLiteral",
																						"src": "7613:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7609:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7609:3:7"
																				},
																				"nativeSrc": "7609:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7609:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7565:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "7565:28:7"
																		},
																		"nativeSrc": "7565:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7565:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7561:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7561:3:7"
																},
																"nativeSrc": "7561:56:7",
																"nodeType": "YulFunctionCall",
																"src": "7561:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7553:4:7",
																	"nodeType": "YulTypedName",
																	"src": "7553:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7626:25:7",
															"nodeType": "YulAssignment",
															"src": "7626:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7640:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7640:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7646:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7646:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7636:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7636:3:7"
																},
																"nativeSrc": "7636:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7636:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7626:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7626:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7488:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7516:4:7",
														"nodeType": "YulTypedName",
														"src": "7516:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7522:5:7",
														"nodeType": "YulTypedName",
														"src": "7522:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7532:6:7",
														"nodeType": "YulTypedName",
														"src": "7532:6:7",
														"type": ""
													}
												],
												"src": "7488:169:7"
											},
											{
												"body": {
													"nativeSrc": "7743:214:7",
													"nodeType": "YulBlock",
													"src": "7743:214:7",
													"statements": [
														{
															"nativeSrc": "7876:37:7",
															"nodeType": "YulAssignment",
															"src": "7876:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7903:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7903:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7909:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7909:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7884:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "7884:18:7"
																},
																"nativeSrc": "7884:29:7",
																"nodeType": "YulFunctionCall",
																"src": "7884:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7876:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7876:4:7"
																}
															]
														},
														{
															"nativeSrc": "7922:29:7",
															"nodeType": "YulAssignment",
															"src": "7922:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7933:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7933:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7943:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7943:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7946:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7946:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7939:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7939:3:7"
																		},
																		"nativeSrc": "7939:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7939:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7930:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7930:2:7"
																},
																"nativeSrc": "7930:21:7",
																"nodeType": "YulFunctionCall",
																"src": "7930:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7922:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7922:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7662:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7724:4:7",
														"nodeType": "YulTypedName",
														"src": "7724:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7730:3:7",
														"nodeType": "YulTypedName",
														"src": "7730:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7738:4:7",
														"nodeType": "YulTypedName",
														"src": "7738:4:7",
														"type": ""
													}
												],
												"src": "7662:295:7"
											},
											{
												"body": {
													"nativeSrc": "8054:1303:7",
													"nodeType": "YulBlock",
													"src": "8054:1303:7",
													"statements": [
														{
															"nativeSrc": "8065:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8065:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8112:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8112:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "8079:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "8079:32:7"
																},
																"nativeSrc": "8079:37:7",
																"nodeType": "YulFunctionCall",
																"src": "8079:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "8069:6:7",
																	"nodeType": "YulTypedName",
																	"src": "8069:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8201:22:7",
																"nodeType": "YulBlock",
																"src": "8201:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8203:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8203:16:7"
																			},
																			"nativeSrc": "8203:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8203:18:7"
																		},
																		"nativeSrc": "8203:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8203:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8173:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8173:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8181:18:7",
																		"nodeType": "YulLiteral",
																		"src": "8181:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8170:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8170:2:7"
																},
																"nativeSrc": "8170:30:7",
																"nodeType": "YulFunctionCall",
																"src": "8170:30:7"
															},
															"nativeSrc": "8167:56:7",
															"nodeType": "YulIf",
															"src": "8167:56:7"
														},
														{
															"nativeSrc": "8233:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8233:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8279:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8279:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8273:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "8273:5:7"
																		},
																		"nativeSrc": "8273:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8273:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8247:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "8247:25:7"
																},
																"nativeSrc": "8247:38:7",
																"nodeType": "YulFunctionCall",
																"src": "8247:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8237:6:7",
																	"nodeType": "YulTypedName",
																	"src": "8237:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8378:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8378:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8384:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8384:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8392:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8392:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8332:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "8332:45:7"
																},
																"nativeSrc": "8332:67:7",
																"nodeType": "YulFunctionCall",
																"src": "8332:67:7"
															},
															"nativeSrc": "8332:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "8332:67:7"
														},
														{
															"nativeSrc": "8409:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8409:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "8426:1:7",
																"nodeType": "YulLiteral",
																"src": "8426:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8413:9:7",
																	"nodeType": "YulTypedName",
																	"src": "8413:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8437:17:7",
															"nodeType": "YulAssignment",
															"src": "8437:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "8450:4:7",
																"nodeType": "YulLiteral",
																"src": "8450:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8437:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "8437:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8501:611:7",
																		"nodeType": "YulBlock",
																		"src": "8501:611:7",
																		"statements": [
																			{
																				"nativeSrc": "8515:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8515:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8534:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "8534:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8546:4:7",
																									"nodeType": "YulLiteral",
																									"src": "8546:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8542:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "8542:3:7"
																							},
																							"nativeSrc": "8542:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "8542:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8530:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "8530:3:7"
																					},
																					"nativeSrc": "8530:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8530:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8519:7:7",
																						"nodeType": "YulTypedName",
																						"src": "8519:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8566:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8566:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8612:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "8612:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8580:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "8580:31:7"
																					},
																					"nativeSrc": "8580:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8580:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8570:6:7",
																						"nodeType": "YulTypedName",
																						"src": "8570:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8630:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8630:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8639:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8639:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8634:1:7",
																						"nodeType": "YulTypedName",
																						"src": "8634:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8698:163:7",
																					"nodeType": "YulBlock",
																					"src": "8698:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8723:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "8723:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8741:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "8741:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8746:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "8746:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8737:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "8737:3:7"
																												},
																												"nativeSrc": "8737:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "8737:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8731:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "8731:5:7"
																										},
																										"nativeSrc": "8731:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "8731:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8716:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "8716:6:7"
																								},
																								"nativeSrc": "8716:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8716:42:7"
																							},
																							"nativeSrc": "8716:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "8716:42:7"
																						},
																						{
																							"nativeSrc": "8775:24:7",
																							"nodeType": "YulAssignment",
																							"src": "8775:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8789:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "8789:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8797:1:7",
																										"nodeType": "YulLiteral",
																										"src": "8797:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8785:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "8785:3:7"
																								},
																								"nativeSrc": "8785:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8785:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8775:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "8775:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8816:31:7",
																							"nodeType": "YulAssignment",
																							"src": "8816:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8833:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "8833:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8844:2:7",
																										"nodeType": "YulLiteral",
																										"src": "8844:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8829:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "8829:3:7"
																								},
																								"nativeSrc": "8829:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8829:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8816:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "8816:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8664:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "8664:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8667:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "8667:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8661:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "8661:2:7"
																					},
																					"nativeSrc": "8661:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8661:14:7"
																				},
																				"nativeSrc": "8653:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8676:21:7",
																					"nodeType": "YulBlock",
																					"src": "8676:21:7",
																					"statements": [
																						{
																							"nativeSrc": "8678:17:7",
																							"nodeType": "YulAssignment",
																							"src": "8678:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8687:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "8687:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8690:4:7",
																										"nodeType": "YulLiteral",
																										"src": "8690:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8683:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "8683:3:7"
																								},
																								"nativeSrc": "8683:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8683:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8678:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "8678:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8657:3:7",
																					"nodeType": "YulBlock",
																					"src": "8657:3:7",
																					"statements": []
																				},
																				"src": "8653:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "8897:156:7",
																					"nodeType": "YulBlock",
																					"src": "8897:156:7",
																					"statements": [
																						{
																							"nativeSrc": "8915:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8915:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8942:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "8942:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8947:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "8947:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8938:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "8938:3:7"
																										},
																										"nativeSrc": "8938:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "8938:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8932:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "8932:5:7"
																								},
																								"nativeSrc": "8932:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8932:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8919:9:7",
																									"nodeType": "YulTypedName",
																									"src": "8919:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8982:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "8982:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "9009:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "9009:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "9024:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "9024:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "9032:4:7",
																														"nodeType": "YulLiteral",
																														"src": "9032:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "9020:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "9020:3:7"
																												},
																												"nativeSrc": "9020:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "9020:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8990:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "8990:18:7"
																										},
																										"nativeSrc": "8990:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "8990:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8975:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "8975:6:7"
																								},
																								"nativeSrc": "8975:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8975:64:7"
																							},
																							"nativeSrc": "8975:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "8975:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8880:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "8880:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8889:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "8889:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8877:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "8877:2:7"
																					},
																					"nativeSrc": "8877:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8877:19:7"
																				},
																				"nativeSrc": "8874:179:7",
																				"nodeType": "YulIf",
																				"src": "8874:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9073:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "9073:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "9087:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "9087:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "9095:1:7",
																											"nodeType": "YulLiteral",
																											"src": "9095:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "9083:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "9083:3:7"
																									},
																									"nativeSrc": "9083:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "9083:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9099:1:7",
																									"nodeType": "YulLiteral",
																									"src": "9099:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9079:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "9079:3:7"
																							},
																							"nativeSrc": "9079:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "9079:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9066:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9066:6:7"
																					},
																					"nativeSrc": "9066:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9066:36:7"
																				},
																				"nativeSrc": "9066:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "9066:36:7"
																			}
																		]
																	},
																	"nativeSrc": "8494:618:7",
																	"nodeType": "YulCase",
																	"src": "8494:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8499:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8499:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9129:222:7",
																		"nodeType": "YulBlock",
																		"src": "9129:222:7",
																		"statements": [
																			{
																				"nativeSrc": "9143:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9143:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9156:1:7",
																					"nodeType": "YulLiteral",
																					"src": "9156:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "9147:5:7",
																						"nodeType": "YulTypedName",
																						"src": "9147:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9180:67:7",
																					"nodeType": "YulBlock",
																					"src": "9180:67:7",
																					"statements": [
																						{
																							"nativeSrc": "9198:35:7",
																							"nodeType": "YulAssignment",
																							"src": "9198:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9217:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "9217:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9222:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "9222:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9213:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "9213:3:7"
																										},
																										"nativeSrc": "9213:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "9213:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9207:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "9207:5:7"
																								},
																								"nativeSrc": "9207:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9207:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "9198:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "9198:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "9173:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "9173:6:7"
																				},
																				"nativeSrc": "9170:77:7",
																				"nodeType": "YulIf",
																				"src": "9170:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9267:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "9267:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9326:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "9326:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9333:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "9333:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9273:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "9273:52:7"
																							},
																							"nativeSrc": "9273:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "9273:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9260:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9260:6:7"
																					},
																					"nativeSrc": "9260:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9260:81:7"
																				},
																				"nativeSrc": "9260:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "9260:81:7"
																			}
																		]
																	},
																	"nativeSrc": "9121:230:7",
																	"nodeType": "YulCase",
																	"src": "9121:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8474:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8474:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8482:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8482:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8471:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8471:2:7"
																},
																"nativeSrc": "8471:14:7",
																"nodeType": "YulFunctionCall",
																"src": "8471:14:7"
															},
															"nativeSrc": "8464:887:7",
															"nodeType": "YulSwitch",
															"src": "8464:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7962:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "8043:4:7",
														"nodeType": "YulTypedName",
														"src": "8043:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "8049:3:7",
														"nodeType": "YulTypedName",
														"src": "8049:3:7",
														"type": ""
													}
												],
												"src": "7962:1395:7"
											},
											{
												"body": {
													"nativeSrc": "9428:53:7",
													"nodeType": "YulBlock",
													"src": "9428:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9445:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9445:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9468:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9468:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9450:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "9450:17:7"
																		},
																		"nativeSrc": "9450:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9450:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9438:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9438:6:7"
																},
																"nativeSrc": "9438:37:7",
																"nodeType": "YulFunctionCall",
																"src": "9438:37:7"
															},
															"nativeSrc": "9438:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "9438:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9363:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9416:5:7",
														"nodeType": "YulTypedName",
														"src": "9416:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9423:3:7",
														"nodeType": "YulTypedName",
														"src": "9423:3:7",
														"type": ""
													}
												],
												"src": "9363:118:7"
											},
											{
												"body": {
													"nativeSrc": "9585:124:7",
													"nodeType": "YulBlock",
													"src": "9585:124:7",
													"statements": [
														{
															"nativeSrc": "9595:26:7",
															"nodeType": "YulAssignment",
															"src": "9595:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9607:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9607:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9618:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9618:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9603:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9603:3:7"
																},
																"nativeSrc": "9603:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9603:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9595:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9595:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9675:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9675:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9688:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9688:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9699:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9699:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9684:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9684:3:7"
																		},
																		"nativeSrc": "9684:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9684:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9631:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9631:43:7"
																},
																"nativeSrc": "9631:71:7",
																"nodeType": "YulFunctionCall",
																"src": "9631:71:7"
															},
															"nativeSrc": "9631:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "9631:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9487:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9557:9:7",
														"nodeType": "YulTypedName",
														"src": "9557:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9569:6:7",
														"nodeType": "YulTypedName",
														"src": "9569:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9580:4:7",
														"nodeType": "YulTypedName",
														"src": "9580:4:7",
														"type": ""
													}
												],
												"src": "9487:222:7"
											},
											{
												"body": {
													"nativeSrc": "9759:147:7",
													"nodeType": "YulBlock",
													"src": "9759:147:7",
													"statements": [
														{
															"nativeSrc": "9769:25:7",
															"nodeType": "YulAssignment",
															"src": "9769:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9792:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9792:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9774:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9774:17:7"
																},
																"nativeSrc": "9774:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9774:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9769:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9769:1:7"
																}
															]
														},
														{
															"nativeSrc": "9803:25:7",
															"nodeType": "YulAssignment",
															"src": "9803:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9826:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9826:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9808:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9808:17:7"
																},
																"nativeSrc": "9808:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9808:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9803:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9803:1:7"
																}
															]
														},
														{
															"nativeSrc": "9837:16:7",
															"nodeType": "YulAssignment",
															"src": "9837:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9848:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9848:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9851:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9851:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9844:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9844:3:7"
																},
																"nativeSrc": "9844:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9844:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9837:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9837:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9877:22:7",
																"nodeType": "YulBlock",
																"src": "9877:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9879:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9879:16:7"
																			},
																			"nativeSrc": "9879:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9879:18:7"
																		},
																		"nativeSrc": "9879:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9879:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9869:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9869:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9872:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9872:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9866:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "9866:2:7"
																},
																"nativeSrc": "9866:10:7",
																"nodeType": "YulFunctionCall",
																"src": "9866:10:7"
															},
															"nativeSrc": "9863:36:7",
															"nodeType": "YulIf",
															"src": "9863:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9715:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9746:1:7",
														"nodeType": "YulTypedName",
														"src": "9746:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9749:1:7",
														"nodeType": "YulTypedName",
														"src": "9749:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9755:3:7",
														"nodeType": "YulTypedName",
														"src": "9755:3:7",
														"type": ""
													}
												],
												"src": "9715:191:7"
											},
											{
												"body": {
													"nativeSrc": "9977:53:7",
													"nodeType": "YulBlock",
													"src": "9977:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9994:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9994:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10017:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "10017:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "9999:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "9999:17:7"
																		},
																		"nativeSrc": "9999:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9999:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9987:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9987:6:7"
																},
																"nativeSrc": "9987:37:7",
																"nodeType": "YulFunctionCall",
																"src": "9987:37:7"
															},
															"nativeSrc": "9987:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "9987:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "9912:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9965:5:7",
														"nodeType": "YulTypedName",
														"src": "9965:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9972:3:7",
														"nodeType": "YulTypedName",
														"src": "9972:3:7",
														"type": ""
													}
												],
												"src": "9912:118:7"
											},
											{
												"body": {
													"nativeSrc": "10190:288:7",
													"nodeType": "YulBlock",
													"src": "10190:288:7",
													"statements": [
														{
															"nativeSrc": "10200:26:7",
															"nodeType": "YulAssignment",
															"src": "10200:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10212:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10212:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10223:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10223:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10208:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10208:3:7"
																},
																"nativeSrc": "10208:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10208:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10200:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10200:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10280:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10280:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10293:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10293:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10304:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10304:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10289:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10289:3:7"
																		},
																		"nativeSrc": "10289:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10289:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10236:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10236:43:7"
																},
																"nativeSrc": "10236:71:7",
																"nodeType": "YulFunctionCall",
																"src": "10236:71:7"
															},
															"nativeSrc": "10236:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "10236:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10361:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10361:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10374:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10374:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10385:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10385:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10370:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10370:3:7"
																		},
																		"nativeSrc": "10370:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10370:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10317:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10317:43:7"
																},
																"nativeSrc": "10317:72:7",
																"nodeType": "YulFunctionCall",
																"src": "10317:72:7"
															},
															"nativeSrc": "10317:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "10317:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10443:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10443:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10456:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10456:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10467:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10467:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10452:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10452:3:7"
																		},
																		"nativeSrc": "10452:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10452:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10399:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10399:43:7"
																},
																"nativeSrc": "10399:72:7",
																"nodeType": "YulFunctionCall",
																"src": "10399:72:7"
															},
															"nativeSrc": "10399:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "10399:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10036:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10146:9:7",
														"nodeType": "YulTypedName",
														"src": "10146:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10158:6:7",
														"nodeType": "YulTypedName",
														"src": "10158:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10166:6:7",
														"nodeType": "YulTypedName",
														"src": "10166:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10174:6:7",
														"nodeType": "YulTypedName",
														"src": "10174:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10185:4:7",
														"nodeType": "YulTypedName",
														"src": "10185:4:7",
														"type": ""
													}
												],
												"src": "10036:442:7"
											},
											{
												"body": {
													"nativeSrc": "10582:124:7",
													"nodeType": "YulBlock",
													"src": "10582:124:7",
													"statements": [
														{
															"nativeSrc": "10592:26:7",
															"nodeType": "YulAssignment",
															"src": "10592:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10604:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10604:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10615:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10615:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10600:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10600:3:7"
																},
																"nativeSrc": "10600:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10600:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10592:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10592:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10672:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10672:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10685:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10685:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10696:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10696:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10681:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10681:3:7"
																		},
																		"nativeSrc": "10681:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10681:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10628:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10628:43:7"
																},
																"nativeSrc": "10628:71:7",
																"nodeType": "YulFunctionCall",
																"src": "10628:71:7"
															},
															"nativeSrc": "10628:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "10628:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "10484:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10554:9:7",
														"nodeType": "YulTypedName",
														"src": "10554:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10566:6:7",
														"nodeType": "YulTypedName",
														"src": "10566:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10577:4:7",
														"nodeType": "YulTypedName",
														"src": "10577:4:7",
														"type": ""
													}
												],
												"src": "10484:222:7"
											}
										]
									},
									"contents": "{\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405262000014620001ae60201b60201c565b60ff16600a62000025919062000815565b620f424062000035919062000865565b60065534801562000044575f80fd5b506040516200213f3803806200213f83398181016040528101906200006a919062000914565b806040518060400160405280601381526020017f5375737461696e6162696c697479546f6b656e000000000000000000000000008152506040518060400160405280600381526020017f53555300000000000000000000000000000000000000000000000000000000008152508160039081620000e8919062000b9f565b508060049081620000fa919062000b9f565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000170575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040162000167919062000c94565b60405180910390fd5b6200018181620001b660201b60201c565b5062000196816006546200027960201b60201c565b620001a7816200030360201b60201c565b5062000d50565b5f6012905090565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620002ec575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401620002e3919062000c94565b60405180910390fd5b620002ff5f83836200039a60201b60201c565b5050565b62000313620005be60201b60201c565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000386575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200037d919062000c94565b60405180910390fd5b6200039781620001b660201b60201c565b50565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603620003ee578060025f828254620003e1919062000caf565b92505081905550620004bf565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156200047a578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401620004719392919062000cfa565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000508578060025f828254039250508190555062000552565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620005b1919062000d35565b60405180910390a3505050565b620005ce6200066060201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16620005f46200066760201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16146200065e57620006206200066060201b60201c565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040162000655919062000c94565b60405180910390fd5b565b5f33905090565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b60018511156200071957808604811115620006f157620006f06200068f565b5b6001851615620007015780820291505b80810290506200071185620006bc565b9450620006d1565b94509492505050565b5f8262000733576001905062000805565b8162000742575f905062000805565b81600181146200075b576002811462000766576200079c565b600191505062000805565b60ff8411156200077b576200077a6200068f565b5b8360020a9150848211156200079557620007946200068f565b5b5062000805565b5060208310610133831016604e8410600b8410161715620007d65782820a905083811115620007d057620007cf6200068f565b5b62000805565b620007e58484846001620006c8565b92509050818404811115620007ff57620007fe6200068f565b5b81810290505b9392505050565b5f819050919050565b5f62000821826200080c565b91506200082e836200080c565b92506200085d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462000722565b905092915050565b5f62000871826200080c565b91506200087e836200080c565b92508282026200088e816200080c565b91508282048414831517620008a857620008a76200068f565b5b5092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620008de82620008b3565b9050919050565b620008f081620008d2565b8114620008fb575f80fd5b50565b5f815190506200090e81620008e5565b92915050565b5f602082840312156200092c576200092b620008af565b5b5f6200093b84828501620008fe565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620009c057607f821691505b602082108103620009d657620009d56200097b565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830262000a3a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620009fd565b62000a468683620009fd565b95508019841693508086168417925050509392505050565b5f819050919050565b5f62000a8762000a8162000a7b846200080c565b62000a5e565b6200080c565b9050919050565b5f819050919050565b62000aa28362000a67565b62000aba62000ab18262000a8e565b84845462000a09565b825550505050565b5f90565b62000ad062000ac2565b62000add81848462000a97565b505050565b5b8181101562000b045762000af85f8262000ac6565b60018101905062000ae3565b5050565b601f82111562000b535762000b1d81620009dc565b62000b2884620009ee565b8101602085101562000b38578190505b62000b5062000b4785620009ee565b83018262000ae2565b50505b505050565b5f82821c905092915050565b5f62000b755f198460080262000b58565b1980831691505092915050565b5f62000b8f838362000b64565b9150826002028217905092915050565b62000baa8262000944565b67ffffffffffffffff81111562000bc65762000bc56200094e565b5b62000bd28254620009a8565b62000bdf82828562000b08565b5f60209050601f83116001811462000c15575f841562000c00578287015190505b62000c0c858262000b82565b86555062000c7b565b601f19841662000c2586620009dc565b5f5b8281101562000c4e5784890151825560018201915060208501945060208101905062000c27565b8683101562000c6e578489015162000c6a601f89168262000b64565b8355505b6001600288020188555050505b505050505050565b62000c8e81620008d2565b82525050565b5f60208201905062000ca95f83018462000c83565b92915050565b5f62000cbb826200080c565b915062000cc8836200080c565b925082820190508082111562000ce35762000ce26200068f565b5b92915050565b62000cf4816200080c565b82525050565b5f60608201905062000d0f5f83018662000c83565b62000d1e602083018562000ce9565b62000d2d604083018462000ce9565b949350505050565b5f60208201905062000d4a5f83018462000ce9565b92915050565b6113e18062000d5e5f395ff3fe608060405234801561000f575f80fd5b5060043610610109575f3560e01c806370a08231116100a05780639dc29fac1161006f5780639dc29fac146102a7578063a9059cbb146102c3578063dd62ed3e146102f3578063e4e103dc14610323578063f2fde38b1461033f57610109565b806370a0823114610231578063715018a6146102615780638da5cb5b1461026b57806395d89b411461028957610109565b806323b872dd116100dc57806323b872dd146101a9578063313ce567146101d9578063378dc3dc146101f757806340c10f191461021557610109565b806306fdde031461010d5780630700037d1461012b578063095ea7b31461015b57806318160ddd1461018b575b5f80fd5b61011561035b565b604051610122919061105a565b60405180910390f35b610145600480360381019061014091906110d8565b6103eb565b604051610152919061111b565b60405180910390f35b6101756004803603810190610170919061115e565b610400565b60405161018291906111b6565b60405180910390f35b610193610413565b6040516101a0919061111b565b60405180910390f35b6101c360048036038101906101be91906111cf565b61041c565b6040516101d091906111b6565b60405180910390f35b6101e1610431565b6040516101ee919061123a565b60405180910390f35b6101ff610439565b60405161020c919061111b565b60405180910390f35b61022f600480360381019061022a919061115e565b61043f565b005b61024b600480360381019061024691906110d8565b6104a3565b604051610258919061111b565b60405180910390f35b6102696104b4565b005b6102736104c7565b6040516102809190611262565b60405180910390f35b6102916104ef565b60405161029e919061105a565b60405180910390f35b6102c160048036038101906102bc919061115e565b61057f565b005b6102dd60048036038101906102d8919061115e565b610595565b6040516102ea91906111b6565b60405180910390f35b61030d6004803603810190610308919061127b565b6105a8565b60405161031a919061111b565b60405180910390f35b61033d6004803603810190610338919061115e565b61062a565b005b610359600480360381019061035491906110d8565b6106ca565b005b60606003805461036a906112e6565b80601f0160208091040260200160405190810160405280929190818152602001828054610396906112e6565b80156103e15780601f106103b8576101008083540402835291602001916103e1565b820191905f5260205f20905b8154815290600101906020018083116103c457829003601f168201915b5050505050905090565b6007602052805f5260405f205f915090505481565b5f61040b838361074e565b905092915050565b5f600254905090565b5f610428848484610770565b90509392505050565b5f6012905090565b60065481565b61044761079e565b6104518282610825565b8173ffffffffffffffffffffffffffffffffffffffff167f3f2c9d57c068687834f0de942a9babb9e5acab57d516d3480a3c16ee165a427382604051610497919061111b565b60405180910390a25050565b5f6104ad826108a4565b9050919050565b6104bc61079e565b6104c55f6108e9565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546104fe906112e6565b80601f016020809104026020016040519081016040528092919081815260200182805461052a906112e6565b80156105755780601f1061054c57610100808354040283529160200191610575565b820191905f5260205f20905b81548152906001019060200180831161055857829003601f168201915b5050505050905090565b61058761079e565b61059182826109ac565b5050565b5f6105a08383610a2b565b905092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b61063261079e565b61063c8282610825565b8060075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546106859190611343565b60075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505050565b6106d261079e565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610742575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107399190611262565b60405180910390fd5b61074b816108e9565b50565b5f80610758610a4d565b9050610765818585610a54565b600191505092915050565b5f8061077a610a4d565b9050610787858285610a66565b610792858585610af8565b60019150509392505050565b6107a6610a4d565b73ffffffffffffffffffffffffffffffffffffffff166107c46104c7565b73ffffffffffffffffffffffffffffffffffffffff1614610823576107e7610a4d565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161081a9190611262565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610895575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161088c9190611262565b60405180910390fd5b6108a05f8383610be8565b5050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a1c575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610a139190611262565b60405180910390fd5b610a27825f83610be8565b5050565b5f80610a35610a4d565b9050610a42818585610af8565b600191505092915050565b5f33905090565b610a618383836001610e01565b505050565b5f610a7184846105a8565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610af25781811015610ae3578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610ada93929190611376565b60405180910390fd5b610af184848484035f610e01565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b68575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610b5f9190611262565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bd8575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610bcf9190611262565b60405180910390fd5b610be3838383610be8565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c38578060025f828254610c2c9190611343565b92505081905550610d06565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610cc1578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610cb893929190611376565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d4d578060025f8282540392505081905550610d97565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610df4919061111b565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610e71575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610e689190611262565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ee1575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610ed89190611262565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610fca578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610fc1919061111b565b60405180910390a35b50505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611007578082015181840152602081019050610fec565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61102c82610fd0565b6110368185610fda565b9350611046818560208601610fea565b61104f81611012565b840191505092915050565b5f6020820190508181035f8301526110728184611022565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6110a78261107e565b9050919050565b6110b78161109d565b81146110c1575f80fd5b50565b5f813590506110d2816110ae565b92915050565b5f602082840312156110ed576110ec61107a565b5b5f6110fa848285016110c4565b91505092915050565b5f819050919050565b61111581611103565b82525050565b5f60208201905061112e5f83018461110c565b92915050565b61113d81611103565b8114611147575f80fd5b50565b5f8135905061115881611134565b92915050565b5f80604083850312156111745761117361107a565b5b5f611181858286016110c4565b92505060206111928582860161114a565b9150509250929050565b5f8115159050919050565b6111b08161119c565b82525050565b5f6020820190506111c95f8301846111a7565b92915050565b5f805f606084860312156111e6576111e561107a565b5b5f6111f3868287016110c4565b9350506020611204868287016110c4565b92505060406112158682870161114a565b9150509250925092565b5f60ff82169050919050565b6112348161121f565b82525050565b5f60208201905061124d5f83018461122b565b92915050565b61125c8161109d565b82525050565b5f6020820190506112755f830184611253565b92915050565b5f80604083850312156112915761129061107a565b5b5f61129e858286016110c4565b92505060206112af858286016110c4565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806112fd57607f821691505b6020821081036113105761130f6112b9565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61134d82611103565b915061135883611103565b92508282019050808211156113705761136f611316565b5b92915050565b5f6060820190506113895f830186611253565b611396602083018561110c565b6113a3604083018461110c565b94935050505056fea2646970667358221220e607775e84c94630f95198c2b351f27baba26c68422d2b3367cf3d08349b98ae64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH3 0x14 PUSH3 0x1AE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xA PUSH3 0x25 SWAP2 SWAP1 PUSH3 0x815 JUMP JUMPDEST PUSH3 0xF4240 PUSH3 0x35 SWAP2 SWAP1 PUSH3 0x865 JUMP JUMPDEST PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x44 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x213F CODESIZE SUB DUP1 PUSH3 0x213F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x6A SWAP2 SWAP1 PUSH3 0x914 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5375737461696E6162696C697479546F6B656E00000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5355530000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xE8 SWAP2 SWAP1 PUSH3 0xB9F JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xFA SWAP2 SWAP1 PUSH3 0xB9F JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x170 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x167 SWAP2 SWAP1 PUSH3 0xC94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x181 DUP2 PUSH3 0x1B6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x196 DUP2 PUSH1 0x6 SLOAD PUSH3 0x279 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1A7 DUP2 PUSH3 0x303 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0xD50 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x2EC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x2E3 SWAP2 SWAP1 PUSH3 0xC94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x2FF PUSH0 DUP4 DUP4 PUSH3 0x39A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0x313 PUSH3 0x5BE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x386 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x37D SWAP2 SWAP1 PUSH3 0xC94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x397 DUP2 PUSH3 0x1B6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x3EE JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x3E1 SWAP2 SWAP1 PUSH3 0xCAF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x4BF JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x47A JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x471 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xCFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x508 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x552 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x5B1 SWAP2 SWAP1 PUSH3 0xD35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH3 0x5CE PUSH3 0x660 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x5F4 PUSH3 0x667 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x65E JUMPI PUSH3 0x620 PUSH3 0x660 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x655 SWAP2 SWAP1 PUSH3 0xC94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH3 0x719 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH3 0x6F1 JUMPI PUSH3 0x6F0 PUSH3 0x68F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH3 0x701 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH3 0x711 DUP6 PUSH3 0x6BC JUMP JUMPDEST SWAP5 POP PUSH3 0x6D1 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH3 0x733 JUMPI PUSH1 0x1 SWAP1 POP PUSH3 0x805 JUMP JUMPDEST DUP2 PUSH3 0x742 JUMPI PUSH0 SWAP1 POP PUSH3 0x805 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x75B JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x766 JUMPI PUSH3 0x79C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x805 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x77B JUMPI PUSH3 0x77A PUSH3 0x68F JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH3 0x795 JUMPI PUSH3 0x794 PUSH3 0x68F JUMP JUMPDEST JUMPDEST POP PUSH3 0x805 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x7D6 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH3 0x7D0 JUMPI PUSH3 0x7CF PUSH3 0x68F JUMP JUMPDEST JUMPDEST PUSH3 0x805 JUMP JUMPDEST PUSH3 0x7E5 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH3 0x6C8 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH3 0x7FF JUMPI PUSH3 0x7FE PUSH3 0x68F JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x821 DUP3 PUSH3 0x80C JUMP JUMPDEST SWAP2 POP PUSH3 0x82E DUP4 PUSH3 0x80C JUMP JUMPDEST SWAP3 POP PUSH3 0x85D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH3 0x722 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x871 DUP3 PUSH3 0x80C JUMP JUMPDEST SWAP2 POP PUSH3 0x87E DUP4 PUSH3 0x80C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0x88E DUP2 PUSH3 0x80C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0x8A8 JUMPI PUSH3 0x8A7 PUSH3 0x68F JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x8DE DUP3 PUSH3 0x8B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x8F0 DUP2 PUSH3 0x8D2 JUMP JUMPDEST DUP2 EQ PUSH3 0x8FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x90E DUP2 PUSH3 0x8E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x92C JUMPI PUSH3 0x92B PUSH3 0x8AF JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x93B DUP5 DUP3 DUP6 ADD PUSH3 0x8FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x9C0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x9D6 JUMPI PUSH3 0x9D5 PUSH3 0x97B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0xA3A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x9FD JUMP JUMPDEST PUSH3 0xA46 DUP7 DUP4 PUSH3 0x9FD JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xA87 PUSH3 0xA81 PUSH3 0xA7B DUP5 PUSH3 0x80C JUMP JUMPDEST PUSH3 0xA5E JUMP JUMPDEST PUSH3 0x80C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xAA2 DUP4 PUSH3 0xA67 JUMP JUMPDEST PUSH3 0xABA PUSH3 0xAB1 DUP3 PUSH3 0xA8E JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0xA09 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0xAD0 PUSH3 0xAC2 JUMP JUMPDEST PUSH3 0xADD DUP2 DUP5 DUP5 PUSH3 0xA97 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xB04 JUMPI PUSH3 0xAF8 PUSH0 DUP3 PUSH3 0xAC6 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0xAE3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0xB53 JUMPI PUSH3 0xB1D DUP2 PUSH3 0x9DC JUMP JUMPDEST PUSH3 0xB28 DUP5 PUSH3 0x9EE JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0xB38 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0xB50 PUSH3 0xB47 DUP6 PUSH3 0x9EE JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0xAE2 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xB75 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0xB58 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xB8F DUP4 DUP4 PUSH3 0xB64 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xBAA DUP3 PUSH3 0x944 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xBC6 JUMPI PUSH3 0xBC5 PUSH3 0x94E JUMP JUMPDEST JUMPDEST PUSH3 0xBD2 DUP3 SLOAD PUSH3 0x9A8 JUMP JUMPDEST PUSH3 0xBDF DUP3 DUP3 DUP6 PUSH3 0xB08 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0xC15 JUMPI PUSH0 DUP5 ISZERO PUSH3 0xC00 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0xC0C DUP6 DUP3 PUSH3 0xB82 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0xC7B JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0xC25 DUP7 PUSH3 0x9DC JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0xC4E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xC27 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0xC6E JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0xC6A PUSH1 0x1F DUP10 AND DUP3 PUSH3 0xB64 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0xC8E DUP2 PUSH3 0x8D2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xCA9 PUSH0 DUP4 ADD DUP5 PUSH3 0xC83 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xCBB DUP3 PUSH3 0x80C JUMP JUMPDEST SWAP2 POP PUSH3 0xCC8 DUP4 PUSH3 0x80C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xCE3 JUMPI PUSH3 0xCE2 PUSH3 0x68F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xCF4 DUP2 PUSH3 0x80C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xD0F PUSH0 DUP4 ADD DUP7 PUSH3 0xC83 JUMP JUMPDEST PUSH3 0xD1E PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xCE9 JUMP JUMPDEST PUSH3 0xD2D PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xCE9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xD4A PUSH0 DUP4 ADD DUP5 PUSH3 0xCE9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13E1 DUP1 PUSH3 0xD5E PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x9DC29FAC GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0xE4E103DC EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x33F JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x289 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x378DC3DC EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x215 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x18B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x115 PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x105A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST PUSH2 0x3EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x111B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x115E JUMP JUMPDEST PUSH2 0x400 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH2 0x413 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x111B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x11CF JUMP JUMPDEST PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E1 PUSH2 0x431 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x123A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FF PUSH2 0x439 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x111B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x115E JUMP JUMPDEST PUSH2 0x43F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x258 SWAP2 SWAP1 PUSH2 0x111B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH2 0x4B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x273 PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x1262 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x291 PUSH2 0x4EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x105A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x115E JUMP JUMPDEST PUSH2 0x57F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x115E JUMP JUMPDEST PUSH2 0x595 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x308 SWAP2 SWAP1 PUSH2 0x127B JUMP JUMPDEST PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x111B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x338 SWAP2 SWAP1 PUSH2 0x115E JUMP JUMPDEST PUSH2 0x62A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x359 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST PUSH2 0x6CA JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x36A SWAP1 PUSH2 0x12E6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x396 SWAP1 PUSH2 0x12E6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x40B DUP4 DUP4 PUSH2 0x74E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x428 DUP5 DUP5 DUP5 PUSH2 0x770 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x447 PUSH2 0x79E JUMP JUMPDEST PUSH2 0x451 DUP3 DUP3 PUSH2 0x825 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3F2C9D57C068687834F0DE942A9BABB9E5ACAB57D516D3480A3C16EE165A4273 DUP3 PUSH1 0x40 MLOAD PUSH2 0x497 SWAP2 SWAP1 PUSH2 0x111B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4AD DUP3 PUSH2 0x8A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4BC PUSH2 0x79E JUMP JUMPDEST PUSH2 0x4C5 PUSH0 PUSH2 0x8E9 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4FE SWAP1 PUSH2 0x12E6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x52A SWAP1 PUSH2 0x12E6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x575 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x54C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x575 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x558 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x587 PUSH2 0x79E JUMP JUMPDEST PUSH2 0x591 DUP3 DUP3 PUSH2 0x9AC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5A0 DUP4 DUP4 PUSH2 0xA2B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x632 PUSH2 0x79E JUMP JUMPDEST PUSH2 0x63C DUP3 DUP3 PUSH2 0x825 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x685 SWAP2 SWAP1 PUSH2 0x1343 JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x6D2 PUSH2 0x79E JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x742 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x739 SWAP2 SWAP1 PUSH2 0x1262 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x74B DUP2 PUSH2 0x8E9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x758 PUSH2 0xA4D JUMP JUMPDEST SWAP1 POP PUSH2 0x765 DUP2 DUP6 DUP6 PUSH2 0xA54 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x77A PUSH2 0xA4D JUMP JUMPDEST SWAP1 POP PUSH2 0x787 DUP6 DUP3 DUP6 PUSH2 0xA66 JUMP JUMPDEST PUSH2 0x792 DUP6 DUP6 DUP6 PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x7A6 PUSH2 0xA4D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7C4 PUSH2 0x4C7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x823 JUMPI PUSH2 0x7E7 PUSH2 0xA4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x81A SWAP2 SWAP1 PUSH2 0x1262 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x895 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88C SWAP2 SWAP1 PUSH2 0x1262 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8A0 PUSH0 DUP4 DUP4 PUSH2 0xBE8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA1C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA13 SWAP2 SWAP1 PUSH2 0x1262 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA27 DUP3 PUSH0 DUP4 PUSH2 0xBE8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA35 PUSH2 0xA4D JUMP JUMPDEST SWAP1 POP PUSH2 0xA42 DUP2 DUP6 DUP6 PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA61 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE01 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA71 DUP5 DUP5 PUSH2 0x5A8 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xAF2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xAE3 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1376 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAF1 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xE01 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB68 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB5F SWAP2 SWAP1 PUSH2 0x1262 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBD8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCF SWAP2 SWAP1 PUSH2 0x1262 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBE3 DUP4 DUP4 DUP4 PUSH2 0xBE8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC38 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC2C SWAP2 SWAP1 PUSH2 0x1343 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xD06 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xCC1 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1376 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD4D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xD97 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xDF4 SWAP2 SWAP1 PUSH2 0x111B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE71 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE68 SWAP2 SWAP1 PUSH2 0x1262 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEE1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xED8 SWAP2 SWAP1 PUSH2 0x1262 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xFCA JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xFC1 SWAP2 SWAP1 PUSH2 0x111B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1007 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xFEC JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x102C DUP3 PUSH2 0xFD0 JUMP JUMPDEST PUSH2 0x1036 DUP2 DUP6 PUSH2 0xFDA JUMP JUMPDEST SWAP4 POP PUSH2 0x1046 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xFEA JUMP JUMPDEST PUSH2 0x104F DUP2 PUSH2 0x1012 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1072 DUP2 DUP5 PUSH2 0x1022 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10A7 DUP3 PUSH2 0x107E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10B7 DUP2 PUSH2 0x109D JUMP JUMPDEST DUP2 EQ PUSH2 0x10C1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10D2 DUP2 PUSH2 0x10AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10ED JUMPI PUSH2 0x10EC PUSH2 0x107A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10FA DUP5 DUP3 DUP6 ADD PUSH2 0x10C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1115 DUP2 PUSH2 0x1103 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x112E PUSH0 DUP4 ADD DUP5 PUSH2 0x110C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x113D DUP2 PUSH2 0x1103 JUMP JUMPDEST DUP2 EQ PUSH2 0x1147 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1158 DUP2 PUSH2 0x1134 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1174 JUMPI PUSH2 0x1173 PUSH2 0x107A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1181 DUP6 DUP3 DUP7 ADD PUSH2 0x10C4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1192 DUP6 DUP3 DUP7 ADD PUSH2 0x114A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11B0 DUP2 PUSH2 0x119C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11C9 PUSH0 DUP4 ADD DUP5 PUSH2 0x11A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11E6 JUMPI PUSH2 0x11E5 PUSH2 0x107A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11F3 DUP7 DUP3 DUP8 ADD PUSH2 0x10C4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1204 DUP7 DUP3 DUP8 ADD PUSH2 0x10C4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1215 DUP7 DUP3 DUP8 ADD PUSH2 0x114A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1234 DUP2 PUSH2 0x121F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x124D PUSH0 DUP4 ADD DUP5 PUSH2 0x122B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x125C DUP2 PUSH2 0x109D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1275 PUSH0 DUP4 ADD DUP5 PUSH2 0x1253 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1291 JUMPI PUSH2 0x1290 PUSH2 0x107A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x129E DUP6 DUP3 DUP7 ADD PUSH2 0x10C4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12AF DUP6 DUP3 DUP7 ADD PUSH2 0x10C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x12FD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1310 JUMPI PUSH2 0x130F PUSH2 0x12B9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x134D DUP3 PUSH2 0x1103 JUMP JUMPDEST SWAP2 POP PUSH2 0x1358 DUP4 PUSH2 0x1103 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1370 JUMPI PUSH2 0x136F PUSH2 0x1316 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1389 PUSH0 DUP4 ADD DUP7 PUSH2 0x1253 JUMP JUMPDEST PUSH2 0x1396 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x110C JUMP JUMPDEST PUSH2 0x13A3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x110C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 SMOD PUSH24 0x5E84C94630F95198C2B351F27BABA26C68422D2B3367CF3D ADDMOD CALLVALUE SWAP12 SWAP9 0xAE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "168:3959:6:-:0;;;424:10;:8;;;:10;;:::i;:::-;416:19;;410:2;:25;;;;:::i;:::-;399:7;:37;;;;:::i;:::-;368:68;;818:287;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;895:12;1601:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;972:34:6::2;978:12;992:13;;972:5;;;:34;;:::i;:::-;1067:31;1085:12;1067:17;;;:31;;:::i;:::-;818:287:::0;168:3959;;2707:82:2;2756:5;2780:2;2773:9;;2707:82;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7458:208:2:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;2543:215:0:-;1531:13;:11;;;:13;;:::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;;;:28;;:::i;:::-;2543:215:::0;:::o;6008:1107:2:-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;1796:162:0:-;1866:12;:10;;;:12;;:::i;:::-;1855:23;;:7;:5;;;:7;;:::i;:::-;:23;;;1851:101;;1928:12;:10;;;:12;;:::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;7:180:7:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:102;235:8;282:5;279:1;275:13;254:34;;193:102;;;:::o;301:848::-;362:5;369:4;393:6;384:15;;417:5;408:14;;431:712;452:1;442:8;439:15;431:712;;;547:4;542:3;538:14;532:4;529:24;526:50;;;556:18;;:::i;:::-;526:50;606:1;596:8;592:16;589:451;;;1021:4;1014:5;1010:16;1001:25;;589:451;1071:4;1065;1061:15;1053:23;;1101:32;1124:8;1101:32;:::i;:::-;1089:44;;431:712;;;301:848;;;;;;;:::o;1155:1073::-;1209:5;1400:8;1390:40;;1421:1;1412:10;;1423:5;;1390:40;1449:4;1439:36;;1466:1;1457:10;;1468:5;;1439:36;1535:4;1583:1;1578:27;;;;1619:1;1614:191;;;;1528:277;;1578:27;1596:1;1587:10;;1598:5;;;1614:191;1659:3;1649:8;1646:17;1643:43;;;1666:18;;:::i;:::-;1643:43;1715:8;1712:1;1708:16;1699:25;;1750:3;1743:5;1740:14;1737:40;;;1757:18;;:::i;:::-;1737:40;1790:5;;;1528:277;;1914:2;1904:8;1901:16;1895:3;1889:4;1886:13;1882:36;1864:2;1854:8;1851:16;1846:2;1840:4;1837:12;1833:35;1817:111;1814:246;;;1970:8;1964:4;1960:19;1951:28;;2005:3;1998:5;1995:14;1992:40;;;2012:18;;:::i;:::-;1992:40;2045:5;;1814:246;2085:42;2123:3;2113:8;2107:4;2104:1;2085:42;:::i;:::-;2070:57;;;;2159:4;2154:3;2150:14;2143:5;2140:25;2137:51;;;2168:18;;:::i;:::-;2137:51;2217:4;2210:5;2206:16;2197:25;;1155:1073;;;;;;:::o;2234:77::-;2271:7;2300:5;2289:16;;2234:77;;;:::o;2317:285::-;2377:5;2401:23;2419:4;2401:23;:::i;:::-;2393:31;;2445:27;2463:8;2445:27;:::i;:::-;2433:39;;2491:104;2528:66;2518:8;2512:4;2491:104;:::i;:::-;2482:113;;2317:285;;;;:::o;2608:410::-;2648:7;2671:20;2689:1;2671:20;:::i;:::-;2666:25;;2705:20;2723:1;2705:20;:::i;:::-;2700:25;;2760:1;2757;2753:9;2782:30;2800:11;2782:30;:::i;:::-;2771:41;;2961:1;2952:7;2948:15;2945:1;2942:22;2922:1;2915:9;2895:83;2872:139;;2991:18;;:::i;:::-;2872:139;2656:362;2608:410;;;;:::o;3105:117::-;3214:1;3211;3204:12;3351:126;3388:7;3428:42;3421:5;3417:54;3406:65;;3351:126;;;:::o;3483:96::-;3520:7;3549:24;3567:5;3549:24;:::i;:::-;3538:35;;3483:96;;;:::o;3585:122::-;3658:24;3676:5;3658:24;:::i;:::-;3651:5;3648:35;3638:63;;3697:1;3694;3687:12;3638:63;3585:122;:::o;3713:143::-;3770:5;3801:6;3795:13;3786:22;;3817:33;3844:5;3817:33;:::i;:::-;3713:143;;;;:::o;3862:351::-;3932:6;3981:2;3969:9;3960:7;3956:23;3952:32;3949:119;;;3987:79;;:::i;:::-;3949:119;4107:1;4132:64;4188:7;4179:6;4168:9;4164:22;4132:64;:::i;:::-;4122:74;;4078:128;3862:351;;;;:::o;4219:99::-;4271:6;4305:5;4299:12;4289:22;;4219:99;;;:::o;4324:180::-;4372:77;4369:1;4362:88;4469:4;4466:1;4459:15;4493:4;4490:1;4483:15;4510:180;4558:77;4555:1;4548:88;4655:4;4652:1;4645:15;4679:4;4676:1;4669:15;4696:320;4740:6;4777:1;4771:4;4767:12;4757:22;;4824:1;4818:4;4814:12;4845:18;4835:81;;4901:4;4893:6;4889:17;4879:27;;4835:81;4963:2;4955:6;4952:14;4932:18;4929:38;4926:84;;4982:18;;:::i;:::-;4926:84;4747:269;4696:320;;;:::o;5022:141::-;5071:4;5094:3;5086:11;;5117:3;5114:1;5107:14;5151:4;5148:1;5138:18;5130:26;;5022:141;;;:::o;5169:93::-;5206:6;5253:2;5248;5241:5;5237:14;5233:23;5223:33;;5169:93;;;:::o;5268:107::-;5312:8;5362:5;5356:4;5352:16;5331:37;;5268:107;;;;:::o;5381:393::-;5450:6;5500:1;5488:10;5484:18;5523:97;5553:66;5542:9;5523:97;:::i;:::-;5641:39;5671:8;5660:9;5641:39;:::i;:::-;5629:51;;5713:4;5709:9;5702:5;5698:21;5689:30;;5762:4;5752:8;5748:19;5741:5;5738:30;5728:40;;5457:317;;5381:393;;;;;:::o;5780:60::-;5808:3;5829:5;5822:12;;5780:60;;;:::o;5846:142::-;5896:9;5929:53;5947:34;5956:24;5974:5;5956:24;:::i;:::-;5947:34;:::i;:::-;5929:53;:::i;:::-;5916:66;;5846:142;;;:::o;5994:75::-;6037:3;6058:5;6051:12;;5994:75;;;:::o;6075:269::-;6185:39;6216:7;6185:39;:::i;:::-;6246:91;6295:41;6319:16;6295:41;:::i;:::-;6287:6;6280:4;6274:11;6246:91;:::i;:::-;6240:4;6233:105;6151:193;6075:269;;;:::o;6350:73::-;6395:3;6350:73;:::o;6429:189::-;6506:32;;:::i;:::-;6547:65;6605:6;6597;6591:4;6547:65;:::i;:::-;6482:136;6429:189;;:::o;6624:186::-;6684:120;6701:3;6694:5;6691:14;6684:120;;;6755:39;6792:1;6785:5;6755:39;:::i;:::-;6728:1;6721:5;6717:13;6708:22;;6684:120;;;6624:186;;:::o;6816:543::-;6917:2;6912:3;6909:11;6906:446;;;6951:38;6983:5;6951:38;:::i;:::-;7035:29;7053:10;7035:29;:::i;:::-;7025:8;7021:44;7218:2;7206:10;7203:18;7200:49;;;7239:8;7224:23;;7200:49;7262:80;7318:22;7336:3;7318:22;:::i;:::-;7308:8;7304:37;7291:11;7262:80;:::i;:::-;6921:431;;6906:446;6816:543;;;:::o;7365:117::-;7419:8;7469:5;7463:4;7459:16;7438:37;;7365:117;;;;:::o;7488:169::-;7532:6;7565:51;7613:1;7609:6;7601:5;7598:1;7594:13;7565:51;:::i;:::-;7561:56;7646:4;7640;7636:15;7626:25;;7539:118;7488:169;;;;:::o;7662:295::-;7738:4;7884:29;7909:3;7903:4;7884:29;:::i;:::-;7876:37;;7946:3;7943:1;7939:11;7933:4;7930:21;7922:29;;7662:295;;;;:::o;7962:1395::-;8079:37;8112:3;8079:37;:::i;:::-;8181:18;8173:6;8170:30;8167:56;;;8203:18;;:::i;:::-;8167:56;8247:38;8279:4;8273:11;8247:38;:::i;:::-;8332:67;8392:6;8384;8378:4;8332:67;:::i;:::-;8426:1;8450:4;8437:17;;8482:2;8474:6;8471:14;8499:1;8494:618;;;;9156:1;9173:6;9170:77;;;9222:9;9217:3;9213:19;9207:26;9198:35;;9170:77;9273:67;9333:6;9326:5;9273:67;:::i;:::-;9267:4;9260:81;9129:222;8464:887;;8494:618;8546:4;8542:9;8534:6;8530:22;8580:37;8612:4;8580:37;:::i;:::-;8639:1;8653:208;8667:7;8664:1;8661:14;8653:208;;;8746:9;8741:3;8737:19;8731:26;8723:6;8716:42;8797:1;8789:6;8785:14;8775:24;;8844:2;8833:9;8829:18;8816:31;;8690:4;8687:1;8683:12;8678:17;;8653:208;;;8889:6;8880:7;8877:19;8874:179;;;8947:9;8942:3;8938:19;8932:26;8990:48;9032:4;9024:6;9020:17;9009:9;8990:48;:::i;:::-;8982:6;8975:64;8897:156;8874:179;9099:1;9095;9087:6;9083:14;9079:22;9073:4;9066:36;8501:611;;;8464:887;;8054:1303;;;7962:1395;;:::o;9363:118::-;9450:24;9468:5;9450:24;:::i;:::-;9445:3;9438:37;9363:118;;:::o;9487:222::-;9580:4;9618:2;9607:9;9603:18;9595:26;;9631:71;9699:1;9688:9;9684:17;9675:6;9631:71;:::i;:::-;9487:222;;;;:::o;9715:191::-;9755:3;9774:20;9792:1;9774:20;:::i;:::-;9769:25;;9808:20;9826:1;9808:20;:::i;:::-;9803:25;;9851:1;9848;9844:9;9837:16;;9872:3;9869:1;9866:10;9863:36;;;9879:18;;:::i;:::-;9863:36;9715:191;;;;:::o;9912:118::-;9999:24;10017:5;9999:24;:::i;:::-;9994:3;9987:37;9912:118;;:::o;10036:442::-;10185:4;10223:2;10212:9;10208:18;10200:26;;10236:71;10304:1;10293:9;10289:17;10280:6;10236:71;:::i;:::-;10317:72;10385:2;10374:9;10370:18;10361:6;10317:72;:::i;:::-;10399;10467:2;10456:9;10452:18;10443:6;10399:72;:::i;:::-;10036:442;;;;;;:::o;10484:222::-;10577:4;10615:2;10604:9;10600:18;10592:26;;10628:71;10696:1;10685:9;10681:17;10672:6;10628:71;:::i;:::-;10484:222;;;;:::o;168:3959:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 2644,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 3585,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_672": {
									"entryPoint": 2476,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1950,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 2085,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 2637,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 2662,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2281,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 2808,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 3048,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 1448,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_1100": {
									"entryPoint": 1024,
									"id": 1100,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1870,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_1082": {
									"entryPoint": 1187,
									"id": 1082,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 2212,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_1023": {
									"entryPoint": 1407,
									"id": 1023,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 1073,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialSupply_953": {
									"entryPoint": 1081,
									"id": 953,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_1007": {
									"entryPoint": 1087,
									"id": 1007,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 859,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1223,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1204,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardUser_1049": {
									"entryPoint": 1578,
									"id": 1049,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@rewards_957": {
									"entryPoint": 1003,
									"id": 957,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 1263,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 1043,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1121": {
									"entryPoint": 1052,
									"id": 1121,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 1904,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 1738,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1067": {
									"entryPoint": 1429,
									"id": 1067,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_409": {
									"entryPoint": 2603,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4426,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4731,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4559,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4651,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4982,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4666,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4048,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4058,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4253,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4355,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4639,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4074,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4838,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4886,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4793,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4218,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4114,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 4270,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7360:7",
										"nodeType": "YulBlock",
										"src": "0:7360:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "208:73:7",
													"nodeType": "YulBlock",
													"src": "208:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:7"
																},
																"nativeSrc": "218:19:7",
																"nodeType": "YulFunctionCall",
																"src": "218:19:7"
															},
															"nativeSrc": "218:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:7"
														},
														{
															"nativeSrc": "246:29:7",
															"nodeType": "YulAssignment",
															"src": "246:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:7",
																		"nodeType": "YulLiteral",
																		"src": "270:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:7"
																},
																"nativeSrc": "261:14:7",
																"nodeType": "YulFunctionCall",
																"src": "261:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:7",
														"nodeType": "YulTypedName",
														"src": "180:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:7",
														"nodeType": "YulTypedName",
														"src": "185:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:7",
														"nodeType": "YulTypedName",
														"src": "196:11:7",
														"type": ""
													}
												],
												"src": "112:169:7"
											},
											{
												"body": {
													"nativeSrc": "349:184:7",
													"nodeType": "YulBlock",
													"src": "349:184:7",
													"statements": [
														{
															"nativeSrc": "359:10:7",
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:7",
															"value": {
																"kind": "number",
																"nativeSrc": "368:1:7",
																"nodeType": "YulLiteral",
																"src": "368:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "363:1:7",
																	"nodeType": "YulTypedName",
																	"src": "363:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "428:63:7",
																"nodeType": "YulBlock",
																"src": "428:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "453:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:7"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "458:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "449:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:7"
																					},
																					"nativeSrc": "449:11:7",
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "472:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:7"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "477:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "468:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:7"
																							},
																							"nativeSrc": "468:11:7",
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "462:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:7"
																					},
																					"nativeSrc": "462:18:7",
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "442:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:7"
																			},
																			"nativeSrc": "442:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:7"
																		},
																		"nativeSrc": "442:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "389:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "392:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "386:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:7"
																},
																"nativeSrc": "386:13:7",
																"nodeType": "YulFunctionCall",
																"src": "386:13:7"
															},
															"nativeSrc": "378:113:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "400:19:7",
																"nodeType": "YulBlock",
																"src": "400:19:7",
																"statements": [
																	{
																		"nativeSrc": "402:15:7",
																		"nodeType": "YulAssignment",
																		"src": "402:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "411:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "414:2:7",
																					"nodeType": "YulLiteral",
																					"src": "414:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "407:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:7"
																			},
																			"nativeSrc": "407:10:7",
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "402:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "382:3:7",
																"nodeType": "YulBlock",
																"src": "382:3:7",
																"statements": []
															},
															"src": "378:113:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "511:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "516:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "507:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:7"
																		},
																		"nativeSrc": "507:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "525:1:7",
																		"nodeType": "YulLiteral",
																		"src": "525:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "500:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:7"
																},
																"nativeSrc": "500:27:7",
																"nodeType": "YulFunctionCall",
																"src": "500:27:7"
															},
															"nativeSrc": "500:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "500:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:246:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:7",
														"nodeType": "YulTypedName",
														"src": "331:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:7",
														"nodeType": "YulTypedName",
														"src": "336:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:7",
														"nodeType": "YulTypedName",
														"src": "341:6:7",
														"type": ""
													}
												],
												"src": "287:246:7"
											},
											{
												"body": {
													"nativeSrc": "587:54:7",
													"nodeType": "YulBlock",
													"src": "587:54:7",
													"statements": [
														{
															"nativeSrc": "597:38:7",
															"nodeType": "YulAssignment",
															"src": "597:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "615:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "622:2:7",
																				"nodeType": "YulLiteral",
																				"src": "622:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "611:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:7"
																		},
																		"nativeSrc": "611:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "631:2:7",
																				"nodeType": "YulLiteral",
																				"src": "631:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "627:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:7"
																		},
																		"nativeSrc": "627:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "607:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:7"
																},
																"nativeSrc": "607:28:7",
																"nodeType": "YulFunctionCall",
																"src": "607:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "597:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "539:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "570:5:7",
														"nodeType": "YulTypedName",
														"src": "570:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "580:6:7",
														"nodeType": "YulTypedName",
														"src": "580:6:7",
														"type": ""
													}
												],
												"src": "539:102:7"
											},
											{
												"body": {
													"nativeSrc": "739:285:7",
													"nodeType": "YulBlock",
													"src": "739:285:7",
													"statements": [
														{
															"nativeSrc": "749:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "796:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "763:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:7"
																},
																"nativeSrc": "763:39:7",
																"nodeType": "YulFunctionCall",
																"src": "763:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "753:6:7",
																	"nodeType": "YulTypedName",
																	"src": "753:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "811:78:7",
															"nodeType": "YulAssignment",
															"src": "811:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "877:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "882:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "818:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:7"
																},
																"nativeSrc": "818:71:7",
																"nodeType": "YulFunctionCall",
																"src": "818:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "811:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "937:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "944:4:7",
																				"nodeType": "YulLiteral",
																				"src": "944:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "933:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:7"
																		},
																		"nativeSrc": "933:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "951:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "956:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "898:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:7"
																},
																"nativeSrc": "898:65:7",
																"nodeType": "YulFunctionCall",
																"src": "898:65:7"
															},
															"nativeSrc": "898:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "898:65:7"
														},
														{
															"nativeSrc": "972:46:7",
															"nodeType": "YulAssignment",
															"src": "972:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "983:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1010:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "988:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:7"
																		},
																		"nativeSrc": "988:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "979:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:7"
																},
																"nativeSrc": "979:39:7",
																"nodeType": "YulFunctionCall",
																"src": "979:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "972:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "647:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "720:5:7",
														"nodeType": "YulTypedName",
														"src": "720:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "727:3:7",
														"nodeType": "YulTypedName",
														"src": "727:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "735:3:7",
														"nodeType": "YulTypedName",
														"src": "735:3:7",
														"type": ""
													}
												],
												"src": "647:377:7"
											},
											{
												"body": {
													"nativeSrc": "1148:195:7",
													"nodeType": "YulBlock",
													"src": "1148:195:7",
													"statements": [
														{
															"nativeSrc": "1158:26:7",
															"nodeType": "YulAssignment",
															"src": "1158:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1170:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1181:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1166:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:7"
																},
																"nativeSrc": "1166:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1166:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1158:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1205:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1216:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1201:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:7"
																		},
																		"nativeSrc": "1201:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1224:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1230:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1220:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:7"
																		},
																		"nativeSrc": "1220:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1194:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:7"
																},
																"nativeSrc": "1194:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1194:47:7"
															},
															"nativeSrc": "1194:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:7"
														},
														{
															"nativeSrc": "1250:86:7",
															"nodeType": "YulAssignment",
															"src": "1250:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1322:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1331:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1258:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:7"
																},
																"nativeSrc": "1258:78:7",
																"nodeType": "YulFunctionCall",
																"src": "1258:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1250:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1030:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1120:9:7",
														"nodeType": "YulTypedName",
														"src": "1120:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1132:6:7",
														"nodeType": "YulTypedName",
														"src": "1132:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1143:4:7",
														"nodeType": "YulTypedName",
														"src": "1143:4:7",
														"type": ""
													}
												],
												"src": "1030:313:7"
											},
											{
												"body": {
													"nativeSrc": "1389:35:7",
													"nodeType": "YulBlock",
													"src": "1389:35:7",
													"statements": [
														{
															"nativeSrc": "1399:19:7",
															"nodeType": "YulAssignment",
															"src": "1399:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1415:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1409:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:7"
																},
																"nativeSrc": "1409:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1409:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1399:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1349:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1382:6:7",
														"nodeType": "YulTypedName",
														"src": "1382:6:7",
														"type": ""
													}
												],
												"src": "1349:75:7"
											},
											{
												"body": {
													"nativeSrc": "1519:28:7",
													"nodeType": "YulBlock",
													"src": "1519:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1536:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1539:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1529:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:7"
																},
																"nativeSrc": "1529:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1529:12:7"
															},
															"nativeSrc": "1529:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1430:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:7"
											},
											{
												"body": {
													"nativeSrc": "1642:28:7",
													"nodeType": "YulBlock",
													"src": "1642:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:7"
																},
																"nativeSrc": "1652:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1652:12:7"
															},
															"nativeSrc": "1652:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1553:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:7"
											},
											{
												"body": {
													"nativeSrc": "1721:81:7",
													"nodeType": "YulBlock",
													"src": "1721:81:7",
													"statements": [
														{
															"nativeSrc": "1731:65:7",
															"nodeType": "YulAssignment",
															"src": "1731:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1746:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1753:42:7",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1742:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:7"
																},
																"nativeSrc": "1742:54:7",
																"nodeType": "YulFunctionCall",
																"src": "1742:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1731:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1676:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1703:5:7",
														"nodeType": "YulTypedName",
														"src": "1703:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1713:7:7",
														"nodeType": "YulTypedName",
														"src": "1713:7:7",
														"type": ""
													}
												],
												"src": "1676:126:7"
											},
											{
												"body": {
													"nativeSrc": "1853:51:7",
													"nodeType": "YulBlock",
													"src": "1853:51:7",
													"statements": [
														{
															"nativeSrc": "1863:35:7",
															"nodeType": "YulAssignment",
															"src": "1863:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1892:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1874:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:7"
																},
																"nativeSrc": "1874:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1874:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1863:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1808:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1835:5:7",
														"nodeType": "YulTypedName",
														"src": "1835:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1845:7:7",
														"nodeType": "YulTypedName",
														"src": "1845:7:7",
														"type": ""
													}
												],
												"src": "1808:96:7"
											},
											{
												"body": {
													"nativeSrc": "1953:79:7",
													"nodeType": "YulBlock",
													"src": "1953:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2010:16:7",
																"nodeType": "YulBlock",
																"src": "2010:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2019:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2022:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2012:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:7"
																			},
																			"nativeSrc": "2012:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:7"
																		},
																		"nativeSrc": "2012:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1976:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2001:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1983:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:7"
																				},
																				"nativeSrc": "1983:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1973:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:7"
																		},
																		"nativeSrc": "1973:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1966:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:7"
																},
																"nativeSrc": "1966:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1966:43:7"
															},
															"nativeSrc": "1963:63:7",
															"nodeType": "YulIf",
															"src": "1963:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1910:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1946:5:7",
														"nodeType": "YulTypedName",
														"src": "1946:5:7",
														"type": ""
													}
												],
												"src": "1910:122:7"
											},
											{
												"body": {
													"nativeSrc": "2090:87:7",
													"nodeType": "YulBlock",
													"src": "2090:87:7",
													"statements": [
														{
															"nativeSrc": "2100:29:7",
															"nodeType": "YulAssignment",
															"src": "2100:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2122:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2109:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:7"
																},
																"nativeSrc": "2109:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2109:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2100:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2165:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2138:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:7"
																},
																"nativeSrc": "2138:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2138:33:7"
															},
															"nativeSrc": "2138:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2038:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2068:6:7",
														"nodeType": "YulTypedName",
														"src": "2068:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2076:3:7",
														"nodeType": "YulTypedName",
														"src": "2076:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2084:5:7",
														"nodeType": "YulTypedName",
														"src": "2084:5:7",
														"type": ""
													}
												],
												"src": "2038:139:7"
											},
											{
												"body": {
													"nativeSrc": "2249:263:7",
													"nodeType": "YulBlock",
													"src": "2249:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2295:83:7",
																"nodeType": "YulBlock",
																"src": "2295:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2297:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2297:77:7"
																			},
																			"nativeSrc": "2297:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2297:79:7"
																		},
																		"nativeSrc": "2297:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2297:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2270:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2270:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2279:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2279:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2266:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2266:3:7"
																		},
																		"nativeSrc": "2266:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2266:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2291:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2291:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2262:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2262:3:7"
																},
																"nativeSrc": "2262:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2262:32:7"
															},
															"nativeSrc": "2259:119:7",
															"nodeType": "YulIf",
															"src": "2259:119:7"
														},
														{
															"nativeSrc": "2388:117:7",
															"nodeType": "YulBlock",
															"src": "2388:117:7",
															"statements": [
																{
																	"nativeSrc": "2403:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2403:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2417:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2417:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2407:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2407:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2432:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2432:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2467:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2467:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2478:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2478:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2463:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2463:3:7"
																				},
																				"nativeSrc": "2463:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2463:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2487:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2487:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2442:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2442:20:7"
																		},
																		"nativeSrc": "2442:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2442:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2432:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2432:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2183:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2219:9:7",
														"nodeType": "YulTypedName",
														"src": "2219:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2230:7:7",
														"nodeType": "YulTypedName",
														"src": "2230:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2242:6:7",
														"nodeType": "YulTypedName",
														"src": "2242:6:7",
														"type": ""
													}
												],
												"src": "2183:329:7"
											},
											{
												"body": {
													"nativeSrc": "2563:32:7",
													"nodeType": "YulBlock",
													"src": "2563:32:7",
													"statements": [
														{
															"nativeSrc": "2573:16:7",
															"nodeType": "YulAssignment",
															"src": "2573:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2584:5:7",
																"nodeType": "YulIdentifier",
																"src": "2584:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2573:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2573:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2518:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2545:5:7",
														"nodeType": "YulTypedName",
														"src": "2545:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2555:7:7",
														"nodeType": "YulTypedName",
														"src": "2555:7:7",
														"type": ""
													}
												],
												"src": "2518:77:7"
											},
											{
												"body": {
													"nativeSrc": "2666:53:7",
													"nodeType": "YulBlock",
													"src": "2666:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2683:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2683:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2706:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2706:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2688:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "2688:17:7"
																		},
																		"nativeSrc": "2688:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2688:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2676:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2676:6:7"
																},
																"nativeSrc": "2676:37:7",
																"nodeType": "YulFunctionCall",
																"src": "2676:37:7"
															},
															"nativeSrc": "2676:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "2676:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2601:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2654:5:7",
														"nodeType": "YulTypedName",
														"src": "2654:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2661:3:7",
														"nodeType": "YulTypedName",
														"src": "2661:3:7",
														"type": ""
													}
												],
												"src": "2601:118:7"
											},
											{
												"body": {
													"nativeSrc": "2823:124:7",
													"nodeType": "YulBlock",
													"src": "2823:124:7",
													"statements": [
														{
															"nativeSrc": "2833:26:7",
															"nodeType": "YulAssignment",
															"src": "2833:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2845:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2845:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2856:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2856:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2841:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2841:3:7"
																},
																"nativeSrc": "2841:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2841:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2833:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2833:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2913:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2913:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2926:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2926:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2937:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2937:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2922:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2922:3:7"
																		},
																		"nativeSrc": "2922:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2922:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2869:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "2869:43:7"
																},
																"nativeSrc": "2869:71:7",
																"nodeType": "YulFunctionCall",
																"src": "2869:71:7"
															},
															"nativeSrc": "2869:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "2869:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2725:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2795:9:7",
														"nodeType": "YulTypedName",
														"src": "2795:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2807:6:7",
														"nodeType": "YulTypedName",
														"src": "2807:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2818:4:7",
														"nodeType": "YulTypedName",
														"src": "2818:4:7",
														"type": ""
													}
												],
												"src": "2725:222:7"
											},
											{
												"body": {
													"nativeSrc": "2996:79:7",
													"nodeType": "YulBlock",
													"src": "2996:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3053:16:7",
																"nodeType": "YulBlock",
																"src": "3053:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3062:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3062:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3065:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3065:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3055:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3055:6:7"
																			},
																			"nativeSrc": "3055:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3055:12:7"
																		},
																		"nativeSrc": "3055:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3055:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3019:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3019:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3044:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3044:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3026:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "3026:17:7"
																				},
																				"nativeSrc": "3026:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3026:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3016:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3016:2:7"
																		},
																		"nativeSrc": "3016:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3016:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3009:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3009:6:7"
																},
																"nativeSrc": "3009:43:7",
																"nodeType": "YulFunctionCall",
																"src": "3009:43:7"
															},
															"nativeSrc": "3006:63:7",
															"nodeType": "YulIf",
															"src": "3006:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2953:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2989:5:7",
														"nodeType": "YulTypedName",
														"src": "2989:5:7",
														"type": ""
													}
												],
												"src": "2953:122:7"
											},
											{
												"body": {
													"nativeSrc": "3133:87:7",
													"nodeType": "YulBlock",
													"src": "3133:87:7",
													"statements": [
														{
															"nativeSrc": "3143:29:7",
															"nodeType": "YulAssignment",
															"src": "3143:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3165:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3165:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3152:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "3152:12:7"
																},
																"nativeSrc": "3152:20:7",
																"nodeType": "YulFunctionCall",
																"src": "3152:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3143:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3143:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3208:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3208:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3181:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "3181:26:7"
																},
																"nativeSrc": "3181:33:7",
																"nodeType": "YulFunctionCall",
																"src": "3181:33:7"
															},
															"nativeSrc": "3181:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "3181:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3081:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3111:6:7",
														"nodeType": "YulTypedName",
														"src": "3111:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3119:3:7",
														"nodeType": "YulTypedName",
														"src": "3119:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3127:5:7",
														"nodeType": "YulTypedName",
														"src": "3127:5:7",
														"type": ""
													}
												],
												"src": "3081:139:7"
											},
											{
												"body": {
													"nativeSrc": "3309:391:7",
													"nodeType": "YulBlock",
													"src": "3309:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3355:83:7",
																"nodeType": "YulBlock",
																"src": "3355:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3357:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3357:77:7"
																			},
																			"nativeSrc": "3357:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3357:79:7"
																		},
																		"nativeSrc": "3357:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3357:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3330:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3330:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3339:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3339:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3326:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3326:3:7"
																		},
																		"nativeSrc": "3326:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3326:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3351:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3351:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3322:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3322:3:7"
																},
																"nativeSrc": "3322:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3322:32:7"
															},
															"nativeSrc": "3319:119:7",
															"nodeType": "YulIf",
															"src": "3319:119:7"
														},
														{
															"nativeSrc": "3448:117:7",
															"nodeType": "YulBlock",
															"src": "3448:117:7",
															"statements": [
																{
																	"nativeSrc": "3463:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3463:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3477:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3477:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3467:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3467:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3492:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3492:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3527:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3527:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3538:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3538:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3523:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3523:3:7"
																				},
																				"nativeSrc": "3523:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3523:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3547:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3547:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3502:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3502:20:7"
																		},
																		"nativeSrc": "3502:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3502:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3492:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3492:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3575:118:7",
															"nodeType": "YulBlock",
															"src": "3575:118:7",
															"statements": [
																{
																	"nativeSrc": "3590:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3590:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3604:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3604:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3594:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3594:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3620:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3620:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3655:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3655:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3666:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3666:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3651:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3651:3:7"
																				},
																				"nativeSrc": "3651:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3651:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3675:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3675:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3630:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3630:20:7"
																		},
																		"nativeSrc": "3630:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3630:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3620:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3620:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3226:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3271:9:7",
														"nodeType": "YulTypedName",
														"src": "3271:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3282:7:7",
														"nodeType": "YulTypedName",
														"src": "3282:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3294:6:7",
														"nodeType": "YulTypedName",
														"src": "3294:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3302:6:7",
														"nodeType": "YulTypedName",
														"src": "3302:6:7",
														"type": ""
													}
												],
												"src": "3226:474:7"
											},
											{
												"body": {
													"nativeSrc": "3748:48:7",
													"nodeType": "YulBlock",
													"src": "3748:48:7",
													"statements": [
														{
															"nativeSrc": "3758:32:7",
															"nodeType": "YulAssignment",
															"src": "3758:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3783:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3783:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3776:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3776:6:7"
																		},
																		"nativeSrc": "3776:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3776:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3769:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3769:6:7"
																},
																"nativeSrc": "3769:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3769:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3758:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3758:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3706:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3730:5:7",
														"nodeType": "YulTypedName",
														"src": "3730:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3740:7:7",
														"nodeType": "YulTypedName",
														"src": "3740:7:7",
														"type": ""
													}
												],
												"src": "3706:90:7"
											},
											{
												"body": {
													"nativeSrc": "3861:50:7",
													"nodeType": "YulBlock",
													"src": "3861:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3878:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3878:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3898:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3898:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3883:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3883:14:7"
																		},
																		"nativeSrc": "3883:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3883:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3871:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3871:6:7"
																},
																"nativeSrc": "3871:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3871:34:7"
															},
															"nativeSrc": "3871:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3871:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3802:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3849:5:7",
														"nodeType": "YulTypedName",
														"src": "3849:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3856:3:7",
														"nodeType": "YulTypedName",
														"src": "3856:3:7",
														"type": ""
													}
												],
												"src": "3802:109:7"
											},
											{
												"body": {
													"nativeSrc": "4009:118:7",
													"nodeType": "YulBlock",
													"src": "4009:118:7",
													"statements": [
														{
															"nativeSrc": "4019:26:7",
															"nodeType": "YulAssignment",
															"src": "4019:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4031:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4031:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4042:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4042:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4027:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4027:3:7"
																},
																"nativeSrc": "4027:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4027:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4019:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4019:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4093:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4093:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4106:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4106:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4117:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4117:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4102:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4102:3:7"
																		},
																		"nativeSrc": "4102:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4102:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "4055:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "4055:37:7"
																},
																"nativeSrc": "4055:65:7",
																"nodeType": "YulFunctionCall",
																"src": "4055:65:7"
															},
															"nativeSrc": "4055:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "4055:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3917:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3981:9:7",
														"nodeType": "YulTypedName",
														"src": "3981:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3993:6:7",
														"nodeType": "YulTypedName",
														"src": "3993:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4004:4:7",
														"nodeType": "YulTypedName",
														"src": "4004:4:7",
														"type": ""
													}
												],
												"src": "3917:210:7"
											},
											{
												"body": {
													"nativeSrc": "4233:519:7",
													"nodeType": "YulBlock",
													"src": "4233:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4279:83:7",
																"nodeType": "YulBlock",
																"src": "4279:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4281:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4281:77:7"
																			},
																			"nativeSrc": "4281:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4281:79:7"
																		},
																		"nativeSrc": "4281:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4281:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4254:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4254:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4263:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4263:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4250:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4250:3:7"
																		},
																		"nativeSrc": "4250:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4250:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4275:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4275:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4246:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4246:3:7"
																},
																"nativeSrc": "4246:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4246:32:7"
															},
															"nativeSrc": "4243:119:7",
															"nodeType": "YulIf",
															"src": "4243:119:7"
														},
														{
															"nativeSrc": "4372:117:7",
															"nodeType": "YulBlock",
															"src": "4372:117:7",
															"statements": [
																{
																	"nativeSrc": "4387:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4387:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4401:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4401:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4391:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4391:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4416:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4416:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4451:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4451:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4462:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4462:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4447:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4447:3:7"
																				},
																				"nativeSrc": "4447:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4447:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4471:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4471:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4426:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4426:20:7"
																		},
																		"nativeSrc": "4426:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4426:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4416:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4416:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4499:118:7",
															"nodeType": "YulBlock",
															"src": "4499:118:7",
															"statements": [
																{
																	"nativeSrc": "4514:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4514:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4528:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4528:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4518:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4518:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4544:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4544:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4579:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4579:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4590:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4590:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4575:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4575:3:7"
																				},
																				"nativeSrc": "4575:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4575:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4599:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4599:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4554:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4554:20:7"
																		},
																		"nativeSrc": "4554:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4554:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4544:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4544:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4627:118:7",
															"nodeType": "YulBlock",
															"src": "4627:118:7",
															"statements": [
																{
																	"nativeSrc": "4642:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4642:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4656:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4656:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4646:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4646:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4672:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4672:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4707:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4707:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4718:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4718:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4703:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4703:3:7"
																				},
																				"nativeSrc": "4703:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4703:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4727:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4727:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4682:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4682:20:7"
																		},
																		"nativeSrc": "4682:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4682:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4672:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4672:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4133:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4187:9:7",
														"nodeType": "YulTypedName",
														"src": "4187:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4198:7:7",
														"nodeType": "YulTypedName",
														"src": "4198:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4210:6:7",
														"nodeType": "YulTypedName",
														"src": "4210:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4218:6:7",
														"nodeType": "YulTypedName",
														"src": "4218:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4226:6:7",
														"nodeType": "YulTypedName",
														"src": "4226:6:7",
														"type": ""
													}
												],
												"src": "4133:619:7"
											},
											{
												"body": {
													"nativeSrc": "4801:43:7",
													"nodeType": "YulBlock",
													"src": "4801:43:7",
													"statements": [
														{
															"nativeSrc": "4811:27:7",
															"nodeType": "YulAssignment",
															"src": "4811:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4826:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4826:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4833:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4833:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4822:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4822:3:7"
																},
																"nativeSrc": "4822:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4822:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4811:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4811:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4758:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4783:5:7",
														"nodeType": "YulTypedName",
														"src": "4783:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4793:7:7",
														"nodeType": "YulTypedName",
														"src": "4793:7:7",
														"type": ""
													}
												],
												"src": "4758:86:7"
											},
											{
												"body": {
													"nativeSrc": "4911:51:7",
													"nodeType": "YulBlock",
													"src": "4911:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4928:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4928:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4949:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4949:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4933:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "4933:15:7"
																		},
																		"nativeSrc": "4933:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4933:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4921:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4921:6:7"
																},
																"nativeSrc": "4921:35:7",
																"nodeType": "YulFunctionCall",
																"src": "4921:35:7"
															},
															"nativeSrc": "4921:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "4921:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4850:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4899:5:7",
														"nodeType": "YulTypedName",
														"src": "4899:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4906:3:7",
														"nodeType": "YulTypedName",
														"src": "4906:3:7",
														"type": ""
													}
												],
												"src": "4850:112:7"
											},
											{
												"body": {
													"nativeSrc": "5062:120:7",
													"nodeType": "YulBlock",
													"src": "5062:120:7",
													"statements": [
														{
															"nativeSrc": "5072:26:7",
															"nodeType": "YulAssignment",
															"src": "5072:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5084:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5084:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5095:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5095:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5080:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5080:3:7"
																},
																"nativeSrc": "5080:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5080:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5072:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5072:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5148:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5148:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5161:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5161:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5172:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5172:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5157:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5157:3:7"
																		},
																		"nativeSrc": "5157:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5157:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5108:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "5108:39:7"
																},
																"nativeSrc": "5108:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5108:67:7"
															},
															"nativeSrc": "5108:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "5108:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4968:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5034:9:7",
														"nodeType": "YulTypedName",
														"src": "5034:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5046:6:7",
														"nodeType": "YulTypedName",
														"src": "5046:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5057:4:7",
														"nodeType": "YulTypedName",
														"src": "5057:4:7",
														"type": ""
													}
												],
												"src": "4968:214:7"
											},
											{
												"body": {
													"nativeSrc": "5253:53:7",
													"nodeType": "YulBlock",
													"src": "5253:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5270:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5270:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5293:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5293:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5275:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "5275:17:7"
																		},
																		"nativeSrc": "5275:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5275:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5263:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5263:6:7"
																},
																"nativeSrc": "5263:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5263:37:7"
															},
															"nativeSrc": "5263:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "5263:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5188:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5241:5:7",
														"nodeType": "YulTypedName",
														"src": "5241:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5248:3:7",
														"nodeType": "YulTypedName",
														"src": "5248:3:7",
														"type": ""
													}
												],
												"src": "5188:118:7"
											},
											{
												"body": {
													"nativeSrc": "5410:124:7",
													"nodeType": "YulBlock",
													"src": "5410:124:7",
													"statements": [
														{
															"nativeSrc": "5420:26:7",
															"nodeType": "YulAssignment",
															"src": "5420:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5432:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5432:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5443:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5443:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5428:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5428:3:7"
																},
																"nativeSrc": "5428:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5428:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5420:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5420:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5500:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5500:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5513:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5513:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5524:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5524:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5509:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5509:3:7"
																		},
																		"nativeSrc": "5509:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5509:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5456:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5456:43:7"
																},
																"nativeSrc": "5456:71:7",
																"nodeType": "YulFunctionCall",
																"src": "5456:71:7"
															},
															"nativeSrc": "5456:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "5456:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5312:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5382:9:7",
														"nodeType": "YulTypedName",
														"src": "5382:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5394:6:7",
														"nodeType": "YulTypedName",
														"src": "5394:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5405:4:7",
														"nodeType": "YulTypedName",
														"src": "5405:4:7",
														"type": ""
													}
												],
												"src": "5312:222:7"
											},
											{
												"body": {
													"nativeSrc": "5623:391:7",
													"nodeType": "YulBlock",
													"src": "5623:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5669:83:7",
																"nodeType": "YulBlock",
																"src": "5669:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5671:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5671:77:7"
																			},
																			"nativeSrc": "5671:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5671:79:7"
																		},
																		"nativeSrc": "5671:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5671:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5644:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5644:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5653:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5653:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5640:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5640:3:7"
																		},
																		"nativeSrc": "5640:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5640:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5665:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5665:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5636:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5636:3:7"
																},
																"nativeSrc": "5636:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5636:32:7"
															},
															"nativeSrc": "5633:119:7",
															"nodeType": "YulIf",
															"src": "5633:119:7"
														},
														{
															"nativeSrc": "5762:117:7",
															"nodeType": "YulBlock",
															"src": "5762:117:7",
															"statements": [
																{
																	"nativeSrc": "5777:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5777:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5791:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5791:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5781:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5781:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5806:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5806:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5841:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5841:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5852:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5852:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5837:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5837:3:7"
																				},
																				"nativeSrc": "5837:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5837:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5861:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5861:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5816:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5816:20:7"
																		},
																		"nativeSrc": "5816:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5816:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5806:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5806:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5889:118:7",
															"nodeType": "YulBlock",
															"src": "5889:118:7",
															"statements": [
																{
																	"nativeSrc": "5904:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5904:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5918:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5918:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5908:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5908:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5934:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5934:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5969:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5969:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5980:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5980:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5965:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5965:3:7"
																				},
																				"nativeSrc": "5965:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5965:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5989:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5989:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5944:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5944:20:7"
																		},
																		"nativeSrc": "5944:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5944:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5934:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5934:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5540:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5585:9:7",
														"nodeType": "YulTypedName",
														"src": "5585:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5596:7:7",
														"nodeType": "YulTypedName",
														"src": "5596:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5608:6:7",
														"nodeType": "YulTypedName",
														"src": "5608:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5616:6:7",
														"nodeType": "YulTypedName",
														"src": "5616:6:7",
														"type": ""
													}
												],
												"src": "5540:474:7"
											},
											{
												"body": {
													"nativeSrc": "6048:152:7",
													"nodeType": "YulBlock",
													"src": "6048:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6065:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6065:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6068:77:7",
																		"nodeType": "YulLiteral",
																		"src": "6068:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6058:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6058:6:7"
																},
																"nativeSrc": "6058:88:7",
																"nodeType": "YulFunctionCall",
																"src": "6058:88:7"
															},
															"nativeSrc": "6058:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "6058:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6162:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6162:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6165:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6165:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6155:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6155:6:7"
																},
																"nativeSrc": "6155:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6155:15:7"
															},
															"nativeSrc": "6155:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6155:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6186:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6186:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6189:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6189:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6179:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6179:6:7"
																},
																"nativeSrc": "6179:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6179:15:7"
															},
															"nativeSrc": "6179:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6179:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6020:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "6020:180:7"
											},
											{
												"body": {
													"nativeSrc": "6257:269:7",
													"nodeType": "YulBlock",
													"src": "6257:269:7",
													"statements": [
														{
															"nativeSrc": "6267:22:7",
															"nodeType": "YulAssignment",
															"src": "6267:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6281:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6281:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6287:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6287:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6277:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6277:3:7"
																},
																"nativeSrc": "6277:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6277:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6267:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6267:6:7"
																}
															]
														},
														{
															"nativeSrc": "6298:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6298:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6328:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6328:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6334:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6334:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6324:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6324:3:7"
																},
																"nativeSrc": "6324:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6324:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6302:18:7",
																	"nodeType": "YulTypedName",
																	"src": "6302:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6375:51:7",
																"nodeType": "YulBlock",
																"src": "6375:51:7",
																"statements": [
																	{
																		"nativeSrc": "6389:27:7",
																		"nodeType": "YulAssignment",
																		"src": "6389:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6403:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "6403:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6411:4:7",
																					"nodeType": "YulLiteral",
																					"src": "6411:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6399:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6399:3:7"
																			},
																			"nativeSrc": "6399:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6399:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6389:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6389:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6355:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "6355:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6348:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6348:6:7"
																},
																"nativeSrc": "6348:26:7",
																"nodeType": "YulFunctionCall",
																"src": "6348:26:7"
															},
															"nativeSrc": "6345:81:7",
															"nodeType": "YulIf",
															"src": "6345:81:7"
														},
														{
															"body": {
																"nativeSrc": "6478:42:7",
																"nodeType": "YulBlock",
																"src": "6478:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6492:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "6492:16:7"
																			},
																			"nativeSrc": "6492:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6492:18:7"
																		},
																		"nativeSrc": "6492:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6492:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6442:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "6442:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6465:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6465:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6473:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6473:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6462:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6462:2:7"
																		},
																		"nativeSrc": "6462:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6462:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6439:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6439:2:7"
																},
																"nativeSrc": "6439:38:7",
																"nodeType": "YulFunctionCall",
																"src": "6439:38:7"
															},
															"nativeSrc": "6436:84:7",
															"nodeType": "YulIf",
															"src": "6436:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6206:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6241:4:7",
														"nodeType": "YulTypedName",
														"src": "6241:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6250:6:7",
														"nodeType": "YulTypedName",
														"src": "6250:6:7",
														"type": ""
													}
												],
												"src": "6206:320:7"
											},
											{
												"body": {
													"nativeSrc": "6560:152:7",
													"nodeType": "YulBlock",
													"src": "6560:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6577:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6577:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6580:77:7",
																		"nodeType": "YulLiteral",
																		"src": "6580:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6570:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6570:6:7"
																},
																"nativeSrc": "6570:88:7",
																"nodeType": "YulFunctionCall",
																"src": "6570:88:7"
															},
															"nativeSrc": "6570:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "6570:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6674:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6674:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6677:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6677:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6667:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6667:6:7"
																},
																"nativeSrc": "6667:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6667:15:7"
															},
															"nativeSrc": "6667:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6667:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6698:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6698:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6701:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6701:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6691:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6691:6:7"
																},
																"nativeSrc": "6691:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6691:15:7"
															},
															"nativeSrc": "6691:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6691:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6532:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "6532:180:7"
											},
											{
												"body": {
													"nativeSrc": "6762:147:7",
													"nodeType": "YulBlock",
													"src": "6762:147:7",
													"statements": [
														{
															"nativeSrc": "6772:25:7",
															"nodeType": "YulAssignment",
															"src": "6772:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6795:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6795:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6777:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "6777:17:7"
																},
																"nativeSrc": "6777:20:7",
																"nodeType": "YulFunctionCall",
																"src": "6777:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6772:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "6772:1:7"
																}
															]
														},
														{
															"nativeSrc": "6806:25:7",
															"nodeType": "YulAssignment",
															"src": "6806:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6829:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6829:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6811:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "6811:17:7"
																},
																"nativeSrc": "6811:20:7",
																"nodeType": "YulFunctionCall",
																"src": "6811:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6806:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "6806:1:7"
																}
															]
														},
														{
															"nativeSrc": "6840:16:7",
															"nodeType": "YulAssignment",
															"src": "6840:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6851:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6851:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6854:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6854:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6847:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6847:3:7"
																},
																"nativeSrc": "6847:9:7",
																"nodeType": "YulFunctionCall",
																"src": "6847:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6840:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6840:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6880:22:7",
																"nodeType": "YulBlock",
																"src": "6880:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6882:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "6882:16:7"
																			},
																			"nativeSrc": "6882:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6882:18:7"
																		},
																		"nativeSrc": "6882:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6882:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6872:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6872:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6875:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6875:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6869:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6869:2:7"
																},
																"nativeSrc": "6869:10:7",
																"nodeType": "YulFunctionCall",
																"src": "6869:10:7"
															},
															"nativeSrc": "6866:36:7",
															"nodeType": "YulIf",
															"src": "6866:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6718:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6749:1:7",
														"nodeType": "YulTypedName",
														"src": "6749:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6752:1:7",
														"nodeType": "YulTypedName",
														"src": "6752:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6758:3:7",
														"nodeType": "YulTypedName",
														"src": "6758:3:7",
														"type": ""
													}
												],
												"src": "6718:191:7"
											},
											{
												"body": {
													"nativeSrc": "7069:288:7",
													"nodeType": "YulBlock",
													"src": "7069:288:7",
													"statements": [
														{
															"nativeSrc": "7079:26:7",
															"nodeType": "YulAssignment",
															"src": "7079:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7091:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7091:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7102:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7102:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7087:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7087:3:7"
																},
																"nativeSrc": "7087:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7087:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7079:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7079:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7159:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7159:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7172:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7172:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7183:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7183:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7168:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7168:3:7"
																		},
																		"nativeSrc": "7168:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7168:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7115:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7115:43:7"
																},
																"nativeSrc": "7115:71:7",
																"nodeType": "YulFunctionCall",
																"src": "7115:71:7"
															},
															"nativeSrc": "7115:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "7115:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7240:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7240:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7253:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7253:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7264:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7264:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7249:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7249:3:7"
																		},
																		"nativeSrc": "7249:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7249:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7196:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7196:43:7"
																},
																"nativeSrc": "7196:72:7",
																"nodeType": "YulFunctionCall",
																"src": "7196:72:7"
															},
															"nativeSrc": "7196:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "7196:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7322:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7322:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7335:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7335:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7346:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7346:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7331:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7331:3:7"
																		},
																		"nativeSrc": "7331:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7331:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7278:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7278:43:7"
																},
																"nativeSrc": "7278:72:7",
																"nodeType": "YulFunctionCall",
																"src": "7278:72:7"
															},
															"nativeSrc": "7278:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "7278:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6915:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7025:9:7",
														"nodeType": "YulTypedName",
														"src": "7025:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7037:6:7",
														"nodeType": "YulTypedName",
														"src": "7037:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7045:6:7",
														"nodeType": "YulTypedName",
														"src": "7045:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7053:6:7",
														"nodeType": "YulTypedName",
														"src": "7053:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7064:4:7",
														"nodeType": "YulTypedName",
														"src": "7064:4:7",
														"type": ""
													}
												],
												"src": "6915:442:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610109575f3560e01c806370a08231116100a05780639dc29fac1161006f5780639dc29fac146102a7578063a9059cbb146102c3578063dd62ed3e146102f3578063e4e103dc14610323578063f2fde38b1461033f57610109565b806370a0823114610231578063715018a6146102615780638da5cb5b1461026b57806395d89b411461028957610109565b806323b872dd116100dc57806323b872dd146101a9578063313ce567146101d9578063378dc3dc146101f757806340c10f191461021557610109565b806306fdde031461010d5780630700037d1461012b578063095ea7b31461015b57806318160ddd1461018b575b5f80fd5b61011561035b565b604051610122919061105a565b60405180910390f35b610145600480360381019061014091906110d8565b6103eb565b604051610152919061111b565b60405180910390f35b6101756004803603810190610170919061115e565b610400565b60405161018291906111b6565b60405180910390f35b610193610413565b6040516101a0919061111b565b60405180910390f35b6101c360048036038101906101be91906111cf565b61041c565b6040516101d091906111b6565b60405180910390f35b6101e1610431565b6040516101ee919061123a565b60405180910390f35b6101ff610439565b60405161020c919061111b565b60405180910390f35b61022f600480360381019061022a919061115e565b61043f565b005b61024b600480360381019061024691906110d8565b6104a3565b604051610258919061111b565b60405180910390f35b6102696104b4565b005b6102736104c7565b6040516102809190611262565b60405180910390f35b6102916104ef565b60405161029e919061105a565b60405180910390f35b6102c160048036038101906102bc919061115e565b61057f565b005b6102dd60048036038101906102d8919061115e565b610595565b6040516102ea91906111b6565b60405180910390f35b61030d6004803603810190610308919061127b565b6105a8565b60405161031a919061111b565b60405180910390f35b61033d6004803603810190610338919061115e565b61062a565b005b610359600480360381019061035491906110d8565b6106ca565b005b60606003805461036a906112e6565b80601f0160208091040260200160405190810160405280929190818152602001828054610396906112e6565b80156103e15780601f106103b8576101008083540402835291602001916103e1565b820191905f5260205f20905b8154815290600101906020018083116103c457829003601f168201915b5050505050905090565b6007602052805f5260405f205f915090505481565b5f61040b838361074e565b905092915050565b5f600254905090565b5f610428848484610770565b90509392505050565b5f6012905090565b60065481565b61044761079e565b6104518282610825565b8173ffffffffffffffffffffffffffffffffffffffff167f3f2c9d57c068687834f0de942a9babb9e5acab57d516d3480a3c16ee165a427382604051610497919061111b565b60405180910390a25050565b5f6104ad826108a4565b9050919050565b6104bc61079e565b6104c55f6108e9565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546104fe906112e6565b80601f016020809104026020016040519081016040528092919081815260200182805461052a906112e6565b80156105755780601f1061054c57610100808354040283529160200191610575565b820191905f5260205f20905b81548152906001019060200180831161055857829003601f168201915b5050505050905090565b61058761079e565b61059182826109ac565b5050565b5f6105a08383610a2b565b905092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b61063261079e565b61063c8282610825565b8060075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546106859190611343565b60075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505050565b6106d261079e565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610742575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107399190611262565b60405180910390fd5b61074b816108e9565b50565b5f80610758610a4d565b9050610765818585610a54565b600191505092915050565b5f8061077a610a4d565b9050610787858285610a66565b610792858585610af8565b60019150509392505050565b6107a6610a4d565b73ffffffffffffffffffffffffffffffffffffffff166107c46104c7565b73ffffffffffffffffffffffffffffffffffffffff1614610823576107e7610a4d565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161081a9190611262565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610895575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161088c9190611262565b60405180910390fd5b6108a05f8383610be8565b5050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a1c575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610a139190611262565b60405180910390fd5b610a27825f83610be8565b5050565b5f80610a35610a4d565b9050610a42818585610af8565b600191505092915050565b5f33905090565b610a618383836001610e01565b505050565b5f610a7184846105a8565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610af25781811015610ae3578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610ada93929190611376565b60405180910390fd5b610af184848484035f610e01565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b68575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610b5f9190611262565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bd8575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610bcf9190611262565b60405180910390fd5b610be3838383610be8565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c38578060025f828254610c2c9190611343565b92505081905550610d06565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610cc1578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610cb893929190611376565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d4d578060025f8282540392505081905550610d97565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610df4919061111b565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610e71575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610e689190611262565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ee1575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610ed89190611262565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610fca578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610fc1919061111b565b60405180910390a35b50505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611007578082015181840152602081019050610fec565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61102c82610fd0565b6110368185610fda565b9350611046818560208601610fea565b61104f81611012565b840191505092915050565b5f6020820190508181035f8301526110728184611022565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6110a78261107e565b9050919050565b6110b78161109d565b81146110c1575f80fd5b50565b5f813590506110d2816110ae565b92915050565b5f602082840312156110ed576110ec61107a565b5b5f6110fa848285016110c4565b91505092915050565b5f819050919050565b61111581611103565b82525050565b5f60208201905061112e5f83018461110c565b92915050565b61113d81611103565b8114611147575f80fd5b50565b5f8135905061115881611134565b92915050565b5f80604083850312156111745761117361107a565b5b5f611181858286016110c4565b92505060206111928582860161114a565b9150509250929050565b5f8115159050919050565b6111b08161119c565b82525050565b5f6020820190506111c95f8301846111a7565b92915050565b5f805f606084860312156111e6576111e561107a565b5b5f6111f3868287016110c4565b9350506020611204868287016110c4565b92505060406112158682870161114a565b9150509250925092565b5f60ff82169050919050565b6112348161121f565b82525050565b5f60208201905061124d5f83018461122b565b92915050565b61125c8161109d565b82525050565b5f6020820190506112755f830184611253565b92915050565b5f80604083850312156112915761129061107a565b5b5f61129e858286016110c4565b92505060206112af858286016110c4565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806112fd57607f821691505b6020821081036113105761130f6112b9565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61134d82611103565b915061135883611103565b92508282019050808211156113705761136f611316565b5b92915050565b5f6060820190506113895f830186611253565b611396602083018561110c565b6113a3604083018461110c565b94935050505056fea2646970667358221220e607775e84c94630f95198c2b351f27baba26c68422d2b3367cf3d08349b98ae64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x9DC29FAC GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0xE4E103DC EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x33F JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x289 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x378DC3DC EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x215 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x18B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x115 PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x105A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST PUSH2 0x3EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x111B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x115E JUMP JUMPDEST PUSH2 0x400 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH2 0x413 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x111B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x11CF JUMP JUMPDEST PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E1 PUSH2 0x431 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x123A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FF PUSH2 0x439 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x111B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x115E JUMP JUMPDEST PUSH2 0x43F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x258 SWAP2 SWAP1 PUSH2 0x111B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH2 0x4B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x273 PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x1262 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x291 PUSH2 0x4EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x105A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x115E JUMP JUMPDEST PUSH2 0x57F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x115E JUMP JUMPDEST PUSH2 0x595 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x308 SWAP2 SWAP1 PUSH2 0x127B JUMP JUMPDEST PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x111B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x338 SWAP2 SWAP1 PUSH2 0x115E JUMP JUMPDEST PUSH2 0x62A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x359 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST PUSH2 0x6CA JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x36A SWAP1 PUSH2 0x12E6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x396 SWAP1 PUSH2 0x12E6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x40B DUP4 DUP4 PUSH2 0x74E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x428 DUP5 DUP5 DUP5 PUSH2 0x770 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x447 PUSH2 0x79E JUMP JUMPDEST PUSH2 0x451 DUP3 DUP3 PUSH2 0x825 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3F2C9D57C068687834F0DE942A9BABB9E5ACAB57D516D3480A3C16EE165A4273 DUP3 PUSH1 0x40 MLOAD PUSH2 0x497 SWAP2 SWAP1 PUSH2 0x111B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4AD DUP3 PUSH2 0x8A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4BC PUSH2 0x79E JUMP JUMPDEST PUSH2 0x4C5 PUSH0 PUSH2 0x8E9 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4FE SWAP1 PUSH2 0x12E6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x52A SWAP1 PUSH2 0x12E6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x575 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x54C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x575 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x558 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x587 PUSH2 0x79E JUMP JUMPDEST PUSH2 0x591 DUP3 DUP3 PUSH2 0x9AC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5A0 DUP4 DUP4 PUSH2 0xA2B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x632 PUSH2 0x79E JUMP JUMPDEST PUSH2 0x63C DUP3 DUP3 PUSH2 0x825 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x685 SWAP2 SWAP1 PUSH2 0x1343 JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x6D2 PUSH2 0x79E JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x742 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x739 SWAP2 SWAP1 PUSH2 0x1262 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x74B DUP2 PUSH2 0x8E9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x758 PUSH2 0xA4D JUMP JUMPDEST SWAP1 POP PUSH2 0x765 DUP2 DUP6 DUP6 PUSH2 0xA54 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x77A PUSH2 0xA4D JUMP JUMPDEST SWAP1 POP PUSH2 0x787 DUP6 DUP3 DUP6 PUSH2 0xA66 JUMP JUMPDEST PUSH2 0x792 DUP6 DUP6 DUP6 PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x7A6 PUSH2 0xA4D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7C4 PUSH2 0x4C7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x823 JUMPI PUSH2 0x7E7 PUSH2 0xA4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x81A SWAP2 SWAP1 PUSH2 0x1262 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x895 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88C SWAP2 SWAP1 PUSH2 0x1262 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8A0 PUSH0 DUP4 DUP4 PUSH2 0xBE8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA1C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA13 SWAP2 SWAP1 PUSH2 0x1262 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA27 DUP3 PUSH0 DUP4 PUSH2 0xBE8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA35 PUSH2 0xA4D JUMP JUMPDEST SWAP1 POP PUSH2 0xA42 DUP2 DUP6 DUP6 PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA61 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE01 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA71 DUP5 DUP5 PUSH2 0x5A8 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xAF2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xAE3 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1376 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAF1 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xE01 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB68 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB5F SWAP2 SWAP1 PUSH2 0x1262 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBD8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCF SWAP2 SWAP1 PUSH2 0x1262 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBE3 DUP4 DUP4 DUP4 PUSH2 0xBE8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC38 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC2C SWAP2 SWAP1 PUSH2 0x1343 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xD06 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xCC1 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1376 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD4D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xD97 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xDF4 SWAP2 SWAP1 PUSH2 0x111B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE71 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE68 SWAP2 SWAP1 PUSH2 0x1262 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEE1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xED8 SWAP2 SWAP1 PUSH2 0x1262 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xFCA JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xFC1 SWAP2 SWAP1 PUSH2 0x111B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1007 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xFEC JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x102C DUP3 PUSH2 0xFD0 JUMP JUMPDEST PUSH2 0x1036 DUP2 DUP6 PUSH2 0xFDA JUMP JUMPDEST SWAP4 POP PUSH2 0x1046 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xFEA JUMP JUMPDEST PUSH2 0x104F DUP2 PUSH2 0x1012 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1072 DUP2 DUP5 PUSH2 0x1022 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10A7 DUP3 PUSH2 0x107E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10B7 DUP2 PUSH2 0x109D JUMP JUMPDEST DUP2 EQ PUSH2 0x10C1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10D2 DUP2 PUSH2 0x10AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10ED JUMPI PUSH2 0x10EC PUSH2 0x107A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10FA DUP5 DUP3 DUP6 ADD PUSH2 0x10C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1115 DUP2 PUSH2 0x1103 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x112E PUSH0 DUP4 ADD DUP5 PUSH2 0x110C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x113D DUP2 PUSH2 0x1103 JUMP JUMPDEST DUP2 EQ PUSH2 0x1147 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1158 DUP2 PUSH2 0x1134 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1174 JUMPI PUSH2 0x1173 PUSH2 0x107A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1181 DUP6 DUP3 DUP7 ADD PUSH2 0x10C4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1192 DUP6 DUP3 DUP7 ADD PUSH2 0x114A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11B0 DUP2 PUSH2 0x119C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11C9 PUSH0 DUP4 ADD DUP5 PUSH2 0x11A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11E6 JUMPI PUSH2 0x11E5 PUSH2 0x107A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11F3 DUP7 DUP3 DUP8 ADD PUSH2 0x10C4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1204 DUP7 DUP3 DUP8 ADD PUSH2 0x10C4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1215 DUP7 DUP3 DUP8 ADD PUSH2 0x114A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1234 DUP2 PUSH2 0x121F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x124D PUSH0 DUP4 ADD DUP5 PUSH2 0x122B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x125C DUP2 PUSH2 0x109D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1275 PUSH0 DUP4 ADD DUP5 PUSH2 0x1253 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1291 JUMPI PUSH2 0x1290 PUSH2 0x107A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x129E DUP6 DUP3 DUP7 ADD PUSH2 0x10C4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12AF DUP6 DUP3 DUP7 ADD PUSH2 0x10C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x12FD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1310 JUMPI PUSH2 0x130F PUSH2 0x12B9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x134D DUP3 PUSH2 0x1103 JUMP JUMPDEST SWAP2 POP PUSH2 0x1358 DUP4 PUSH2 0x1103 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1370 JUMPI PUSH2 0x136F PUSH2 0x1316 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1389 PUSH0 DUP4 ADD DUP7 PUSH2 0x1253 JUMP JUMPDEST PUSH2 0x1396 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x110C JUMP JUMPDEST PUSH2 0x13A3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x110C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 SMOD PUSH24 0x5E84C94630F95198C2B351F27BABA26C68422D2B3367CF3D ADDMOD CALLVALUE SWAP12 SWAP9 0xAE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "168:3959:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;505:42:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3428:188;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3925:200:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;368:68:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1291:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2969:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1698:153:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2582:183;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2072:235:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1779:89:2;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;505:42:6:-;;;;;;;;;;;;;;;;;:::o;3428:188::-;3503:4;3526:30;3540:7;3549:6;3526:13;:30::i;:::-;3519:37;;3428:188;;;;:::o;2849:97:2:-;2901:7;2927:12;;2920:19;;2849:97;:::o;3925:200:6:-;4014:4;4037:36;4056:4;4062:2;4066:6;4037:18;:36::i;:::-;4030:43;;3925:200;;;;;:::o;2707:82:2:-;2756:5;2780:2;2773:9;;2707:82;:::o;368:68:6:-;;;;:::o;1291:219::-;1531:13:0;:11;:13::i;:::-;1362:17:6::1;1368:2;1372:6;1362:5;:17::i;:::-;1457:2;1444:24;;;1461:6;1444:24;;;;;;:::i;:::-;;;;;;;;1291:219:::0;;:::o;2969:178::-;3035:7;3061:24;3077:7;3061:15;:24::i;:::-;3054:31;;2969:178;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1981:93:2:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;1698:153:6:-;1531:13:0;:11;:13::i;:::-;1771:19:6::1;1777:4;1783:6;1771:5;:19::i;:::-;1698:153:::0;;:::o;2582:183::-;2653:4;2676:26;2691:2;2695:6;2676:14;:26::i;:::-;2669:33;;2582:183;;;;:::o;3551:140:2:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;2072:235:6:-;1531:13:0;:11;:13::i;:::-;2151:19:6::1;2157:4;2163:6;2151:5;:19::i;:::-;2250:6;2234:7;:13;2242:4;2234:13;;;;;;;;;;;;;;;;:22;;;;:::i;:::-;2218:7;:13;2226:4;2218:13;;;;;;;;;;;;;;;:38;;;;2072:235:::0;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;3998:186:2:-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;7458:208:2:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;3004:116::-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7984:206:2:-;8073:1;8054:21;;:7;:21;;;8050:89;;8125:1;8098:30;;;;;;;;;;;:::i;:::-;;;;;;;;8050:89;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;:::-;7984:206;;:::o;3315:178::-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8726:128:2:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:477::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10600:17;10580:16;:37;10576:310;;10656:5;10637:16;:24;10633:130;;;10715:7;10724:16;10742:5;10688:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10633:130;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10576:310;10504:388;10415:477;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:329::-;2242:6;2291:2;2279:9;2270:7;2266:23;2262:32;2259:119;;;2297:79;;:::i;:::-;2259:119;2417:1;2442:53;2487:7;2478:6;2467:9;2463:22;2442:53;:::i;:::-;2432:63;;2388:117;2183:329;;;;:::o;2518:77::-;2555:7;2584:5;2573:16;;2518:77;;;:::o;2601:118::-;2688:24;2706:5;2688:24;:::i;:::-;2683:3;2676:37;2601:118;;:::o;2725:222::-;2818:4;2856:2;2845:9;2841:18;2833:26;;2869:71;2937:1;2926:9;2922:17;2913:6;2869:71;:::i;:::-;2725:222;;;;:::o;2953:122::-;3026:24;3044:5;3026:24;:::i;:::-;3019:5;3016:35;3006:63;;3065:1;3062;3055:12;3006:63;2953:122;:::o;3081:139::-;3127:5;3165:6;3152:20;3143:29;;3181:33;3208:5;3181:33;:::i;:::-;3081:139;;;;:::o;3226:474::-;3294:6;3302;3351:2;3339:9;3330:7;3326:23;3322:32;3319:119;;;3357:79;;:::i;:::-;3319:119;3477:1;3502:53;3547:7;3538:6;3527:9;3523:22;3502:53;:::i;:::-;3492:63;;3448:117;3604:2;3630:53;3675:7;3666:6;3655:9;3651:22;3630:53;:::i;:::-;3620:63;;3575:118;3226:474;;;;;:::o;3706:90::-;3740:7;3783:5;3776:13;3769:21;3758:32;;3706:90;;;:::o;3802:109::-;3883:21;3898:5;3883:21;:::i;:::-;3878:3;3871:34;3802:109;;:::o;3917:210::-;4004:4;4042:2;4031:9;4027:18;4019:26;;4055:65;4117:1;4106:9;4102:17;4093:6;4055:65;:::i;:::-;3917:210;;;;:::o;4133:619::-;4210:6;4218;4226;4275:2;4263:9;4254:7;4250:23;4246:32;4243:119;;;4281:79;;:::i;:::-;4243:119;4401:1;4426:53;4471:7;4462:6;4451:9;4447:22;4426:53;:::i;:::-;4416:63;;4372:117;4528:2;4554:53;4599:7;4590:6;4579:9;4575:22;4554:53;:::i;:::-;4544:63;;4499:118;4656:2;4682:53;4727:7;4718:6;4707:9;4703:22;4682:53;:::i;:::-;4672:63;;4627:118;4133:619;;;;;:::o;4758:86::-;4793:7;4833:4;4826:5;4822:16;4811:27;;4758:86;;;:::o;4850:112::-;4933:22;4949:5;4933:22;:::i;:::-;4928:3;4921:35;4850:112;;:::o;4968:214::-;5057:4;5095:2;5084:9;5080:18;5072:26;;5108:67;5172:1;5161:9;5157:17;5148:6;5108:67;:::i;:::-;4968:214;;;;:::o;5188:118::-;5275:24;5293:5;5275:24;:::i;:::-;5270:3;5263:37;5188:118;;:::o;5312:222::-;5405:4;5443:2;5432:9;5428:18;5420:26;;5456:71;5524:1;5513:9;5509:17;5500:6;5456:71;:::i;:::-;5312:222;;;;:::o;5540:474::-;5608:6;5616;5665:2;5653:9;5644:7;5640:23;5636:32;5633:119;;;5671:79;;:::i;:::-;5633:119;5791:1;5816:53;5861:7;5852:6;5841:9;5837:22;5816:53;:::i;:::-;5806:63;;5762:117;5918:2;5944:53;5989:7;5980:6;5969:9;5965:22;5944:53;:::i;:::-;5934:63;;5889:118;5540:474;;;;;:::o;6020:180::-;6068:77;6065:1;6058:88;6165:4;6162:1;6155:15;6189:4;6186:1;6179:15;6206:320;6250:6;6287:1;6281:4;6277:12;6267:22;;6334:1;6328:4;6324:12;6355:18;6345:81;;6411:4;6403:6;6399:17;6389:27;;6345:81;6473:2;6465:6;6462:14;6442:18;6439:38;6436:84;;6492:18;;:::i;:::-;6436:84;6257:269;6206:320;;;:::o;6532:180::-;6580:77;6577:1;6570:88;6677:4;6674:1;6667:15;6701:4;6698:1;6691:15;6718:191;6758:3;6777:20;6795:1;6777:20;:::i;:::-;6772:25;;6811:20;6829:1;6811:20;:::i;:::-;6806:25;;6854:1;6851;6847:9;6840:16;;6875:3;6872:1;6869:10;6866:36;;;6882:18;;:::i;:::-;6866:36;6718:191;;;;:::o;6915:442::-;7064:4;7102:2;7091:9;7087:18;7079:26;;7115:71;7183:1;7172:9;7168:17;7159:6;7115:71;:::i;:::-;7196:72;7264:2;7253:9;7249:18;7240:6;7196:72;:::i;:::-;7278;7346:2;7335:9;7331:18;7322:6;7278:72;:::i;:::-;6915:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1017800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2894",
								"burn(address,uint256)": "infinite",
								"decimals()": "383",
								"initialSupply()": "2492",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2582",
								"renounceOwnership()": "infinite",
								"rewardUser(address,uint256)": "infinite",
								"rewards(address)": "2848",
								"symbol()": "infinite",
								"totalSupply()": "2522",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 168,
									"end": 4127,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 168,
									"end": 4127,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 168,
									"end": 4127,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 424,
									"end": 434,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 432,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 424,
									"end": 432,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 424,
									"end": 432,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 424,
									"end": 434,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 424,
									"end": 434,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 424,
									"end": 434,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 424,
									"end": 434,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 434,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 416,
									"end": 435,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 416,
									"end": 435,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 410,
									"end": 412,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 410,
									"end": 435,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 410,
									"end": 435,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 410,
									"end": 435,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 410,
									"end": 435,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 410,
									"end": 435,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 410,
									"end": 435,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 410,
									"end": 435,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 399,
									"end": 406,
									"name": "PUSH",
									"source": 6,
									"value": "F4240"
								},
								{
									"begin": 399,
									"end": 436,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 399,
									"end": 436,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 399,
									"end": 436,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 399,
									"end": 436,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 399,
									"end": 436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 399,
									"end": 436,
									"name": "tag",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 399,
									"end": 436,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 368,
									"end": 436,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 368,
									"end": 436,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 818,
									"end": 1105,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 818,
									"end": 1105,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 818,
									"end": 1105,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 818,
									"end": 1105,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 818,
									"end": 1105,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 818,
									"end": 1105,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 818,
									"end": 1105,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 818,
									"end": 1105,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 818,
									"end": 1105,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 818,
									"end": 1105,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 818,
									"end": 1105,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 818,
									"end": 1105,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 818,
									"end": 1105,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 818,
									"end": 1105,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 818,
									"end": 1105,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 818,
									"end": 1105,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 818,
									"end": 1105,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 818,
									"end": 1105,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 818,
									"end": 1105,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 818,
									"end": 1105,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 818,
									"end": 1105,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 818,
									"end": 1105,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 818,
									"end": 1105,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 818,
									"end": 1105,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 818,
									"end": 1105,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 818,
									"end": 1105,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 818,
									"end": 1105,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 818,
									"end": 1105,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 818,
									"end": 1105,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 818,
									"end": 1105,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 818,
									"end": 1105,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 818,
									"end": 1105,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 818,
									"end": 1105,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 818,
									"end": 1105,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 818,
									"end": 1105,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 895,
									"end": 907,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "5375737461696E6162696C697479546F6B656E00000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "5355530000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 972,
									"end": 1006,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 978,
									"end": 990,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 992,
									"end": 1005,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 992,
									"end": 1005,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 972,
									"end": 977,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 972,
									"end": 977,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 972,
									"end": 977,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 972,
									"end": 1006,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 972,
									"end": 1006,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 972,
									"end": 1006,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 972,
									"end": 1006,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 972,
									"end": 1006,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1067,
									"end": 1098,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 1085,
									"end": 1097,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1067,
									"end": 1084,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 1067,
									"end": 1084,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1067,
									"end": 1084,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1067,
									"end": 1098,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1067,
									"end": 1098,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1067,
									"end": 1098,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1067,
									"end": 1098,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 1067,
									"end": 1098,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 818,
									"end": 1105,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 168,
									"end": 4127,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 168,
									"end": 4127,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2756,
									"end": 2761,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2780,
									"end": 2782,
									"name": "PUSH",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2773,
									"end": 2782,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2773,
									"end": 2782,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2707,
									"end": 2789,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7547,
									"end": 7548,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7572,
									"end": 7604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2543,
									"end": 2758,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 2543,
									"end": 2758,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1531,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2647,
									"end": 2648,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2627,
									"end": 2649,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2627,
									"end": 2649,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2627,
									"end": 2635,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2627,
									"end": 2649,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2627,
									"end": 2649,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2627,
									"end": 2649,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2623,
									"end": 2714,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2623,
									"end": 2714,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2700,
									"end": 2701,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2672,
									"end": 2703,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2623,
									"end": 2714,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2623,
									"end": 2714,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2723,
									"end": 2751,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 2742,
									"end": 2750,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2723,
									"end": 2741,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 2723,
									"end": 2741,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2723,
									"end": 2741,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 2723,
									"end": 2751,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2723,
									"end": 2751,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 2723,
									"end": 2751,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2723,
									"end": 2751,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 2723,
									"end": 2751,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2543,
									"end": 2758,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2543,
									"end": 2758,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6113,
									"end": 6114,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6101,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6316,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6317,
									"end": 6321,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6354,
									"end": 6359,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6351,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6411,
									"end": 6415,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6417,
									"end": 6428,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6430,
									"end": 6435,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 6386,
									"end": 6436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "tag",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6608,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6600,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6581,
									"end": 6585,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 6633,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6661,
									"end": 6662,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6649,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6826,
									"end": 6831,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7038,
									"end": 7043,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7031,
									"end": 7033,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 7083,
									"end": 7108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1796,
									"end": 1958,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 1796,
									"end": 1958,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "56"
								},
								{
									"begin": 1866,
									"end": 1876,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "57"
								},
								{
									"begin": 1866,
									"end": 1876,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1866,
									"end": 1876,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1866,
									"end": 1878,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "tag",
									"source": 0,
									"value": "56"
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "58"
								},
								{
									"begin": 1855,
									"end": 1860,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "59"
								},
								{
									"begin": 1855,
									"end": 1860,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1855,
									"end": 1860,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1862,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "tag",
									"source": 0,
									"value": "58"
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "61"
								},
								{
									"begin": 1928,
									"end": 1938,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "57"
								},
								{
									"begin": 1928,
									"end": 1938,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1928,
									"end": 1938,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1928,
									"end": 1940,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "tag",
									"source": 0,
									"value": "61"
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH",
									"source": 0,
									"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "62"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1901,
									"end": 1941,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "tag",
									"source": 0,
									"value": "62"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "tag",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1796,
									"end": 1958,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1638,
									"end": 1723,
									"name": "tag",
									"source": 0,
									"value": "59"
								},
								{
									"begin": 1638,
									"end": 1723,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1684,
									"end": 1691,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1703,
									"end": 1716,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1703,
									"end": 1716,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1638,
									"end": 1723,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1638,
									"end": 1723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 187,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 7,
									"end": 187,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 55,
									"end": 132,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 52,
									"end": 53,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 45,
									"end": 133,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 152,
									"end": 156,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 149,
									"end": 150,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 142,
									"end": 157,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 176,
									"end": 180,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 173,
									"end": 174,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 181,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 193,
									"end": 295,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 193,
									"end": 295,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 235,
									"end": 243,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 282,
									"end": 287,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 279,
									"end": 280,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 275,
									"end": 288,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 254,
									"end": 288,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 254,
									"end": 288,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 193,
									"end": 295,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 193,
									"end": 295,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 193,
									"end": 295,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 193,
									"end": 295,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 362,
									"end": 367,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 373,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 393,
									"end": 399,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 384,
									"end": 399,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 384,
									"end": 399,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 417,
									"end": 422,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 408,
									"end": 422,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 408,
									"end": 422,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "tag",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 452,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 442,
									"end": 450,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 439,
									"end": 454,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 547,
									"end": 551,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 542,
									"end": 545,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 538,
									"end": 552,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 532,
									"end": 536,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 529,
									"end": 553,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 526,
									"end": 576,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 526,
									"end": 576,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 526,
									"end": 576,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 556,
									"end": 574,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 556,
									"end": 574,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 556,
									"end": 574,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 556,
									"end": 574,
									"name": "tag",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 556,
									"end": 574,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 526,
									"end": 576,
									"name": "tag",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 526,
									"end": 576,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 606,
									"end": 607,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 596,
									"end": 604,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 592,
									"end": 608,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 589,
									"end": 1040,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 589,
									"end": 1040,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 589,
									"end": 1040,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1021,
									"end": 1025,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1014,
									"end": 1019,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1010,
									"end": 1026,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1001,
									"end": 1026,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1001,
									"end": 1026,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 589,
									"end": 1040,
									"name": "tag",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 589,
									"end": 1040,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1071,
									"end": 1075,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1065,
									"end": 1069,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1061,
									"end": 1076,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1053,
									"end": 1076,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1053,
									"end": 1076,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1101,
									"end": 1133,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 1124,
									"end": 1132,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1101,
									"end": 1133,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 1101,
									"end": 1133,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1101,
									"end": 1133,
									"name": "tag",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 1101,
									"end": 1133,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1089,
									"end": 1133,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 1089,
									"end": 1133,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "tag",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 301,
									"end": 1149,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1209,
									"end": 1214,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1400,
									"end": 1408,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1390,
									"end": 1430,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 1390,
									"end": 1430,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1421,
									"end": 1422,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1412,
									"end": 1422,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1422,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1423,
									"end": 1428,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 1423,
									"end": 1428,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1390,
									"end": 1430,
									"name": "tag",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 1390,
									"end": 1430,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1453,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1439,
									"end": 1475,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 1439,
									"end": 1475,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1466,
									"end": 1467,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1457,
									"end": 1467,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1457,
									"end": 1467,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1468,
									"end": 1473,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 1468,
									"end": 1473,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1439,
									"end": 1475,
									"name": "tag",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 1439,
									"end": 1475,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1535,
									"end": 1539,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1583,
									"end": 1584,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1619,
									"end": 1620,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1805,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 1528,
									"end": 1805,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "tag",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1596,
									"end": 1597,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1587,
									"end": 1597,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1587,
									"end": 1597,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1598,
									"end": 1603,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1598,
									"end": 1603,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 1598,
									"end": 1603,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "tag",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1659,
									"end": 1662,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1649,
									"end": 1657,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1646,
									"end": 1663,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1643,
									"end": 1686,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1643,
									"end": 1686,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 1643,
									"end": 1686,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1666,
									"end": 1684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 1666,
									"end": 1684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 1666,
									"end": 1684,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1666,
									"end": 1684,
									"name": "tag",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 1666,
									"end": 1684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1643,
									"end": 1686,
									"name": "tag",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 1643,
									"end": 1686,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1715,
									"end": 1723,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1708,
									"end": 1724,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1699,
									"end": 1724,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1699,
									"end": 1724,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1750,
									"end": 1753,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1743,
									"end": 1748,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1740,
									"end": 1754,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1737,
									"end": 1777,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1737,
									"end": 1777,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 1737,
									"end": 1777,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1757,
									"end": 1775,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 1757,
									"end": 1775,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 1757,
									"end": 1775,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1757,
									"end": 1775,
									"name": "tag",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 1757,
									"end": 1775,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1737,
									"end": 1777,
									"name": "tag",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 1737,
									"end": 1777,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1790,
									"end": 1795,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1790,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 1790,
									"end": 1795,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1805,
									"name": "tag",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 1528,
									"end": 1805,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1805,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1914,
									"end": 1916,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1904,
									"end": 1912,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1901,
									"end": 1917,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1895,
									"end": 1898,
									"name": "PUSH",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 1889,
									"end": 1893,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1886,
									"end": 1899,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1882,
									"end": 1918,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1864,
									"end": 1866,
									"name": "PUSH",
									"source": 7,
									"value": "4E"
								},
								{
									"begin": 1854,
									"end": 1862,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1851,
									"end": 1867,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1846,
									"end": 1848,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 1840,
									"end": 1844,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1837,
									"end": 1849,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1833,
									"end": 1868,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1817,
									"end": 1928,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1814,
									"end": 2060,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1814,
									"end": 2060,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 1814,
									"end": 2060,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1970,
									"end": 1978,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1964,
									"end": 1968,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1960,
									"end": 1979,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1951,
									"end": 1979,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1951,
									"end": 1979,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2005,
									"end": 2008,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1998,
									"end": 2003,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1995,
									"end": 2009,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1992,
									"end": 2032,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1992,
									"end": 2032,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 1992,
									"end": 2032,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2012,
									"end": 2030,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 2012,
									"end": 2030,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 2012,
									"end": 2030,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2012,
									"end": 2030,
									"name": "tag",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 2012,
									"end": 2030,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1992,
									"end": 2032,
									"name": "tag",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 1992,
									"end": 2032,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2045,
									"end": 2050,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 2045,
									"end": 2050,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1814,
									"end": 2060,
									"name": "tag",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 1814,
									"end": 2060,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2085,
									"end": 2127,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 2123,
									"end": 2126,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2113,
									"end": 2121,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2107,
									"end": 2111,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2104,
									"end": 2105,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2085,
									"end": 2127,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 2085,
									"end": 2127,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2085,
									"end": 2127,
									"name": "tag",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 2085,
									"end": 2127,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2070,
									"end": 2127,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2070,
									"end": 2127,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2070,
									"end": 2127,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2070,
									"end": 2127,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2159,
									"end": 2163,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2154,
									"end": 2157,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2150,
									"end": 2164,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 2143,
									"end": 2148,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2140,
									"end": 2165,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2137,
									"end": 2188,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2137,
									"end": 2188,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 2137,
									"end": 2188,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2168,
									"end": 2186,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 2168,
									"end": 2186,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 2168,
									"end": 2186,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2168,
									"end": 2186,
									"name": "tag",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 2168,
									"end": 2186,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2137,
									"end": 2188,
									"name": "tag",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 2137,
									"end": 2188,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2217,
									"end": 2221,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2210,
									"end": 2215,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2206,
									"end": 2222,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2197,
									"end": 2222,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2197,
									"end": 2222,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "tag",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1155,
									"end": 2228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2234,
									"end": 2311,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 2234,
									"end": 2311,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2271,
									"end": 2278,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2300,
									"end": 2305,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2289,
									"end": 2305,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2289,
									"end": 2305,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2234,
									"end": 2311,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2234,
									"end": 2311,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2234,
									"end": 2311,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2234,
									"end": 2311,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2317,
									"end": 2602,
									"name": "tag",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 2317,
									"end": 2602,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2377,
									"end": 2382,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2401,
									"end": 2424,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 2419,
									"end": 2423,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2401,
									"end": 2424,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 2401,
									"end": 2424,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2401,
									"end": 2424,
									"name": "tag",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 2401,
									"end": 2424,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2393,
									"end": 2424,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2393,
									"end": 2424,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2445,
									"end": 2472,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 2463,
									"end": 2471,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2445,
									"end": 2472,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 2445,
									"end": 2472,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2445,
									"end": 2472,
									"name": "tag",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 2445,
									"end": 2472,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2433,
									"end": 2472,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2433,
									"end": 2472,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2491,
									"end": 2595,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 2528,
									"end": 2594,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2518,
									"end": 2526,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2512,
									"end": 2516,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2491,
									"end": 2595,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 2491,
									"end": 2595,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2491,
									"end": 2595,
									"name": "tag",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 2491,
									"end": 2595,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2482,
									"end": 2595,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2482,
									"end": 2595,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2317,
									"end": 2602,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2317,
									"end": 2602,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2317,
									"end": 2602,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2317,
									"end": 2602,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2317,
									"end": 2602,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2608,
									"end": 3018,
									"name": "tag",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 2608,
									"end": 3018,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2648,
									"end": 2655,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2671,
									"end": 2691,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 2689,
									"end": 2690,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2671,
									"end": 2691,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 2671,
									"end": 2691,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2671,
									"end": 2691,
									"name": "tag",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 2671,
									"end": 2691,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2666,
									"end": 2691,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2666,
									"end": 2691,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2705,
									"end": 2725,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 2723,
									"end": 2724,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2705,
									"end": 2725,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 2705,
									"end": 2725,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2705,
									"end": 2725,
									"name": "tag",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 2705,
									"end": 2725,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2700,
									"end": 2725,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2700,
									"end": 2725,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2760,
									"end": 2761,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2757,
									"end": 2758,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2753,
									"end": 2762,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2782,
									"end": 2812,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 2800,
									"end": 2811,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2782,
									"end": 2812,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 2782,
									"end": 2812,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2782,
									"end": 2812,
									"name": "tag",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 2782,
									"end": 2812,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2771,
									"end": 2812,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2771,
									"end": 2812,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2961,
									"end": 2962,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2952,
									"end": 2959,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2948,
									"end": 2963,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 2945,
									"end": 2946,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2942,
									"end": 2964,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 2922,
									"end": 2923,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2915,
									"end": 2924,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2895,
									"end": 2978,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2872,
									"end": 3011,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 2872,
									"end": 3011,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2991,
									"end": 3009,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 2991,
									"end": 3009,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 2991,
									"end": 3009,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2991,
									"end": 3009,
									"name": "tag",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 2991,
									"end": 3009,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2872,
									"end": 3011,
									"name": "tag",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 2872,
									"end": 3011,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2656,
									"end": 3018,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2608,
									"end": 3018,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2608,
									"end": 3018,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2608,
									"end": 3018,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2608,
									"end": 3018,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2608,
									"end": 3018,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3105,
									"end": 3222,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 3105,
									"end": 3222,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3214,
									"end": 3215,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3211,
									"end": 3212,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3204,
									"end": 3216,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3351,
									"end": 3477,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 3351,
									"end": 3477,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3388,
									"end": 3395,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3428,
									"end": 3470,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3421,
									"end": 3426,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3417,
									"end": 3471,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3406,
									"end": 3471,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3406,
									"end": 3471,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3351,
									"end": 3477,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3351,
									"end": 3477,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3351,
									"end": 3477,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3351,
									"end": 3477,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3483,
									"end": 3579,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 3483,
									"end": 3579,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3520,
									"end": 3527,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3549,
									"end": 3573,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 3567,
									"end": 3572,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3549,
									"end": 3573,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 3549,
									"end": 3573,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3549,
									"end": 3573,
									"name": "tag",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 3549,
									"end": 3573,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3538,
									"end": 3573,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3538,
									"end": 3573,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3483,
									"end": 3579,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3483,
									"end": 3579,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3483,
									"end": 3579,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3483,
									"end": 3579,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3585,
									"end": 3707,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 3585,
									"end": 3707,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3658,
									"end": 3682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 3676,
									"end": 3681,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3658,
									"end": 3682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 3658,
									"end": 3682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3658,
									"end": 3682,
									"name": "tag",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 3658,
									"end": 3682,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3651,
									"end": 3656,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3648,
									"end": 3683,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 3638,
									"end": 3701,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 3638,
									"end": 3701,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3697,
									"end": 3698,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3694,
									"end": 3695,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3687,
									"end": 3699,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3638,
									"end": 3701,
									"name": "tag",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 3638,
									"end": 3701,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3585,
									"end": 3707,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3585,
									"end": 3707,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3713,
									"end": 3856,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 3713,
									"end": 3856,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3770,
									"end": 3775,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3801,
									"end": 3807,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3795,
									"end": 3808,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3786,
									"end": 3808,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3786,
									"end": 3808,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3817,
									"end": 3850,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 3844,
									"end": 3849,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3817,
									"end": 3850,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 3817,
									"end": 3850,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3817,
									"end": 3850,
									"name": "tag",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 3817,
									"end": 3850,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3713,
									"end": 3856,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3713,
									"end": 3856,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3713,
									"end": 3856,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3713,
									"end": 3856,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3713,
									"end": 3856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3862,
									"end": 4213,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 3862,
									"end": 4213,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3932,
									"end": 3938,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3981,
									"end": 3983,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3969,
									"end": 3978,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3960,
									"end": 3967,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3956,
									"end": 3979,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3952,
									"end": 3984,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 3949,
									"end": 4068,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3949,
									"end": 4068,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 3949,
									"end": 4068,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3987,
									"end": 4066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 3987,
									"end": 4066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 3987,
									"end": 4066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3987,
									"end": 4066,
									"name": "tag",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 3987,
									"end": 4066,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3949,
									"end": 4068,
									"name": "tag",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 3949,
									"end": 4068,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4107,
									"end": 4108,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4132,
									"end": 4196,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 4188,
									"end": 4195,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4179,
									"end": 4185,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4168,
									"end": 4177,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4164,
									"end": 4186,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4132,
									"end": 4196,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 4132,
									"end": 4196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4132,
									"end": 4196,
									"name": "tag",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 4132,
									"end": 4196,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4122,
									"end": 4196,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4122,
									"end": 4196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4078,
									"end": 4206,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3862,
									"end": 4213,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3862,
									"end": 4213,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3862,
									"end": 4213,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3862,
									"end": 4213,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3862,
									"end": 4213,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4219,
									"end": 4318,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 4219,
									"end": 4318,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4271,
									"end": 4277,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4305,
									"end": 4310,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4299,
									"end": 4311,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4289,
									"end": 4311,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4289,
									"end": 4311,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4219,
									"end": 4318,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4219,
									"end": 4318,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4219,
									"end": 4318,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4219,
									"end": 4318,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4324,
									"end": 4504,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 4324,
									"end": 4504,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4449,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4369,
									"end": 4370,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4362,
									"end": 4450,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4469,
									"end": 4473,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 4466,
									"end": 4467,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 4459,
									"end": 4474,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4493,
									"end": 4497,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4490,
									"end": 4491,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4483,
									"end": 4498,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 4510,
									"end": 4690,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 4510,
									"end": 4690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4558,
									"end": 4635,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4555,
									"end": 4556,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4548,
									"end": 4636,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4655,
									"end": 4659,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 4652,
									"end": 4653,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 4645,
									"end": 4660,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4679,
									"end": 4683,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4676,
									"end": 4677,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4669,
									"end": 4684,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 4696,
									"end": 5016,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 4696,
									"end": 5016,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4740,
									"end": 4746,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4777,
									"end": 4778,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 4771,
									"end": 4775,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4767,
									"end": 4779,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 4757,
									"end": 4779,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4757,
									"end": 4779,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4824,
									"end": 4825,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4818,
									"end": 4822,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4814,
									"end": 4826,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4845,
									"end": 4863,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4835,
									"end": 4916,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 4835,
									"end": 4916,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4901,
									"end": 4905,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 4893,
									"end": 4899,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4889,
									"end": 4906,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4879,
									"end": 4906,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4879,
									"end": 4906,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4835,
									"end": 4916,
									"name": "tag",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 4835,
									"end": 4916,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4963,
									"end": 4965,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4955,
									"end": 4961,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4952,
									"end": 4966,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4932,
									"end": 4950,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4929,
									"end": 4967,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 4926,
									"end": 5010,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 4926,
									"end": 5010,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4982,
									"end": 5000,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 4982,
									"end": 5000,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 4982,
									"end": 5000,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4982,
									"end": 5000,
									"name": "tag",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 4982,
									"end": 5000,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4926,
									"end": 5010,
									"name": "tag",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 4926,
									"end": 5010,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4747,
									"end": 5016,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4696,
									"end": 5016,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4696,
									"end": 5016,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4696,
									"end": 5016,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4696,
									"end": 5016,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5022,
									"end": 5163,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 5022,
									"end": 5163,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5071,
									"end": 5075,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5094,
									"end": 5097,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5086,
									"end": 5097,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5086,
									"end": 5097,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5117,
									"end": 5120,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5114,
									"end": 5115,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5107,
									"end": 5121,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5151,
									"end": 5155,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5148,
									"end": 5149,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5138,
									"end": 5156,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 5130,
									"end": 5156,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5130,
									"end": 5156,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5022,
									"end": 5163,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5022,
									"end": 5163,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5022,
									"end": 5163,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5022,
									"end": 5163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5169,
									"end": 5262,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 5169,
									"end": 5262,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5206,
									"end": 5212,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5253,
									"end": 5255,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5248,
									"end": 5250,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5241,
									"end": 5246,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5237,
									"end": 5251,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5233,
									"end": 5256,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 5223,
									"end": 5256,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5223,
									"end": 5256,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5169,
									"end": 5262,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5169,
									"end": 5262,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5169,
									"end": 5262,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5169,
									"end": 5262,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5268,
									"end": 5375,
									"name": "tag",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 5268,
									"end": 5375,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5312,
									"end": 5320,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5362,
									"end": 5367,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5356,
									"end": 5360,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5352,
									"end": 5368,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 5331,
									"end": 5368,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5331,
									"end": 5368,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5268,
									"end": 5375,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5268,
									"end": 5375,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5268,
									"end": 5375,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5268,
									"end": 5375,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5268,
									"end": 5375,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5381,
									"end": 5774,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 5381,
									"end": 5774,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5450,
									"end": 5456,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5500,
									"end": 5501,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 5488,
									"end": 5498,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5484,
									"end": 5502,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 5523,
									"end": 5620,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "162"
								},
								{
									"begin": 5553,
									"end": 5619,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5542,
									"end": 5551,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5523,
									"end": 5620,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 5523,
									"end": 5620,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5523,
									"end": 5620,
									"name": "tag",
									"source": 7,
									"value": "162"
								},
								{
									"begin": 5523,
									"end": 5620,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5641,
									"end": 5680,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 5671,
									"end": 5679,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5660,
									"end": 5669,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5641,
									"end": 5680,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 5641,
									"end": 5680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5641,
									"end": 5680,
									"name": "tag",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 5641,
									"end": 5680,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5629,
									"end": 5680,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 5629,
									"end": 5680,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5713,
									"end": 5717,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5709,
									"end": 5718,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5702,
									"end": 5707,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5698,
									"end": 5719,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5689,
									"end": 5719,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 5689,
									"end": 5719,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5762,
									"end": 5766,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5752,
									"end": 5760,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5748,
									"end": 5767,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5741,
									"end": 5746,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5738,
									"end": 5768,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 5728,
									"end": 5768,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5728,
									"end": 5768,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5457,
									"end": 5774,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5457,
									"end": 5774,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5381,
									"end": 5774,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 5381,
									"end": 5774,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5381,
									"end": 5774,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5381,
									"end": 5774,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5381,
									"end": 5774,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5381,
									"end": 5774,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5780,
									"end": 5840,
									"name": "tag",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 5780,
									"end": 5840,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5808,
									"end": 5811,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5829,
									"end": 5834,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5822,
									"end": 5834,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5822,
									"end": 5834,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5780,
									"end": 5840,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5780,
									"end": 5840,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5780,
									"end": 5840,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5780,
									"end": 5840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5846,
									"end": 5988,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 5846,
									"end": 5988,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5896,
									"end": 5905,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5929,
									"end": 5982,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "166"
								},
								{
									"begin": 5947,
									"end": 5981,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "167"
								},
								{
									"begin": 5956,
									"end": 5980,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 5974,
									"end": 5979,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5956,
									"end": 5980,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 5956,
									"end": 5980,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5956,
									"end": 5980,
									"name": "tag",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 5956,
									"end": 5980,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5947,
									"end": 5981,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 5947,
									"end": 5981,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5947,
									"end": 5981,
									"name": "tag",
									"source": 7,
									"value": "167"
								},
								{
									"begin": 5947,
									"end": 5981,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5929,
									"end": 5982,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 5929,
									"end": 5982,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5929,
									"end": 5982,
									"name": "tag",
									"source": 7,
									"value": "166"
								},
								{
									"begin": 5929,
									"end": 5982,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5916,
									"end": 5982,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5916,
									"end": 5982,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5846,
									"end": 5988,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5846,
									"end": 5988,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5846,
									"end": 5988,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5846,
									"end": 5988,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5994,
									"end": 6069,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 5994,
									"end": 6069,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6037,
									"end": 6040,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6058,
									"end": 6063,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6051,
									"end": 6063,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6051,
									"end": 6063,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5994,
									"end": 6069,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5994,
									"end": 6069,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5994,
									"end": 6069,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5994,
									"end": 6069,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6075,
									"end": 6344,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 6075,
									"end": 6344,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6185,
									"end": 6224,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 6216,
									"end": 6223,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6185,
									"end": 6224,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 6185,
									"end": 6224,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6185,
									"end": 6224,
									"name": "tag",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 6185,
									"end": 6224,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6246,
									"end": 6337,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "172"
								},
								{
									"begin": 6295,
									"end": 6336,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 6319,
									"end": 6335,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6295,
									"end": 6336,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 6295,
									"end": 6336,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6295,
									"end": 6336,
									"name": "tag",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 6295,
									"end": 6336,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6287,
									"end": 6293,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6280,
									"end": 6284,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6274,
									"end": 6285,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 6246,
									"end": 6337,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 6246,
									"end": 6337,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6246,
									"end": 6337,
									"name": "tag",
									"source": 7,
									"value": "172"
								},
								{
									"begin": 6246,
									"end": 6337,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6240,
									"end": 6244,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6233,
									"end": 6338,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6151,
									"end": 6344,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6075,
									"end": 6344,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6075,
									"end": 6344,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6075,
									"end": 6344,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6075,
									"end": 6344,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6350,
									"end": 6423,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 6350,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6395,
									"end": 6398,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6350,
									"end": 6423,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6350,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6429,
									"end": 6618,
									"name": "tag",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 6429,
									"end": 6618,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6506,
									"end": 6538,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 6506,
									"end": 6538,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 6506,
									"end": 6538,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6506,
									"end": 6538,
									"name": "tag",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 6506,
									"end": 6538,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6547,
									"end": 6612,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "177"
								},
								{
									"begin": 6605,
									"end": 6611,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6597,
									"end": 6603,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6591,
									"end": 6595,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6547,
									"end": 6612,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 6547,
									"end": 6612,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6547,
									"end": 6612,
									"name": "tag",
									"source": 7,
									"value": "177"
								},
								{
									"begin": 6547,
									"end": 6612,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6482,
									"end": 6618,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6429,
									"end": 6618,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6429,
									"end": 6618,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6429,
									"end": 6618,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6624,
									"end": 6810,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 6624,
									"end": 6810,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6684,
									"end": 6804,
									"name": "tag",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 6684,
									"end": 6804,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6701,
									"end": 6704,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6694,
									"end": 6699,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6691,
									"end": 6705,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6684,
									"end": 6804,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6684,
									"end": 6804,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "181"
								},
								{
									"begin": 6684,
									"end": 6804,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6755,
									"end": 6794,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 6792,
									"end": 6793,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6785,
									"end": 6790,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6755,
									"end": 6794,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 6755,
									"end": 6794,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6755,
									"end": 6794,
									"name": "tag",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 6755,
									"end": 6794,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6728,
									"end": 6729,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6721,
									"end": 6726,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6717,
									"end": 6730,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6708,
									"end": 6730,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6708,
									"end": 6730,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6684,
									"end": 6804,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 6684,
									"end": 6804,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6684,
									"end": 6804,
									"name": "tag",
									"source": 7,
									"value": "181"
								},
								{
									"begin": 6684,
									"end": 6804,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6624,
									"end": 6810,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6624,
									"end": 6810,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6624,
									"end": 6810,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6816,
									"end": 7359,
									"name": "tag",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 6816,
									"end": 7359,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6917,
									"end": 6919,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 6912,
									"end": 6915,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6909,
									"end": 6920,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 6906,
									"end": 7352,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6906,
									"end": 7352,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "184"
								},
								{
									"begin": 6906,
									"end": 7352,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6951,
									"end": 6989,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "185"
								},
								{
									"begin": 6983,
									"end": 6988,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6951,
									"end": 6989,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 6951,
									"end": 6989,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6951,
									"end": 6989,
									"name": "tag",
									"source": 7,
									"value": "185"
								},
								{
									"begin": 6951,
									"end": 6989,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7035,
									"end": 7064,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 7053,
									"end": 7063,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7035,
									"end": 7064,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 7035,
									"end": 7064,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7035,
									"end": 7064,
									"name": "tag",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 7035,
									"end": 7064,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7025,
									"end": 7033,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7021,
									"end": 7065,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7218,
									"end": 7220,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7206,
									"end": 7216,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7203,
									"end": 7221,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 7200,
									"end": 7249,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7200,
									"end": 7249,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "187"
								},
								{
									"begin": 7200,
									"end": 7249,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7239,
									"end": 7247,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7224,
									"end": 7247,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7224,
									"end": 7247,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7200,
									"end": 7249,
									"name": "tag",
									"source": 7,
									"value": "187"
								},
								{
									"begin": 7200,
									"end": 7249,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7262,
									"end": 7342,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "188"
								},
								{
									"begin": 7318,
									"end": 7340,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "189"
								},
								{
									"begin": 7336,
									"end": 7339,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7318,
									"end": 7340,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 7318,
									"end": 7340,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7318,
									"end": 7340,
									"name": "tag",
									"source": 7,
									"value": "189"
								},
								{
									"begin": 7318,
									"end": 7340,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7308,
									"end": 7316,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7304,
									"end": 7341,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7291,
									"end": 7302,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7262,
									"end": 7342,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 7262,
									"end": 7342,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7262,
									"end": 7342,
									"name": "tag",
									"source": 7,
									"value": "188"
								},
								{
									"begin": 7262,
									"end": 7342,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6921,
									"end": 7352,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6921,
									"end": 7352,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6906,
									"end": 7352,
									"name": "tag",
									"source": 7,
									"value": "184"
								},
								{
									"begin": 6906,
									"end": 7352,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6816,
									"end": 7359,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6816,
									"end": 7359,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6816,
									"end": 7359,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6816,
									"end": 7359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7365,
									"end": 7482,
									"name": "tag",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 7365,
									"end": 7482,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7419,
									"end": 7427,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7469,
									"end": 7474,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7463,
									"end": 7467,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7459,
									"end": 7475,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 7438,
									"end": 7475,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7438,
									"end": 7475,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7365,
									"end": 7482,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7365,
									"end": 7482,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7365,
									"end": 7482,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7365,
									"end": 7482,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7365,
									"end": 7482,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7488,
									"end": 7657,
									"name": "tag",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 7488,
									"end": 7657,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7532,
									"end": 7538,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7565,
									"end": 7616,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "192"
								},
								{
									"begin": 7613,
									"end": 7614,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7609,
									"end": 7615,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 7601,
									"end": 7606,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7598,
									"end": 7599,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 7594,
									"end": 7607,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 7565,
									"end": 7616,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 7565,
									"end": 7616,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7565,
									"end": 7616,
									"name": "tag",
									"source": 7,
									"value": "192"
								},
								{
									"begin": 7565,
									"end": 7616,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7561,
									"end": 7617,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 7646,
									"end": 7650,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7640,
									"end": 7644,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7636,
									"end": 7651,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 7626,
									"end": 7651,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7626,
									"end": 7651,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7539,
									"end": 7657,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7488,
									"end": 7657,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7488,
									"end": 7657,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7488,
									"end": 7657,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7488,
									"end": 7657,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7488,
									"end": 7657,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7662,
									"end": 7957,
									"name": "tag",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 7662,
									"end": 7957,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7738,
									"end": 7742,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7884,
									"end": 7913,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "194"
								},
								{
									"begin": 7909,
									"end": 7912,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7903,
									"end": 7907,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7884,
									"end": 7913,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 7884,
									"end": 7913,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7884,
									"end": 7913,
									"name": "tag",
									"source": 7,
									"value": "194"
								},
								{
									"begin": 7884,
									"end": 7913,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7876,
									"end": 7913,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7876,
									"end": 7913,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7946,
									"end": 7949,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7943,
									"end": 7944,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 7939,
									"end": 7950,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 7933,
									"end": 7937,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7930,
									"end": 7951,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 7922,
									"end": 7951,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7922,
									"end": 7951,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7662,
									"end": 7957,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7662,
									"end": 7957,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7662,
									"end": 7957,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7662,
									"end": 7957,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7662,
									"end": 7957,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7962,
									"end": 9357,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 7962,
									"end": 9357,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8079,
									"end": 8116,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "196"
								},
								{
									"begin": 8112,
									"end": 8115,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8079,
									"end": 8116,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 8079,
									"end": 8116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8079,
									"end": 8116,
									"name": "tag",
									"source": 7,
									"value": "196"
								},
								{
									"begin": 8079,
									"end": 8116,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8181,
									"end": 8199,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8173,
									"end": 8179,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8170,
									"end": 8200,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8167,
									"end": 8223,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8167,
									"end": 8223,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "197"
								},
								{
									"begin": 8167,
									"end": 8223,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8203,
									"end": 8221,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "198"
								},
								{
									"begin": 8203,
									"end": 8221,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 8203,
									"end": 8221,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8203,
									"end": 8221,
									"name": "tag",
									"source": 7,
									"value": "198"
								},
								{
									"begin": 8203,
									"end": 8221,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8167,
									"end": 8223,
									"name": "tag",
									"source": 7,
									"value": "197"
								},
								{
									"begin": 8167,
									"end": 8223,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8247,
									"end": 8285,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "199"
								},
								{
									"begin": 8279,
									"end": 8283,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8273,
									"end": 8284,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 8247,
									"end": 8285,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 8247,
									"end": 8285,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8247,
									"end": 8285,
									"name": "tag",
									"source": 7,
									"value": "199"
								},
								{
									"begin": 8247,
									"end": 8285,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8332,
									"end": 8399,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "200"
								},
								{
									"begin": 8392,
									"end": 8398,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8384,
									"end": 8390,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8378,
									"end": 8382,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 8332,
									"end": 8399,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 8332,
									"end": 8399,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8332,
									"end": 8399,
									"name": "tag",
									"source": 7,
									"value": "200"
								},
								{
									"begin": 8332,
									"end": 8399,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8426,
									"end": 8427,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8450,
									"end": 8454,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8437,
									"end": 8454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8437,
									"end": 8454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8482,
									"end": 8484,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 8474,
									"end": 8480,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8471,
									"end": 8485,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8499,
									"end": 8500,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8494,
									"end": 9112,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8494,
									"end": 9112,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 8494,
									"end": 9112,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "202"
								},
								{
									"begin": 8494,
									"end": 9112,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9156,
									"end": 9157,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9173,
									"end": 9179,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9170,
									"end": 9247,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 9170,
									"end": 9247,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "203"
								},
								{
									"begin": 9170,
									"end": 9247,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9222,
									"end": 9231,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9217,
									"end": 9220,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 9213,
									"end": 9232,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9207,
									"end": 9233,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 9198,
									"end": 9233,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9198,
									"end": 9233,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9170,
									"end": 9247,
									"name": "tag",
									"source": 7,
									"value": "203"
								},
								{
									"begin": 9170,
									"end": 9247,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9273,
									"end": 9340,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "204"
								},
								{
									"begin": 9333,
									"end": 9339,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 9326,
									"end": 9331,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9273,
									"end": 9340,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 9273,
									"end": 9340,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9273,
									"end": 9340,
									"name": "tag",
									"source": 7,
									"value": "204"
								},
								{
									"begin": 9273,
									"end": 9340,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9267,
									"end": 9271,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 9260,
									"end": 9341,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 9129,
									"end": 9351,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8464,
									"end": 9351,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "201"
								},
								{
									"begin": 8464,
									"end": 9351,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8494,
									"end": 9112,
									"name": "tag",
									"source": 7,
									"value": "202"
								},
								{
									"begin": 8494,
									"end": 9112,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8546,
									"end": 8550,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 8542,
									"end": 8551,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 8534,
									"end": 8540,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8530,
									"end": 8552,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 8580,
									"end": 8617,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "205"
								},
								{
									"begin": 8612,
									"end": 8616,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 8580,
									"end": 8617,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 8580,
									"end": 8617,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8580,
									"end": 8617,
									"name": "tag",
									"source": 7,
									"value": "205"
								},
								{
									"begin": 8580,
									"end": 8617,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8639,
									"end": 8640,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8653,
									"end": 8861,
									"name": "tag",
									"source": 7,
									"value": "206"
								},
								{
									"begin": 8653,
									"end": 8861,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8667,
									"end": 8674,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8664,
									"end": 8665,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8661,
									"end": 8675,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8653,
									"end": 8861,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8653,
									"end": 8861,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "208"
								},
								{
									"begin": 8653,
									"end": 8861,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8746,
									"end": 8755,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8741,
									"end": 8744,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 8737,
									"end": 8756,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8731,
									"end": 8757,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 8723,
									"end": 8729,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8716,
									"end": 8758,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 8797,
									"end": 8798,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8789,
									"end": 8795,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8785,
									"end": 8799,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8775,
									"end": 8799,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8775,
									"end": 8799,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8844,
									"end": 8846,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8833,
									"end": 8842,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 8829,
									"end": 8847,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8816,
									"end": 8847,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 8816,
									"end": 8847,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8690,
									"end": 8694,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8687,
									"end": 8688,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8683,
									"end": 8695,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8678,
									"end": 8695,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8678,
									"end": 8695,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8653,
									"end": 8861,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "206"
								},
								{
									"begin": 8653,
									"end": 8861,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8653,
									"end": 8861,
									"name": "tag",
									"source": 7,
									"value": "208"
								},
								{
									"begin": 8653,
									"end": 8861,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8889,
									"end": 8895,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 8880,
									"end": 8887,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8877,
									"end": 8896,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8874,
									"end": 9053,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8874,
									"end": 9053,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "209"
								},
								{
									"begin": 8874,
									"end": 9053,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8947,
									"end": 8956,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8942,
									"end": 8945,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 8938,
									"end": 8957,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8932,
									"end": 8958,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 8990,
									"end": 9038,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "210"
								},
								{
									"begin": 9032,
									"end": 9036,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 9024,
									"end": 9030,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 9020,
									"end": 9037,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 9009,
									"end": 9018,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8990,
									"end": 9038,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 8990,
									"end": 9038,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8990,
									"end": 9038,
									"name": "tag",
									"source": 7,
									"value": "210"
								},
								{
									"begin": 8990,
									"end": 9038,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8982,
									"end": 8988,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8975,
									"end": 9039,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 8897,
									"end": 9053,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8874,
									"end": 9053,
									"name": "tag",
									"source": 7,
									"value": "209"
								},
								{
									"begin": 8874,
									"end": 9053,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9099,
									"end": 9100,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 9095,
									"end": 9096,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 9087,
									"end": 9093,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 9083,
									"end": 9097,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 9079,
									"end": 9101,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9073,
									"end": 9077,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 9066,
									"end": 9102,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 8501,
									"end": 9112,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8501,
									"end": 9112,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8501,
									"end": 9112,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8464,
									"end": 9351,
									"name": "tag",
									"source": 7,
									"value": "201"
								},
								{
									"begin": 8464,
									"end": 9351,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8464,
									"end": 9351,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8054,
									"end": 9357,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8054,
									"end": 9357,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8054,
									"end": 9357,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7962,
									"end": 9357,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7962,
									"end": 9357,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7962,
									"end": 9357,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9363,
									"end": 9481,
									"name": "tag",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 9363,
									"end": 9481,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9450,
									"end": 9474,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "212"
								},
								{
									"begin": 9468,
									"end": 9473,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9450,
									"end": 9474,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 9450,
									"end": 9474,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9450,
									"end": 9474,
									"name": "tag",
									"source": 7,
									"value": "212"
								},
								{
									"begin": 9450,
									"end": 9474,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9445,
									"end": 9448,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9438,
									"end": 9475,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 9363,
									"end": 9481,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9363,
									"end": 9481,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9363,
									"end": 9481,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9487,
									"end": 9709,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9487,
									"end": 9709,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9580,
									"end": 9584,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9618,
									"end": 9620,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9607,
									"end": 9616,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9603,
									"end": 9621,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9595,
									"end": 9621,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9595,
									"end": 9621,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9631,
									"end": 9702,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "214"
								},
								{
									"begin": 9699,
									"end": 9700,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9688,
									"end": 9697,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9684,
									"end": 9701,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9675,
									"end": 9681,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9631,
									"end": 9702,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 9631,
									"end": 9702,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9631,
									"end": 9702,
									"name": "tag",
									"source": 7,
									"value": "214"
								},
								{
									"begin": 9631,
									"end": 9702,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9487,
									"end": 9709,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9487,
									"end": 9709,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9487,
									"end": 9709,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9487,
									"end": 9709,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9487,
									"end": 9709,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9715,
									"end": 9906,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 9715,
									"end": 9906,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9755,
									"end": 9758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9774,
									"end": 9794,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "216"
								},
								{
									"begin": 9792,
									"end": 9793,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9774,
									"end": 9794,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 9774,
									"end": 9794,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9774,
									"end": 9794,
									"name": "tag",
									"source": 7,
									"value": "216"
								},
								{
									"begin": 9774,
									"end": 9794,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9769,
									"end": 9794,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9769,
									"end": 9794,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9808,
									"end": 9828,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "217"
								},
								{
									"begin": 9826,
									"end": 9827,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9808,
									"end": 9828,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 9808,
									"end": 9828,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9808,
									"end": 9828,
									"name": "tag",
									"source": 7,
									"value": "217"
								},
								{
									"begin": 9808,
									"end": 9828,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9803,
									"end": 9828,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9803,
									"end": 9828,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9851,
									"end": 9852,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9848,
									"end": 9849,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9844,
									"end": 9853,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9837,
									"end": 9853,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9837,
									"end": 9853,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9872,
									"end": 9875,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 9869,
									"end": 9870,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9866,
									"end": 9876,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 9863,
									"end": 9899,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 9863,
									"end": 9899,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "218"
								},
								{
									"begin": 9863,
									"end": 9899,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9879,
									"end": 9897,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "219"
								},
								{
									"begin": 9879,
									"end": 9897,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 9879,
									"end": 9897,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9879,
									"end": 9897,
									"name": "tag",
									"source": 7,
									"value": "219"
								},
								{
									"begin": 9879,
									"end": 9897,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9863,
									"end": 9899,
									"name": "tag",
									"source": 7,
									"value": "218"
								},
								{
									"begin": 9863,
									"end": 9899,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9715,
									"end": 9906,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9715,
									"end": 9906,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9715,
									"end": 9906,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9715,
									"end": 9906,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9715,
									"end": 9906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9912,
									"end": 10030,
									"name": "tag",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 9912,
									"end": 10030,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9999,
									"end": 10023,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "221"
								},
								{
									"begin": 10017,
									"end": 10022,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9999,
									"end": 10023,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 9999,
									"end": 10023,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9999,
									"end": 10023,
									"name": "tag",
									"source": 7,
									"value": "221"
								},
								{
									"begin": 9999,
									"end": 10023,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9994,
									"end": 9997,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9987,
									"end": 10024,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 9912,
									"end": 10030,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9912,
									"end": 10030,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9912,
									"end": 10030,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10036,
									"end": 10478,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 10036,
									"end": 10478,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10185,
									"end": 10189,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10223,
									"end": 10225,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 10212,
									"end": 10221,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10208,
									"end": 10226,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10200,
									"end": 10226,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10200,
									"end": 10226,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10236,
									"end": 10307,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "223"
								},
								{
									"begin": 10304,
									"end": 10305,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10293,
									"end": 10302,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10289,
									"end": 10306,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10280,
									"end": 10286,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 10236,
									"end": 10307,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 10236,
									"end": 10307,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10236,
									"end": 10307,
									"name": "tag",
									"source": 7,
									"value": "223"
								},
								{
									"begin": 10236,
									"end": 10307,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10317,
									"end": 10389,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "224"
								},
								{
									"begin": 10385,
									"end": 10387,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 10374,
									"end": 10383,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10370,
									"end": 10388,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10361,
									"end": 10367,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 10317,
									"end": 10389,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 10317,
									"end": 10389,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10317,
									"end": 10389,
									"name": "tag",
									"source": 7,
									"value": "224"
								},
								{
									"begin": 10317,
									"end": 10389,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10399,
									"end": 10471,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "225"
								},
								{
									"begin": 10467,
									"end": 10469,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 10456,
									"end": 10465,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10452,
									"end": 10470,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10443,
									"end": 10449,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 10399,
									"end": 10471,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 10399,
									"end": 10471,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10399,
									"end": 10471,
									"name": "tag",
									"source": 7,
									"value": "225"
								},
								{
									"begin": 10399,
									"end": 10471,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10036,
									"end": 10478,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 10036,
									"end": 10478,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 10036,
									"end": 10478,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10036,
									"end": 10478,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10036,
									"end": 10478,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10036,
									"end": 10478,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10036,
									"end": 10478,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10484,
									"end": 10706,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 10484,
									"end": 10706,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10577,
									"end": 10581,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10615,
									"end": 10617,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 10604,
									"end": 10613,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10600,
									"end": 10618,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10592,
									"end": 10618,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10592,
									"end": 10618,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10628,
									"end": 10699,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "227"
								},
								{
									"begin": 10696,
									"end": 10697,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10685,
									"end": 10694,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10681,
									"end": 10698,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10672,
									"end": 10678,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 10628,
									"end": 10699,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 10628,
									"end": 10699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10628,
									"end": 10699,
									"name": "tag",
									"source": 7,
									"value": "227"
								},
								{
									"begin": 10628,
									"end": 10699,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10484,
									"end": 10706,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 10484,
									"end": 10706,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10484,
									"end": 10706,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10484,
									"end": 10706,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10484,
									"end": 10706,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 168,
									"end": 4127,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 168,
									"end": 4127,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 168,
									"end": 4127,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 168,
									"end": 4127,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 168,
									"end": 4127,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 168,
									"end": 4127,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 168,
									"end": 4127,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 168,
									"end": 4127,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 168,
									"end": 4127,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e607775e84c94630f95198c2b351f27baba26c68422d2b3367cf3d08349b98ae64736f6c63430008180033",
									".code": [
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH",
											"source": 6,
											"value": "9DC29FAC"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH",
											"source": 6,
											"value": "9DC29FAC"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH",
											"source": 6,
											"value": "E4E103DC"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH",
											"source": 6,
											"value": "378DC3DC"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH",
											"source": 6,
											"value": "40C10F19"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH",
											"source": 6,
											"value": "700037D"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 4127,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 505,
											"end": 547,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 505,
											"end": 547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 505,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 505,
											"end": 547,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 505,
											"end": 547,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 505,
											"end": 547,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 505,
											"end": 547,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 505,
											"end": 547,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 505,
											"end": 547,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 505,
											"end": 547,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 505,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 505,
											"end": 547,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 505,
											"end": 547,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 505,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 505,
											"end": 547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 505,
											"end": 547,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 505,
											"end": 547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 505,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 505,
											"end": 547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 505,
											"end": 547,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 505,
											"end": 547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 505,
											"end": 547,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 505,
											"end": 547,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 505,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 505,
											"end": 547,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 505,
											"end": 547,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 505,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 505,
											"end": 547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 505,
											"end": 547,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 505,
											"end": 547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 505,
											"end": 547,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 505,
											"end": 547,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 505,
											"end": 547,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 505,
											"end": 547,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 505,
											"end": 547,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 505,
											"end": 547,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 505,
											"end": 547,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3616,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3428,
											"end": 3616,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 3428,
											"end": 3616,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3428,
											"end": 3616,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3616,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3616,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3616,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3616,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3616,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 3428,
											"end": 3616,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3616,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 3428,
											"end": 3616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3616,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 3428,
											"end": 3616,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 3428,
											"end": 3616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3616,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 3428,
											"end": 3616,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3616,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3428,
											"end": 3616,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 3428,
											"end": 3616,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3616,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 3428,
											"end": 3616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3616,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 3428,
											"end": 3616,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3616,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3428,
											"end": 3616,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3616,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3616,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3616,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3616,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3616,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3925,
											"end": 4125,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3925,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3925,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3925,
											"end": 4125,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3925,
											"end": 4125,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3925,
											"end": 4125,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3925,
											"end": 4125,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3925,
											"end": 4125,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3925,
											"end": 4125,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3925,
											"end": 4125,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3925,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 3925,
											"end": 4125,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3925,
											"end": 4125,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3925,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3925,
											"end": 4125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3925,
											"end": 4125,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 3925,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3925,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 3925,
											"end": 4125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3925,
											"end": 4125,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3925,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3925,
											"end": 4125,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3925,
											"end": 4125,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3925,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 3925,
											"end": 4125,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3925,
											"end": 4125,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3925,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 3925,
											"end": 4125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3925,
											"end": 4125,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 3925,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3925,
											"end": 4125,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3925,
											"end": 4125,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3925,
											"end": 4125,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3925,
											"end": 4125,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3925,
											"end": 4125,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3925,
											"end": 4125,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3925,
											"end": 4125,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 368,
											"end": 436,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 368,
											"end": 436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 368,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 368,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 368,
											"end": 436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 368,
											"end": 436,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 368,
											"end": 436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 368,
											"end": 436,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 368,
											"end": 436,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 368,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 368,
											"end": 436,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 368,
											"end": 436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 368,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 368,
											"end": 436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 368,
											"end": 436,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 368,
											"end": 436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 368,
											"end": 436,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 368,
											"end": 436,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 368,
											"end": 436,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 368,
											"end": 436,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 368,
											"end": 436,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 368,
											"end": 436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 368,
											"end": 436,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1291,
											"end": 1510,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1291,
											"end": 1510,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1291,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1291,
											"end": 1510,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1291,
											"end": 1510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1291,
											"end": 1510,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1291,
											"end": 1510,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1291,
											"end": 1510,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1291,
											"end": 1510,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1291,
											"end": 1510,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1291,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1291,
											"end": 1510,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1291,
											"end": 1510,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1291,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1291,
											"end": 1510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1291,
											"end": 1510,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1291,
											"end": 1510,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1291,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1291,
											"end": 1510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1291,
											"end": 1510,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1291,
											"end": 1510,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1291,
											"end": 1510,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3147,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2969,
											"end": 3147,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2969,
											"end": 3147,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2969,
											"end": 3147,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3147,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3147,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3147,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3147,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3147,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 2969,
											"end": 3147,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3147,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2969,
											"end": 3147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3147,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 2969,
											"end": 3147,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2969,
											"end": 3147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3147,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2969,
											"end": 3147,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3147,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2969,
											"end": 3147,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2969,
											"end": 3147,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3147,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2969,
											"end": 3147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3147,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2969,
											"end": 3147,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3147,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2969,
											"end": 3147,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3147,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3147,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3147,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3147,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3147,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1851,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1698,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1698,
											"end": 1851,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1698,
											"end": 1851,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1851,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1851,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1851,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1851,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1851,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1698,
											"end": 1851,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1851,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1698,
											"end": 1851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1851,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1698,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1698,
											"end": 1851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1851,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1698,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1851,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2765,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 2582,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2582,
											"end": 2765,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2582,
											"end": 2765,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2765,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2765,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2765,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2765,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2765,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 2582,
											"end": 2765,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2765,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2582,
											"end": 2765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2765,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 2582,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2582,
											"end": 2765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2765,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2582,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2765,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2582,
											"end": 2765,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2582,
											"end": 2765,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2765,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 2582,
											"end": 2765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2765,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2582,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2765,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2582,
											"end": 2765,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2765,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2765,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2765,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2765,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2765,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2072,
											"end": 2307,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 2072,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 2072,
											"end": 2307,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2072,
											"end": 2307,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2307,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2307,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2307,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2307,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2307,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 2072,
											"end": 2307,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2307,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2072,
											"end": 2307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2307,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 2072,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2072,
											"end": 2307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2307,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 2072,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2307,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 505,
											"end": 547,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 505,
											"end": 547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 505,
											"end": 547,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 505,
											"end": 547,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 505,
											"end": 547,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 505,
											"end": 547,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 505,
											"end": 547,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 505,
											"end": 547,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 505,
											"end": 547,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 505,
											"end": 547,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 505,
											"end": 547,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 505,
											"end": 547,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 505,
											"end": 547,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 505,
											"end": 547,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 505,
											"end": 547,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 505,
											"end": 547,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 505,
											"end": 547,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 505,
											"end": 547,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 505,
											"end": 547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3616,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 3428,
											"end": 3616,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3503,
											"end": 3507,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3526,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 3540,
											"end": 3547,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3555,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3526,
											"end": 3539,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 3526,
											"end": 3556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3526,
											"end": 3556,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 3526,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3519,
											"end": 3556,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3519,
											"end": 3556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3616,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3616,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3616,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3616,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3925,
											"end": 4125,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 3925,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4018,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4037,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4056,
											"end": 4060,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4064,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4072,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 4037,
											"end": 4073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4073,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4037,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4030,
											"end": 4073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4030,
											"end": 4073,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3925,
											"end": 4125,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3925,
											"end": 4125,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3925,
											"end": 4125,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3925,
											"end": 4125,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3925,
											"end": 4125,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3925,
											"end": 4125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 368,
											"end": 436,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 368,
											"end": 436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 368,
											"end": 436,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 368,
											"end": 436,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 368,
											"end": 436,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 368,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1291,
											"end": 1510,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1291,
											"end": 1510,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1379,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 1368,
											"end": 1370,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1372,
											"end": 1378,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1362,
											"end": 1367,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1362,
											"end": 1379,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1362,
											"end": 1379,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 1362,
											"end": 1379,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1457,
											"end": 1459,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1444,
											"end": 1468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1444,
											"end": 1468,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1444,
											"end": 1468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3F2C9D57C068687834F0DE942A9BABB9E5ACAB57D516D3480A3C16EE165A4273"
										},
										{
											"begin": 1461,
											"end": 1467,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1444,
											"end": 1468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1444,
											"end": 1468,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1444,
											"end": 1468,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 1444,
											"end": 1468,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1444,
											"end": 1468,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1444,
											"end": 1468,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1444,
											"end": 1468,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1444,
											"end": 1468,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 1444,
											"end": 1468,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1444,
											"end": 1468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1444,
											"end": 1468,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1444,
											"end": 1468,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1444,
											"end": 1468,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1444,
											"end": 1468,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1444,
											"end": 1468,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1444,
											"end": 1468,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 1291,
											"end": 1510,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1291,
											"end": 1510,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1291,
											"end": 1510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3147,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2969,
											"end": 3147,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3035,
											"end": 3042,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3061,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 3077,
											"end": 3084,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3076,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 3061,
											"end": 3085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3085,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 3061,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3054,
											"end": 3085,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3054,
											"end": 3085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3147,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3147,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3147,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1851,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1698,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1790,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1777,
											"end": 1781,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1783,
											"end": 1789,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1771,
											"end": 1776,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1771,
											"end": 1790,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1771,
											"end": 1790,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1771,
											"end": 1790,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1851,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1851,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2765,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2582,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2653,
											"end": 2657,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 2702,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 2691,
											"end": 2693,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2695,
											"end": 2701,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2676,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 2676,
											"end": 2702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2676,
											"end": 2702,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 2676,
											"end": 2702,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2702,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2702,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2765,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2765,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2765,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2765,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2072,
											"end": 2307,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2072,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2170,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 2157,
											"end": 2161,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2163,
											"end": 2169,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2151,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 2151,
											"end": 2170,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2151,
											"end": 2170,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 2151,
											"end": 2170,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2256,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2241,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2234,
											"end": 2247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2242,
											"end": 2246,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2234,
											"end": 2247,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2234,
											"end": 2247,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2247,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2247,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2234,
											"end": 2247,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2247,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2247,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2247,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2234,
											"end": 2247,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2234,
											"end": 2247,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2247,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2256,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 2234,
											"end": 2256,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2256,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2256,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 2234,
											"end": 2256,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2256,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 2234,
											"end": 2256,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2218,
											"end": 2231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2226,
											"end": 2230,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2218,
											"end": 2231,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2218,
											"end": 2231,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2231,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2231,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2218,
											"end": 2231,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2231,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2231,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2231,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2218,
											"end": 2231,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2218,
											"end": 2231,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2256,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2256,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2256,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2256,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2307,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2307,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8061,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8125,
											"end": 8126,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 8098,
											"end": 8128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 8156,
											"end": 8163,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8173,
											"end": 8174,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 8182,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 8148,
											"end": 8183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10600,
											"end": 10617,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10617,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10656,
											"end": 10661,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10637,
											"end": 10653,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10637,
											"end": 10661,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10715,
											"end": 10722,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10724,
											"end": 10740,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10742,
											"end": 10747,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 10688,
											"end": 10748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 10813,
											"end": 10818,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10820,
											"end": 10827,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10853,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10829,
											"end": 10845,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10829,
											"end": 10853,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10855,
											"end": 10860,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10804,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 10804,
											"end": 10861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10504,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2512,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 2183,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2242,
											"end": 2248,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2291,
											"end": 2293,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2279,
											"end": 2288,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2270,
											"end": 2277,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2266,
											"end": 2289,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2294,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 2297,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 2297,
											"end": 2376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2376,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 2297,
											"end": 2376,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2417,
											"end": 2418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2495,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 2487,
											"end": 2494,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2476,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2463,
											"end": 2485,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2442,
											"end": 2495,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 2442,
											"end": 2495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2442,
											"end": 2495,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 2442,
											"end": 2495,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2495,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2495,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2388,
											"end": 2505,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2512,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2512,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2512,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2512,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 2595,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 2518,
											"end": 2595,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 2562,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2584,
											"end": 2589,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2573,
											"end": 2589,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2573,
											"end": 2589,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 2595,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 2595,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 2595,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 2595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2601,
											"end": 2719,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 2601,
											"end": 2719,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2688,
											"end": 2712,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 2706,
											"end": 2711,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2688,
											"end": 2712,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 2688,
											"end": 2712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2688,
											"end": 2712,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 2688,
											"end": 2712,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 2686,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2713,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2601,
											"end": 2719,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2601,
											"end": 2719,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2601,
											"end": 2719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2725,
											"end": 2947,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 2725,
											"end": 2947,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2818,
											"end": 2822,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2858,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2845,
											"end": 2854,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2841,
											"end": 2859,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2833,
											"end": 2859,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2833,
											"end": 2859,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2869,
											"end": 2940,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 2937,
											"end": 2938,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2935,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 2939,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2919,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2869,
											"end": 2940,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 2869,
											"end": 2940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2869,
											"end": 2940,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 2869,
											"end": 2940,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2725,
											"end": 2947,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2725,
											"end": 2947,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2725,
											"end": 2947,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2725,
											"end": 2947,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2725,
											"end": 2947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2953,
											"end": 3075,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 2953,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3026,
											"end": 3050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 3044,
											"end": 3049,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3026,
											"end": 3050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 3026,
											"end": 3050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3026,
											"end": 3050,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 3026,
											"end": 3050,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3024,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3016,
											"end": 3051,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 3006,
											"end": 3069,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3065,
											"end": 3066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3062,
											"end": 3063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3055,
											"end": 3067,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3069,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 3006,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2953,
											"end": 3075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2953,
											"end": 3075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3081,
											"end": 3220,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 3081,
											"end": 3220,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3132,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3165,
											"end": 3171,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3152,
											"end": 3172,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3143,
											"end": 3172,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3143,
											"end": 3172,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3181,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 3208,
											"end": 3213,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3181,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 3181,
											"end": 3214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3181,
											"end": 3214,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 3181,
											"end": 3214,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3081,
											"end": 3220,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3081,
											"end": 3220,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3081,
											"end": 3220,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3081,
											"end": 3220,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3081,
											"end": 3220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3226,
											"end": 3700,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 3226,
											"end": 3700,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3294,
											"end": 3300,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3302,
											"end": 3308,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3351,
											"end": 3353,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3339,
											"end": 3348,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3330,
											"end": 3337,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3326,
											"end": 3349,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3322,
											"end": 3354,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3319,
											"end": 3438,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3319,
											"end": 3438,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 3319,
											"end": 3438,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3357,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 3357,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 3357,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3357,
											"end": 3436,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 3357,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3319,
											"end": 3438,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 3319,
											"end": 3438,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3477,
											"end": 3478,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3502,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 3547,
											"end": 3554,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3538,
											"end": 3544,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3527,
											"end": 3536,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3545,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3502,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 3502,
											"end": 3555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3502,
											"end": 3555,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 3502,
											"end": 3555,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3492,
											"end": 3555,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3492,
											"end": 3555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3448,
											"end": 3565,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3604,
											"end": 3606,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3630,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 3675,
											"end": 3682,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3672,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3655,
											"end": 3664,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3673,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3630,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 3630,
											"end": 3683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3630,
											"end": 3683,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 3630,
											"end": 3683,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3620,
											"end": 3683,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3620,
											"end": 3683,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3693,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3226,
											"end": 3700,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3226,
											"end": 3700,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3226,
											"end": 3700,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3226,
											"end": 3700,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3226,
											"end": 3700,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3226,
											"end": 3700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3706,
											"end": 3796,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 3706,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3740,
											"end": 3747,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3783,
											"end": 3788,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3776,
											"end": 3789,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3769,
											"end": 3790,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3758,
											"end": 3790,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3758,
											"end": 3790,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3706,
											"end": 3796,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3706,
											"end": 3796,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3706,
											"end": 3796,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3706,
											"end": 3796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3802,
											"end": 3911,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 3802,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3883,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 3898,
											"end": 3903,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3883,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 3883,
											"end": 3904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3883,
											"end": 3904,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 3883,
											"end": 3904,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 3881,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3871,
											"end": 3905,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3802,
											"end": 3911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3802,
											"end": 3911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3802,
											"end": 3911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3917,
											"end": 4127,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 3917,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4004,
											"end": 4008,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4042,
											"end": 4044,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4031,
											"end": 4040,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4027,
											"end": 4045,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4019,
											"end": 4045,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4019,
											"end": 4045,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4055,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 4117,
											"end": 4118,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4106,
											"end": 4115,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4119,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4099,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4055,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 4055,
											"end": 4120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4055,
											"end": 4120,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 4055,
											"end": 4120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3917,
											"end": 4127,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3917,
											"end": 4127,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3917,
											"end": 4127,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3917,
											"end": 4127,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3917,
											"end": 4127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4752,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4133,
											"end": 4752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4210,
											"end": 4216,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4218,
											"end": 4224,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4226,
											"end": 4232,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4275,
											"end": 4277,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4263,
											"end": 4272,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4254,
											"end": 4261,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4250,
											"end": 4273,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4246,
											"end": 4278,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4243,
											"end": 4362,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4243,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 4243,
											"end": 4362,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4281,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 4281,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 4281,
											"end": 4360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4281,
											"end": 4360,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 4281,
											"end": 4360,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4243,
											"end": 4362,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 4243,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4402,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4426,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 4471,
											"end": 4478,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4462,
											"end": 4468,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4451,
											"end": 4460,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4447,
											"end": 4469,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4426,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 4426,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4426,
											"end": 4479,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 4426,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4416,
											"end": 4479,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4416,
											"end": 4479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4372,
											"end": 4489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4528,
											"end": 4530,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4554,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 4599,
											"end": 4606,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4590,
											"end": 4596,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4579,
											"end": 4588,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4575,
											"end": 4597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4554,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 4554,
											"end": 4607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4554,
											"end": 4607,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 4554,
											"end": 4607,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4544,
											"end": 4607,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4544,
											"end": 4607,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4499,
											"end": 4617,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4656,
											"end": 4658,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4682,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 4727,
											"end": 4734,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4718,
											"end": 4724,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4707,
											"end": 4716,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4703,
											"end": 4725,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4682,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 4682,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4682,
											"end": 4735,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 4682,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4672,
											"end": 4735,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4672,
											"end": 4735,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4627,
											"end": 4745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4752,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4752,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4752,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4752,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4752,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4758,
											"end": 4844,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 4758,
											"end": 4844,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4793,
											"end": 4800,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4833,
											"end": 4837,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4826,
											"end": 4831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4838,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4811,
											"end": 4838,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4811,
											"end": 4838,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4758,
											"end": 4844,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4758,
											"end": 4844,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4758,
											"end": 4844,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4758,
											"end": 4844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4850,
											"end": 4962,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 4850,
											"end": 4962,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4933,
											"end": 4955,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 4949,
											"end": 4954,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4933,
											"end": 4955,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 4933,
											"end": 4955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4933,
											"end": 4955,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 4933,
											"end": 4955,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4928,
											"end": 4931,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4921,
											"end": 4956,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4850,
											"end": 4962,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4850,
											"end": 4962,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4850,
											"end": 4962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4968,
											"end": 5182,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 4968,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5057,
											"end": 5061,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5095,
											"end": 5097,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5084,
											"end": 5093,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5080,
											"end": 5098,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5072,
											"end": 5098,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5072,
											"end": 5098,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5108,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 5172,
											"end": 5173,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5161,
											"end": 5170,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5157,
											"end": 5174,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5108,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 5108,
											"end": 5175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5108,
											"end": 5175,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 5108,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4968,
											"end": 5182,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4968,
											"end": 5182,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4968,
											"end": 5182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4968,
											"end": 5182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4968,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5306,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 5188,
											"end": 5306,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 5293,
											"end": 5298,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 5275,
											"end": 5299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5270,
											"end": 5273,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5263,
											"end": 5300,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5306,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5306,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5405,
											"end": 5409,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5443,
											"end": 5445,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5432,
											"end": 5441,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5428,
											"end": 5446,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5420,
											"end": 5446,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5420,
											"end": 5446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5456,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 5524,
											"end": 5525,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5513,
											"end": 5522,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5509,
											"end": 5526,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5500,
											"end": 5506,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5456,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 5456,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5456,
											"end": 5527,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 5456,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5608,
											"end": 5614,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5616,
											"end": 5622,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5665,
											"end": 5667,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5653,
											"end": 5662,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5644,
											"end": 5651,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5640,
											"end": 5663,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5636,
											"end": 5668,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 5671,
											"end": 5750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5791,
											"end": 5792,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 5861,
											"end": 5868,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5852,
											"end": 5858,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5841,
											"end": 5850,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5837,
											"end": 5859,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 5816,
											"end": 5869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5806,
											"end": 5869,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5806,
											"end": 5869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5762,
											"end": 5879,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5918,
											"end": 5920,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 5989,
											"end": 5996,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5980,
											"end": 5986,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5969,
											"end": 5978,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5965,
											"end": 5987,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 5944,
											"end": 5997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5997,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5997,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5889,
											"end": 6007,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 6014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6020,
											"end": 6200,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 6020,
											"end": 6200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6068,
											"end": 6145,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6065,
											"end": 6066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6058,
											"end": 6146,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6165,
											"end": 6169,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 6162,
											"end": 6163,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6155,
											"end": 6170,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6189,
											"end": 6193,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6186,
											"end": 6187,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6194,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6250,
											"end": 6256,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6287,
											"end": 6288,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6281,
											"end": 6285,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6277,
											"end": 6289,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6267,
											"end": 6289,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6267,
											"end": 6289,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6334,
											"end": 6335,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6328,
											"end": 6332,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6324,
											"end": 6336,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6373,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6345,
											"end": 6426,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 6345,
											"end": 6426,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 6403,
											"end": 6409,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6399,
											"end": 6416,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6389,
											"end": 6416,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6389,
											"end": 6416,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6345,
											"end": 6426,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 6345,
											"end": 6426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6473,
											"end": 6475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6465,
											"end": 6471,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6462,
											"end": 6476,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6442,
											"end": 6460,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6477,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6436,
											"end": 6520,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 6436,
											"end": 6520,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 6492,
											"end": 6510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6436,
											"end": 6520,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 6436,
											"end": 6520,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6257,
											"end": 6526,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6206,
											"end": 6526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6712,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 6532,
											"end": 6712,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6580,
											"end": 6657,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6577,
											"end": 6578,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6658,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6677,
											"end": 6681,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 6674,
											"end": 6675,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6667,
											"end": 6682,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6701,
											"end": 6705,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6698,
											"end": 6699,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6691,
											"end": 6706,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6718,
											"end": 6909,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 6718,
											"end": 6909,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6758,
											"end": 6761,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6777,
											"end": 6797,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 6795,
											"end": 6796,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6777,
											"end": 6797,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 6777,
											"end": 6797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6777,
											"end": 6797,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 6777,
											"end": 6797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6772,
											"end": 6797,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6772,
											"end": 6797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6811,
											"end": 6831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 6829,
											"end": 6830,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6811,
											"end": 6831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 6811,
											"end": 6831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6811,
											"end": 6831,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 6811,
											"end": 6831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6806,
											"end": 6831,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6806,
											"end": 6831,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6854,
											"end": 6855,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6851,
											"end": 6852,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 6856,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6840,
											"end": 6856,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6840,
											"end": 6856,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6875,
											"end": 6878,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6872,
											"end": 6873,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6869,
											"end": 6879,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6866,
											"end": 6902,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6866,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 6866,
											"end": 6902,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6882,
											"end": 6900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 6882,
											"end": 6900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 6882,
											"end": 6900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6882,
											"end": 6900,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 6882,
											"end": 6900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6866,
											"end": 6902,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 6866,
											"end": 6902,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6718,
											"end": 6909,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6718,
											"end": 6909,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6718,
											"end": 6909,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6718,
											"end": 6909,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6718,
											"end": 6909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6915,
											"end": 7357,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 6915,
											"end": 7357,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7064,
											"end": 7068,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7102,
											"end": 7104,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7091,
											"end": 7100,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7087,
											"end": 7105,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7079,
											"end": 7105,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7079,
											"end": 7105,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7115,
											"end": 7186,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 7183,
											"end": 7184,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7172,
											"end": 7181,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7168,
											"end": 7185,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7159,
											"end": 7165,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7115,
											"end": 7186,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 7115,
											"end": 7186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7115,
											"end": 7186,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 7115,
											"end": 7186,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7196,
											"end": 7268,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 7264,
											"end": 7266,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7253,
											"end": 7262,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7249,
											"end": 7267,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7240,
											"end": 7246,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7196,
											"end": 7268,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 7196,
											"end": 7268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7196,
											"end": 7268,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 7196,
											"end": 7268,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7278,
											"end": 7350,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 7346,
											"end": 7348,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7335,
											"end": 7344,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7331,
											"end": 7349,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7322,
											"end": 7328,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7278,
											"end": 7350,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 7278,
											"end": 7350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7278,
											"end": 7350,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 7278,
											"end": 7350,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6915,
											"end": 7357,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 6915,
											"end": 7357,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6915,
											"end": 7357,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6915,
											"end": 7357,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6915,
											"end": 7357,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6915,
											"end": 7357,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6915,
											"end": 7357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"Backend/TokenContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"decimals()": "313ce567",
							"initialSupply()": "378dc3dc",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rewardUser(address,uint256)": "e4e103dc",
							"rewards(address)": "0700037d",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rewardUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens that can be spent\",\"spender\":\"The address allowed to spend the tokens\"},\"returns\":{\"_0\":\"success Returns true if the approval was successful\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"The address to check the balance for\"},\"returns\":{\"_0\":\"balance The token balance of the given address\"}},\"burn(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to burn\",\"from\":\"The address to burn tokens from\"}},\"constructor\":{\"params\":{\"initialOwner\":\"The address of the initial owner (usually deployer's address)\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"mint(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to mint\",\"to\":\"The address to mint tokens to\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"rewardUser(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to reward the user\",\"user\":\"The address of the user to reward\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to transfer\",\"to\":\"The address to transfer tokens to\"},\"returns\":{\"_0\":\"success Returns true if the transfer was successful\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to transfer\",\"from\":\"The address to transfer tokens from\",\"to\":\"The address to transfer tokens to\"},\"returns\":{\"_0\":\"success Returns true if the transfer was successful\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"Approve another address to spend tokens on your behalf\"},\"balanceOf(address)\":{\"notice\":\"Get the balance of tokens for a given address\"},\"burn(address,uint256)\":{\"notice\":\"Burn tokens from an address (only owner can burn)\"},\"constructor\":{\"notice\":\"Constructor for initializing the token contract\"},\"mint(address,uint256)\":{\"notice\":\"Mint new tokens to an address (only owner can mint)\"},\"rewardUser(address,uint256)\":{\"notice\":\"Reward a user with tokens for an eco-friendly action (like recycling)\"},\"transfer(address,uint256)\":{\"notice\":\"Transfer tokens from one address to another (inherits from ERC20)\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer tokens on behalf of another address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Backend/TokenContract.sol\":\"TokenContract\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"Backend/TokenContract.sol\":{\"keccak256\":\"0xfd3827ae94e50a54d18b9b97f63c0befe3c319b6108a252581c457cd6cc83430\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b30609a8bc64804f039ad9d13538f855b7de844edd6fb094bdbd84933cebda54\",\"dweb:/ipfs/QmTZ6DbSKJs6DvDgeXPBC1jDWcuvoktwGLKnhvv91CdY9u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "Backend/TokenContract.sol:TokenContract",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "Backend/TokenContract.sol:TokenContract",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "Backend/TokenContract.sol:TokenContract",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "Backend/TokenContract.sol:TokenContract",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "Backend/TokenContract.sol:TokenContract",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "Backend/TokenContract.sol:TokenContract",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 953,
								"contract": "Backend/TokenContract.sol:TokenContract",
								"label": "initialSupply",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 957,
								"contract": "Backend/TokenContract.sol:TokenContract",
								"label": "rewards",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"approve(address,uint256)": {
								"notice": "Approve another address to spend tokens on your behalf"
							},
							"balanceOf(address)": {
								"notice": "Get the balance of tokens for a given address"
							},
							"burn(address,uint256)": {
								"notice": "Burn tokens from an address (only owner can burn)"
							},
							"constructor": {
								"notice": "Constructor for initializing the token contract"
							},
							"mint(address,uint256)": {
								"notice": "Mint new tokens to an address (only owner can mint)"
							},
							"rewardUser(address,uint256)": {
								"notice": "Reward a user with tokens for an eco-friendly action (like recycling)"
							},
							"transfer(address,uint256)": {
								"notice": "Transfer tokens from one address to another (inherits from ERC20)"
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfer tokens on behalf of another address"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1657:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1667:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1675:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1690:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1700:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1613:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1634:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:2"
									},
									"scope": 799,
									"src": "1601:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1839:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1856:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1849:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1824:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:2"
									},
									"scope": 799,
									"src": "1779:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2043:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2053:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2028:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:2"
									},
									"scope": 799,
									"src": "1981:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2763:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2773:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2756:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:2"
									},
									"scope": 799,
									"src": "2707:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2910:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2927:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2920:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2901:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:2"
									},
									"scope": 799,
									"src": "2849:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3078:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3095:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3105:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3088:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:2"
									},
									"scope": 799,
									"src": "3004:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3390:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3400:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3416:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3448:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3455:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3459:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3438:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3475:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3333:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3345:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3384:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:2"
									},
									"scope": 799,
									"src": "3315:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3640:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3657:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3669:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3676:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3650:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3570:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3585:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3631:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:2"
									},
									"scope": 799,
									"src": "3551:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4077:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4087:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4103:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4134:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4141:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4150:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4125:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4166:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4015:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4071:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:2"
									},
									"scope": 799,
									"src": "3998:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4869:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4879:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4897:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4935:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4941:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4950:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4919:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4976:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4982:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4986:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4966:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5002:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4798:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4812:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4824:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4863:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:2"
									},
									"scope": 799,
									"src": "4776:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5462:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5476:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5472:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5496:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5510:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5571:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5567:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5589:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5603:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5670:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5676:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5680:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5662:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5412:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5426:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5438:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:2"
									},
									"scope": 799,
									"src": "5393:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6083:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6097:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6271:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6285:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6307:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6317:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6340:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6354:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6336:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6361:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6411:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6417:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6430:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6571:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6581:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6589:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6603:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6093:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6117:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6233:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6249:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6647:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6862:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7021:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7031:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7038:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6643:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6665:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6810:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6826:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7092:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7098:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7102:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7083:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7078:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6025:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6039:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6051:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:2"
									},
									"scope": 799,
									"src": "6008:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7514:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7524:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7551:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7565:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7644:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7653:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7624:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7473:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7490:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:2"
									},
									"scope": 799,
									"src": "7458:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8040:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8054:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8050:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8077:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8091:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8156:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8177:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8148:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7999:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8016:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:2"
									},
									"scope": 799,
									"src": "7984:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8800:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8819:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8835:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8810:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8744:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8759:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8776:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:2"
									},
									"scope": 799,
									"src": "8726:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9799:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9813:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9809:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9834:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9848:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9911:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9907:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9934:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9948:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10006:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10018:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10025:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10036:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10055:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10051:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10066:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10094:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10101:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10110:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10085:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10080:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9719:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9734:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9751:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9766:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:2"
									},
									"scope": 799,
									"src": "9701:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10504:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10514:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10551:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10541:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10580:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10576:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10619:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10637:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10656:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10633:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10663:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10715:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10724:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10742:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10688:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10813:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10820:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10829:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10848:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10804:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10440:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10455:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10472:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:2"
									},
									"scope": 799,
									"src": "10415:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9788:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10790:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"Backend/TokenContract.sol": {
				"ast": {
					"absolutePath": "Backend/TokenContract.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"Ownable": [
							147
						],
						"TokenContract": [
							1122
						]
					},
					"id": 1123,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1123,
							"sourceUnit": 800,
							"src": "58:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1123,
							"sourceUnit": 148,
							"src": "114:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 938,
										"name": "ERC20",
										"nameLocations": [
											"194:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "194:5:6"
									},
									"id": 939,
									"nodeType": "InheritanceSpecifier",
									"src": "194:5:6"
								},
								{
									"baseName": {
										"id": 940,
										"name": "Ownable",
										"nameLocations": [
											"201:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "201:7:6"
									},
									"id": 941,
									"nodeType": "InheritanceSpecifier",
									"src": "201:7:6"
								}
							],
							"canonicalName": "TokenContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1122,
							"linearizedBaseContracts": [
								1122,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "TokenContract",
							"nameLocation": "177:13:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "378dc3dc",
									"id": 953,
									"mutability": "mutable",
									"name": "initialSupply",
									"nameLocation": "383:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 1122,
									"src": "368:68:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 942,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "368:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 952,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31303030303030",
											"id": 943,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "399:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											},
											"value": "1000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 944,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "410:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 947,
																	"name": "decimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 363,
																	"src": "424:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																		"typeString": "function () view returns (uint8)"
																	}
																},
																"id": 948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "424:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "416:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 945,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "416:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 949,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "416:19:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "410:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 951,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "409:27:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "399:37:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0700037d",
									"id": 957,
									"mutability": "mutable",
									"name": "rewards",
									"nameLocation": "540:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1122,
									"src": "505:42:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 956,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 954,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "513:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "505:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 955,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "524:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "3f2c9d57c068687834f0de942a9babb9e5acab57d516d3480a3c16ee165a4273",
									"id": 963,
									"name": "TokensMinted",
									"nameLocation": "595:12:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "624:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "608:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "608:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "636:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "628:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "628:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "607:36:6"
									},
									"src": "589:55:6"
								},
								{
									"body": {
										"id": 985,
										"nodeType": "Block",
										"src": "909:196:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 977,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 966,
															"src": "978:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 978,
															"name": "initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "992:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 976,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "972:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "972:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 980,
												"nodeType": "ExpressionStatement",
												"src": "972:34:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 982,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 966,
															"src": "1085:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 981,
														"name": "transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 126,
														"src": "1067:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1067:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 984,
												"nodeType": "ExpressionStatement",
												"src": "1067:31:6"
											}
										]
									},
									"documentation": {
										"id": 964,
										"nodeType": "StructuredDocumentation",
										"src": "650:163:6",
										"text": " @notice Constructor for initializing the token contract\n @param initialOwner The address of the initial owner (usually deployer's address)"
									},
									"id": 986,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5375737461696e6162696c697479546f6b656e",
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "858:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_9cf7fca0678536c8e6f2dcc9b2da4d32f931792370f987f73b53830893613fcc",
														"typeString": "literal_string \"SustainabilityToken\""
													},
													"value": "SustainabilityToken"
												},
												{
													"hexValue": "535553",
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "881:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_f319e0f28fad37b9cb4b6d970f20af564aa1c061d26d913d9190e641aae4956b",
														"typeString": "literal_string \"SUS\""
													},
													"value": "SUS"
												}
											],
											"id": 971,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 968,
												"name": "ERC20",
												"nameLocations": [
													"852:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "852:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "852:35:6"
										},
										{
											"arguments": [
												{
													"id": 973,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 966,
													"src": "895:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 974,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 972,
												"name": "Ownable",
												"nameLocations": [
													"887:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "887:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "887:21:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "838:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "830:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 965,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "830:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "829:22:6"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "909:0:6"
									},
									"scope": 1122,
									"src": "818:287:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1006,
										"nodeType": "Block",
										"src": "1352:158:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 997,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "1368:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 998,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "1372:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 996,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1362:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1362:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1000,
												"nodeType": "ExpressionStatement",
												"src": "1362:17:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1002,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "1457:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1003,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "1461:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1001,
														"name": "TokensMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "1444:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1444:24:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1005,
												"nodeType": "EmitStatement",
												"src": "1439:29:6"
											}
										]
									},
									"documentation": {
										"id": 987,
										"nodeType": "StructuredDocumentation",
										"src": "1111:175:6",
										"text": " @notice Mint new tokens to an address (only owner can mint)\n @param to The address to mint tokens to\n @param amount The amount of tokens to mint"
									},
									"functionSelector": "40c10f19",
									"id": 1007,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 994,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 993,
												"name": "onlyOwner",
												"nameLocations": [
													"1342:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1342:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1342:9:6"
										}
									],
									"name": "mint",
									"nameLocation": "1300:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1313:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "1305:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1305:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1325:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "1317:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1317:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1304:28:6"
									},
									"returnParameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1352:0:6"
									},
									"scope": 1122,
									"src": "1291:219:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1022,
										"nodeType": "Block",
										"src": "1761:90:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1018,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "1777:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1019,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "1783:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1017,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "1771:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1771:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1021,
												"nodeType": "ExpressionStatement",
												"src": "1771:19:6"
											}
										]
									},
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "1516:177:6",
										"text": " @notice Burn tokens from an address (only owner can burn)\n @param from The address to burn tokens from\n @param amount The amount of tokens to burn"
									},
									"functionSelector": "9dc29fac",
									"id": 1023,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1015,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1014,
												"name": "onlyOwner",
												"nameLocations": [
													"1751:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1751:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1751:9:6"
										}
									],
									"name": "burn",
									"nameLocation": "1707:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1720:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "1712:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1712:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1734:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "1726:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1726:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1711:30:6"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1761:0:6"
									},
									"scope": 1122,
									"src": "1698:153:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1048,
										"nodeType": "Block",
										"src": "2141:166:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1034,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "2157:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1035,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "2163:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1033,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "2151:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2151:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1037,
												"nodeType": "ExpressionStatement",
												"src": "2151:19:6"
											},
											{
												"expression": {
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1038,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "2218:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1040,
														"indexExpression": {
															"id": 1039,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "2226:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2218:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1045,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1041,
																"name": "rewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 957,
																"src": "2234:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1043,
															"indexExpression": {
																"id": 1042,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1026,
																"src": "2242:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2234:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1044,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "2250:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2234:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2218:38:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1047,
												"nodeType": "ExpressionStatement",
												"src": "2218:38:6"
											}
										]
									},
									"documentation": {
										"id": 1024,
										"nodeType": "StructuredDocumentation",
										"src": "1857:210:6",
										"text": " @notice Reward a user with tokens for an eco-friendly action (like recycling)\n @param user The address of the user to reward\n @param amount The amount of tokens to reward the user"
									},
									"functionSelector": "e4e103dc",
									"id": 1049,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1031,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1030,
												"name": "onlyOwner",
												"nameLocations": [
													"2131:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2131:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2131:9:6"
										}
									],
									"name": "rewardUser",
									"nameLocation": "2081:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2100:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "2092:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2092:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2114:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "2106:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2106:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2091:30:6"
									},
									"returnParameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2141:0:6"
									},
									"scope": 1122,
									"src": "2072:235:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										409
									],
									"body": {
										"id": 1066,
										"nodeType": "Block",
										"src": "2659:106:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1062,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1052,
															"src": "2691:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1063,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "2695:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1060,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2676:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_TokenContract_$1122_$",
																"typeString": "type(contract super TokenContract)"
															}
														},
														"id": 1061,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2682:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 409,
														"src": "2676:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2676:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1059,
												"id": 1065,
												"nodeType": "Return",
												"src": "2669:33:6"
											}
										]
									},
									"documentation": {
										"id": 1050,
										"nodeType": "StructuredDocumentation",
										"src": "2313:264:6",
										"text": " @notice Transfer tokens from one address to another (inherits from ERC20)\n @param to The address to transfer tokens to\n @param amount The amount of tokens to transfer\n @return success Returns true if the transfer was successful"
									},
									"functionSelector": "a9059cbb",
									"id": 1067,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2591:8:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1056,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2635:8:6"
									},
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2608:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "2600:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1051,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2600:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2620:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "2612:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2599:28:6"
									},
									"returnParameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "2653:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1057,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2653:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:6:6"
									},
									"scope": 1122,
									"src": "2582:183:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										385
									],
									"body": {
										"id": 1081,
										"nodeType": "Block",
										"src": "3044:103:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1078,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1070,
															"src": "3077:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1076,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3061:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_TokenContract_$1122_$",
																"typeString": "type(contract super TokenContract)"
															}
														},
														"id": 1077,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3067:9:6",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 385,
														"src": "3061:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3061:24:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1075,
												"id": 1080,
												"nodeType": "Return",
												"src": "3054:31:6"
											}
										]
									},
									"documentation": {
										"id": 1068,
										"nodeType": "StructuredDocumentation",
										"src": "2771:193:6",
										"text": " @notice Get the balance of tokens for a given address\n @param account The address to check the balance for\n @return balance The token balance of the given address"
									},
									"functionSelector": "70a08231",
									"id": 1082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2978:9:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1072,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3017:8:6"
									},
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2996:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "2988:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1069,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2988:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2987:17:6"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "3035:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3035:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3034:9:6"
									},
									"scope": 1122,
									"src": "2969:178:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										450
									],
									"body": {
										"id": 1099,
										"nodeType": "Block",
										"src": "3509:107:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1095,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "3540:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1096,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "3549:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1093,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3526:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_TokenContract_$1122_$",
																"typeString": "type(contract super TokenContract)"
															}
														},
														"id": 1094,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3532:7:6",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 450,
														"src": "3526:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3526:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1092,
												"id": 1098,
												"nodeType": "Return",
												"src": "3519:37:6"
											}
										]
									},
									"documentation": {
										"id": 1083,
										"nodeType": "StructuredDocumentation",
										"src": "3153:270:6",
										"text": " @notice Approve another address to spend tokens on your behalf\n @param spender The address allowed to spend the tokens\n @param amount The amount of tokens that can be spent\n @return success Returns true if the approval was successful"
									},
									"functionSelector": "095ea7b3",
									"id": 1100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3437:7:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1089,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3485:8:6"
									},
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3453:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "3445:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3445:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3470:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "3462:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3462:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3444:33:6"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "3503:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1090,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3503:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3502:6:6"
									},
									"scope": 1122,
									"src": "3428:188:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										482
									],
									"body": {
										"id": 1120,
										"nodeType": "Block",
										"src": "4020:105:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1115,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "4056:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1116,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1105,
															"src": "4062:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1117,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "4066:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1113,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "4037:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_TokenContract_$1122_$",
																"typeString": "type(contract super TokenContract)"
															}
														},
														"id": 1114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4043:12:6",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 482,
														"src": "4037:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4037:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1112,
												"id": 1119,
												"nodeType": "Return",
												"src": "4030:43:6"
											}
										]
									},
									"documentation": {
										"id": 1101,
										"nodeType": "StructuredDocumentation",
										"src": "3622:298:6",
										"text": " @notice Transfer tokens on behalf of another address\n @param from The address to transfer tokens from\n @param to The address to transfer tokens to\n @param amount The amount of tokens to transfer\n @return success Returns true if the transfer was successful"
									},
									"functionSelector": "23b872dd",
									"id": 1121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3934:12:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1109,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3996:8:6"
									},
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3955:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "3947:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3947:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3969:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "3961:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3961:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3981:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "3973:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3973:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3946:42:6"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "4014:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1110,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4014:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4013:6:6"
									},
									"scope": 1122,
									"src": "3925:200:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1123,
							"src": "168:3959:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820,
								963
							]
						}
					],
					"src": "32:4096:6"
				},
				"id": 6
			}
		}
	}
}