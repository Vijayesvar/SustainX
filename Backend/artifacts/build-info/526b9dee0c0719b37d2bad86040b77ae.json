{
	"id": "526b9dee0c0719b37d2bad86040b77ae",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"Backend/RecyclingRewards.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\ncontract RecyclingRewards is Ownable {\n    using SafeMath for uint256;\n\n    // ERC20 token for rewards\n    IERC20 public rewardToken;\n\n    // Mapping to track recycled products and the rewards issued\n    mapping(uint256 => bool) public recycledProducts;\n    mapping(address => uint256) public userRewards;\n\n    // Recycling reward rate (reward per recycled product)\n    uint256 public rewardPerRecycling;\n\n    // Event emitted when a product is recycled and rewards are issued\n    event ProductRecycled(address indexed user, uint256 indexed tokenId, uint256 rewardAmount);\n\n    /**\n     * @notice Constructor to initialize the contract with the reward token and reward rate\n     * @param _rewardToken Address of the ERC20 reward token contract\n     * @param _rewardPerRecycling The amount of reward given per recycled product\n     * @param initialOwner The address of the initial owner (msg.sender)\n     */\n    constructor(address _rewardToken, uint256 _rewardPerRecycling, address initialOwner) Ownable(initialOwner) {\n        rewardToken = IERC20(_rewardToken);\n        rewardPerRecycling = _rewardPerRecycling;\n    }\n\n    /**\n     * @notice Recycle a product and earn rewards\n     * @param tokenId The ID of the product NFT that is being recycled\n     * @param nftContract The address of the NFT contract representing the product\n     */\n    function recycleProduct(uint256 tokenId, address nftContract) external {\n        IERC721 nft = IERC721(nftContract);\n\n        // Ensure the product is owned by the caller and hasn't been recycled already\n        require(nft.ownerOf(tokenId) == msg.sender, \"You must own the product to recycle it\");\n        require(!recycledProducts[tokenId], \"This product has already been recycled\");\n\n        // Mark the product as recycled\n        recycledProducts[tokenId] = true;\n\n        // Issue rewards to the user (transfer reward tokens)\n        userRewards[msg.sender] = userRewards[msg.sender].add(rewardPerRecycling);\n        rewardToken.transfer(msg.sender, rewardPerRecycling);\n\n        emit ProductRecycled(msg.sender, tokenId, rewardPerRecycling);\n    }\n\n    /**\n     * @notice Update the reward rate for recycling products\n     * @param newRewardRate The new amount of reward given per recycled product\n     */\n    function updateRewardRate(uint256 newRewardRate) external onlyOwner {\n        rewardPerRecycling = newRewardRate;\n    }\n\n    /**\n     * @notice Withdraw the rewards accumulated by a user\n     */\n    function withdrawRewards() external {\n        uint256 amount = userRewards[msg.sender];\n        require(amount > 0, \"No rewards available\");\n\n        // Reset user rewards and transfer the tokens\n        userRewards[msg.sender] = 0;\n        rewardToken.transfer(msg.sender, amount);\n    }\n\n    /**\n     * @notice Get the current reward rate for recycling\n     * @return The reward rate per recycled product\n     */\n    function getRewardRate() external view returns (uint256) {\n        return rewardPerRecycling;\n    }\n\n    /**\n     * @notice Get the accumulated rewards for a user\n     * @param user The address of the user\n     * @return The total accumulated rewards for the user\n     */\n    function getUserRewards(address user) external view returns (uint256) {\n        return userRewards[user];\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC-721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202b68bac1390ffe9568f4cc7c4182027c60f92a0d5715aaaf3408209bffaf16ec64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202b68bac1390ffe9568f4cc7c4182027c60f92a0d5715aaaf3408209bffaf16ec64736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B PUSH9 0xBAC1390FFE9568F4CC PUSH29 0x4182027C60F92A0D5715AAAF3408209BFFAF16EC64736F6C6343000818 STOP CALLER ",
							"sourceMap": "482:6210:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202b68bac1390ffe9568f4cc7c4182027c60f92a0d5715aaaf3408209bffaf16ec64736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B PUSH9 0xBAC1390FFE9568F4CC PUSH29 0x4182027C60F92A0D5715AAAF3408209BFFAF16EC64736F6C6343000818 STOP CALLER ",
							"sourceMap": "482:6210:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202b68bac1390ffe9568f4cc7c4182027c60f92a0d5715aaaf3408209bffaf16ec64736f6c63430008180033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Backend/RecyclingRewards.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Backend/RecyclingRewards.sol": {
				"RecyclingRewards": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_rewardToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_rewardPerRecycling",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardAmount",
									"type": "uint256"
								}
							],
							"name": "ProductRecycled",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "getRewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "nftContract",
									"type": "address"
								}
							],
							"name": "recycleProduct",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "recycledProducts",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerRecycling",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newRewardRate",
									"type": "uint256"
								}
							],
							"name": "updateRewardRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"params": {
									"_rewardPerRecycling": "The amount of reward given per recycled product",
									"_rewardToken": "Address of the ERC20 reward token contract",
									"initialOwner": "The address of the initial owner (msg.sender)"
								}
							},
							"getRewardRate()": {
								"returns": {
									"_0": "The reward rate per recycled product"
								}
							},
							"getUserRewards(address)": {
								"params": {
									"user": "The address of the user"
								},
								"returns": {
									"_0": "The total accumulated rewards for the user"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"recycleProduct(uint256,address)": {
								"params": {
									"nftContract": "The address of the NFT contract representing the product",
									"tokenId": "The ID of the product NFT that is being recycled"
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"updateRewardRate(uint256)": {
								"params": {
									"newRewardRate": "The new amount of reward given per recycled product"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Backend/RecyclingRewards.sol\":286:3555  contract RecyclingRewards is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"Backend/RecyclingRewards.sol\":1197:1405  constructor(address _rewardToken, uint256 _rewardPerRecycling, address initialOwner) Ownable(initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Backend/RecyclingRewards.sol\":1290:1302  initialOwner */\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"Backend/RecyclingRewards.sol\":1335:1347  _rewardToken */\n  dup3\n    /* \"Backend/RecyclingRewards.sol\":1314:1325  rewardToken */\n  0x01\n  0x00\n    /* \"Backend/RecyclingRewards.sol\":1314:1348  rewardToken = IERC20(_rewardToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Backend/RecyclingRewards.sol\":1379:1398  _rewardPerRecycling */\n  dup2\n    /* \"Backend/RecyclingRewards.sol\":1358:1376  rewardPerRecycling */\n  0x04\n    /* \"Backend/RecyclingRewards.sol\":1358:1398  rewardPerRecycling = _rewardPerRecycling */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Backend/RecyclingRewards.sol\":1197:1405  constructor(address _rewardToken, uint256 _rewardPerRecycling, address initialOwner) Ownable(initialOwner) {... */\n  pop\n  pop\n  pop\n    /* \"Backend/RecyclingRewards.sol\":286:3555  contract RecyclingRewards is Ownable {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_32\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_20:\n    /* \"#utility.yul\":641:665   */\n  tag_34\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_19\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_35:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_21:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_37\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_20\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_22:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_23:\n    /* \"#utility.yul\":1001:1025   */\n  tag_40\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_22\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_41:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_24:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_43\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_23\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1868   */\ntag_3:\n    /* \"#utility.yul\":1293:1299   */\n  0x00\n    /* \"#utility.yul\":1301:1307   */\n  dup1\n    /* \"#utility.yul\":1309:1315   */\n  0x00\n    /* \"#utility.yul\":1358:1360   */\n  0x60\n    /* \"#utility.yul\":1346:1355   */\n  dup5\n    /* \"#utility.yul\":1337:1344   */\n  dup7\n    /* \"#utility.yul\":1333:1356   */\n  sub\n    /* \"#utility.yul\":1329:1361   */\n  slt\n    /* \"#utility.yul\":1326:1445   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1364:1443   */\n  tag_46\n  tag_16\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1326:1445   */\ntag_45:\n    /* \"#utility.yul\":1484:1485   */\n  0x00\n    /* \"#utility.yul\":1509:1573   */\n  tag_47\n    /* \"#utility.yul\":1565:1572   */\n  dup7\n    /* \"#utility.yul\":1556:1562   */\n  dup3\n    /* \"#utility.yul\":1545:1554   */\n  dup8\n    /* \"#utility.yul\":1541:1563   */\n  add\n    /* \"#utility.yul\":1509:1573   */\n  tag_21\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1499:1573   */\n  swap4\n  pop\n    /* \"#utility.yul\":1455:1583   */\n  pop\n    /* \"#utility.yul\":1622:1624   */\n  0x20\n    /* \"#utility.yul\":1648:1712   */\n  tag_48\n    /* \"#utility.yul\":1704:1711   */\n  dup7\n    /* \"#utility.yul\":1695:1701   */\n  dup3\n    /* \"#utility.yul\":1684:1693   */\n  dup8\n    /* \"#utility.yul\":1680:1702   */\n  add\n    /* \"#utility.yul\":1648:1712   */\n  tag_24\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1638:1712   */\n  swap3\n  pop\n    /* \"#utility.yul\":1593:1722   */\n  pop\n    /* \"#utility.yul\":1761:1763   */\n  0x40\n    /* \"#utility.yul\":1787:1851   */\n  tag_49\n    /* \"#utility.yul\":1843:1850   */\n  dup7\n    /* \"#utility.yul\":1834:1840   */\n  dup3\n    /* \"#utility.yul\":1823:1832   */\n  dup8\n    /* \"#utility.yul\":1819:1841   */\n  add\n    /* \"#utility.yul\":1787:1851   */\n  tag_21\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1777:1851   */\n  swap2\n  pop\n    /* \"#utility.yul\":1732:1861   */\n  pop\n    /* \"#utility.yul\":1205:1868   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1874:1992   */\ntag_25:\n    /* \"#utility.yul\":1961:1985   */\n  tag_51\n    /* \"#utility.yul\":1979:1984   */\n  dup2\n    /* \"#utility.yul\":1961:1985   */\n  tag_19\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1956:1959   */\n  dup3\n    /* \"#utility.yul\":1949:1986   */\n  mstore\n    /* \"#utility.yul\":1874:1992   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1998:2220   */\ntag_9:\n    /* \"#utility.yul\":2091:2095   */\n  0x00\n    /* \"#utility.yul\":2129:2131   */\n  0x20\n    /* \"#utility.yul\":2118:2127   */\n  dup3\n    /* \"#utility.yul\":2114:2132   */\n  add\n    /* \"#utility.yul\":2106:2132   */\n  swap1\n  pop\n    /* \"#utility.yul\":2142:2213   */\n  tag_53\n    /* \"#utility.yul\":2210:2211   */\n  0x00\n    /* \"#utility.yul\":2199:2208   */\n  dup4\n    /* \"#utility.yul\":2195:2212   */\n  add\n    /* \"#utility.yul\":2186:2192   */\n  dup5\n    /* \"#utility.yul\":2142:2213   */\n  tag_25\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1998:2220   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Backend/RecyclingRewards.sol\":286:3555  contract RecyclingRewards is Ownable {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Backend/RecyclingRewards.sol\":286:3555  contract RecyclingRewards is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7e1a3786\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x7e1a3786\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x9ef3a261\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xc7b8981c\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf7c618c1\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x0660f1e8\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x078b0fb7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3f608ad2\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x44301c13\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x45e1d960\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Backend/RecyclingRewards.sol\":544:590  mapping(address => uint256) public userRewards */\n    tag_3:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Backend/RecyclingRewards.sol\":3442:3553  function getUserRewards(address user) external view returns (uint256) {... */\n    tag_4:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_23:\n      tag_24\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Backend/RecyclingRewards.sol\":490:538  mapping(uint256 => bool) public recycledProducts */\n    tag_5:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Backend/RecyclingRewards.sol\":1631:2385  function recycleProduct(uint256 tokenId, address nftContract) external {... */\n    tag_6:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      stop\n        /* \"Backend/RecyclingRewards.sol\":656:689  uint256 public rewardPerRecycling */\n    tag_7:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      stop\n        /* \"Backend/RecyclingRewards.sol\":3166:3265  function getRewardRate() external view returns (uint256) {... */\n    tag_9:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_10:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Backend/RecyclingRewards.sol\":2548:2667  function updateRewardRate(uint256 newRewardRate) external onlyOwner {... */\n    tag_11:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      stop\n        /* \"Backend/RecyclingRewards.sol\":2747:3035  function withdrawRewards() external {... */\n    tag_12:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_13:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"Backend/RecyclingRewards.sol\":393:418  IERC20 public rewardToken */\n    tag_14:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Backend/RecyclingRewards.sol\":544:590  mapping(address => uint256) public userRewards */\n    tag_19:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"Backend/RecyclingRewards.sol\":3442:3553  function getUserRewards(address user) external view returns (uint256) {... */\n    tag_24:\n        /* \"Backend/RecyclingRewards.sol\":3503:3510  uint256 */\n      0x00\n        /* \"Backend/RecyclingRewards.sol\":3529:3540  userRewards */\n      0x03\n        /* \"Backend/RecyclingRewards.sol\":3529:3546  userRewards[user] */\n      0x00\n        /* \"Backend/RecyclingRewards.sol\":3541:3545  user */\n      dup4\n        /* \"Backend/RecyclingRewards.sol\":3529:3546  userRewards[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Backend/RecyclingRewards.sol\":3522:3546  return userRewards[user] */\n      swap1\n      pop\n        /* \"Backend/RecyclingRewards.sol\":3442:3553  function getUserRewards(address user) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Backend/RecyclingRewards.sol\":490:538  mapping(uint256 => bool) public recycledProducts */\n    tag_29:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"Backend/RecyclingRewards.sol\":1631:2385  function recycleProduct(uint256 tokenId, address nftContract) external {... */\n    tag_35:\n        /* \"Backend/RecyclingRewards.sol\":1712:1723  IERC721 nft */\n      0x00\n        /* \"Backend/RecyclingRewards.sol\":1734:1745  nftContract */\n      dup2\n        /* \"Backend/RecyclingRewards.sol\":1712:1746  IERC721 nft = IERC721(nftContract) */\n      swap1\n      pop\n        /* \"Backend/RecyclingRewards.sol\":1875:1885  msg.sender */\n      caller\n        /* \"Backend/RecyclingRewards.sol\":1851:1885  nft.ownerOf(tokenId) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Backend/RecyclingRewards.sol\":1851:1854  nft */\n      dup2\n        /* \"Backend/RecyclingRewards.sol\":1851:1862  nft.ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"Backend/RecyclingRewards.sol\":1863:1870  tokenId */\n      dup6\n        /* \"Backend/RecyclingRewards.sol\":1851:1871  nft.ownerOf(tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_62\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_62:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_64\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_64:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n        /* \"Backend/RecyclingRewards.sol\":1851:1885  nft.ownerOf(tokenId) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Backend/RecyclingRewards.sol\":1843:1928  require(nft.ownerOf(tokenId) == msg.sender, \"You must own the product to recycle it\") */\n      tag_67\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_67:\n        /* \"Backend/RecyclingRewards.sol\":1947:1963  recycledProducts */\n      0x02\n        /* \"Backend/RecyclingRewards.sol\":1947:1972  recycledProducts[tokenId] */\n      0x00\n        /* \"Backend/RecyclingRewards.sol\":1964:1971  tokenId */\n      dup5\n        /* \"Backend/RecyclingRewards.sol\":1947:1972  recycledProducts[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Backend/RecyclingRewards.sol\":1946:1972  !recycledProducts[tokenId] */\n      iszero\n        /* \"Backend/RecyclingRewards.sol\":1938:2015  require(!recycledProducts[tokenId], \"This product has already been recycled\") */\n      tag_70\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_71\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_70:\n        /* \"Backend/RecyclingRewards.sol\":2094:2098  true */\n      0x01\n        /* \"Backend/RecyclingRewards.sol\":2066:2082  recycledProducts */\n      0x02\n        /* \"Backend/RecyclingRewards.sol\":2066:2091  recycledProducts[tokenId] */\n      0x00\n        /* \"Backend/RecyclingRewards.sol\":2083:2090  tokenId */\n      dup6\n        /* \"Backend/RecyclingRewards.sol\":2066:2091  recycledProducts[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Backend/RecyclingRewards.sol\":2066:2098  recycledProducts[tokenId] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Backend/RecyclingRewards.sol\":2197:2244  userRewards[msg.sender].add(rewardPerRecycling) */\n      tag_73\n        /* \"Backend/RecyclingRewards.sol\":2225:2243  rewardPerRecycling */\n      sload(0x04)\n        /* \"Backend/RecyclingRewards.sol\":2197:2208  userRewards */\n      0x03\n        /* \"Backend/RecyclingRewards.sol\":2197:2220  userRewards[msg.sender] */\n      0x00\n        /* \"Backend/RecyclingRewards.sol\":2209:2219  msg.sender */\n      caller\n        /* \"Backend/RecyclingRewards.sol\":2197:2220  userRewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Backend/RecyclingRewards.sol\":2197:2224  userRewards[msg.sender].add */\n      tag_74\n      swap1\n        /* \"Backend/RecyclingRewards.sol\":2197:2244  userRewards[msg.sender].add(rewardPerRecycling) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_73:\n        /* \"Backend/RecyclingRewards.sol\":2171:2182  userRewards */\n      0x03\n        /* \"Backend/RecyclingRewards.sol\":2171:2194  userRewards[msg.sender] */\n      0x00\n        /* \"Backend/RecyclingRewards.sol\":2183:2193  msg.sender */\n      caller\n        /* \"Backend/RecyclingRewards.sol\":2171:2194  userRewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Backend/RecyclingRewards.sol\":2171:2244  userRewards[msg.sender] = userRewards[msg.sender].add(rewardPerRecycling) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Backend/RecyclingRewards.sol\":2254:2265  rewardToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Backend/RecyclingRewards.sol\":2254:2274  rewardToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"Backend/RecyclingRewards.sol\":2275:2285  msg.sender */\n      caller\n        /* \"Backend/RecyclingRewards.sol\":2287:2305  rewardPerRecycling */\n      sload(0x04)\n        /* \"Backend/RecyclingRewards.sol\":2254:2306  rewardToken.transfer(msg.sender, rewardPerRecycling) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap3\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_78\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_78:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      pop\n        /* \"Backend/RecyclingRewards.sol\":2350:2357  tokenId */\n      dup3\n        /* \"Backend/RecyclingRewards.sol\":2338:2348  msg.sender */\n      caller\n        /* \"Backend/RecyclingRewards.sol\":2322:2378  ProductRecycled(msg.sender, tokenId, rewardPerRecycling) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x080ac4523930bdcc2e85ca0a99da6547ba0d4c3badb2a3693f781d80aa4863dc\n        /* \"Backend/RecyclingRewards.sol\":2359:2377  rewardPerRecycling */\n      sload(0x04)\n        /* \"Backend/RecyclingRewards.sol\":2322:2378  ProductRecycled(msg.sender, tokenId, rewardPerRecycling) */\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Backend/RecyclingRewards.sol\":1702:2385  {... */\n      pop\n        /* \"Backend/RecyclingRewards.sol\":1631:2385  function recycleProduct(uint256 tokenId, address nftContract) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Backend/RecyclingRewards.sol\":656:689  uint256 public rewardPerRecycling */\n    tag_37:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_84\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_86\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Backend/RecyclingRewards.sol\":3166:3265  function getRewardRate() external view returns (uint256) {... */\n    tag_42:\n        /* \"Backend/RecyclingRewards.sol\":3214:3221  uint256 */\n      0x00\n        /* \"Backend/RecyclingRewards.sol\":3240:3258  rewardPerRecycling */\n      sload(0x04)\n        /* \"Backend/RecyclingRewards.sol\":3233:3258  return rewardPerRecycling */\n      swap1\n      pop\n        /* \"Backend/RecyclingRewards.sol\":3166:3265  function getRewardRate() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Backend/RecyclingRewards.sol\":2548:2667  function updateRewardRate(uint256 newRewardRate) external onlyOwner {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_84\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_91:\n        /* \"Backend/RecyclingRewards.sol\":2647:2660  newRewardRate */\n      dup1\n        /* \"Backend/RecyclingRewards.sol\":2626:2644  rewardPerRecycling */\n      0x04\n        /* \"Backend/RecyclingRewards.sol\":2626:2660  rewardPerRecycling = newRewardRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Backend/RecyclingRewards.sol\":2548:2667  function updateRewardRate(uint256 newRewardRate) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Backend/RecyclingRewards.sol\":2747:3035  function withdrawRewards() external {... */\n    tag_52:\n        /* \"Backend/RecyclingRewards.sol\":2793:2807  uint256 amount */\n      0x00\n        /* \"Backend/RecyclingRewards.sol\":2810:2821  userRewards */\n      0x03\n        /* \"Backend/RecyclingRewards.sol\":2810:2833  userRewards[msg.sender] */\n      0x00\n        /* \"Backend/RecyclingRewards.sol\":2822:2832  msg.sender */\n      caller\n        /* \"Backend/RecyclingRewards.sol\":2810:2833  userRewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Backend/RecyclingRewards.sol\":2793:2833  uint256 amount = userRewards[msg.sender] */\n      swap1\n      pop\n        /* \"Backend/RecyclingRewards.sol\":2860:2861  0 */\n      0x00\n        /* \"Backend/RecyclingRewards.sol\":2851:2857  amount */\n      dup2\n        /* \"Backend/RecyclingRewards.sol\":2851:2861  amount > 0 */\n      gt\n        /* \"Backend/RecyclingRewards.sol\":2843:2886  require(amount > 0, \"No rewards available\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_95\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n        /* \"Backend/RecyclingRewards.sol\":2977:2978  0 */\n      0x00\n        /* \"Backend/RecyclingRewards.sol\":2951:2962  userRewards */\n      0x03\n        /* \"Backend/RecyclingRewards.sol\":2951:2974  userRewards[msg.sender] */\n      0x00\n        /* \"Backend/RecyclingRewards.sol\":2963:2973  msg.sender */\n      caller\n        /* \"Backend/RecyclingRewards.sol\":2951:2974  userRewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Backend/RecyclingRewards.sol\":2951:2978  userRewards[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Backend/RecyclingRewards.sol\":2988:2999  rewardToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Backend/RecyclingRewards.sol\":2988:3008  rewardToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"Backend/RecyclingRewards.sol\":3009:3019  msg.sender */\n      caller\n        /* \"Backend/RecyclingRewards.sol\":3021:3027  amount */\n      dup4\n        /* \"Backend/RecyclingRewards.sol\":2988:3028  rewardToken.transfer(msg.sender, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap3\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_97:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_99\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_99:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_100:\n      pop\n        /* \"Backend/RecyclingRewards.sol\":2783:3035  {... */\n      pop\n        /* \"Backend/RecyclingRewards.sol\":2747:3035  function withdrawRewards() external {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_102\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_84\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_104\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_106\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Backend/RecyclingRewards.sol\":393:418  IERC20 public rewardToken */\n    tag_57:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_108\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_111\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_45\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_114\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_115\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_115:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_120:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_122:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_123:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_155\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_122\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_124:\n        /* \"#utility.yul\":641:665   */\n      tag_157\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_123\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_158\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_158:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_125:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_160\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_124\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_18:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_163\n      tag_120\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":917:1036   */\n    tag_162:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_164\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_125\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_126:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_127:\n        /* \"#utility.yul\":1346:1370   */\n      tag_167\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_126\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_21:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_169\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_127\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_128:\n        /* \"#utility.yul\":1684:1708   */\n      tag_171\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_126\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_172\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      dup1\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_172:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_129:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_174\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_128\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2213   */\n    tag_28:\n        /* \"#utility.yul\":1943:1949   */\n      0x00\n        /* \"#utility.yul\":1992:1994   */\n      0x20\n        /* \"#utility.yul\":1980:1989   */\n      dup3\n        /* \"#utility.yul\":1971:1978   */\n      dup5\n        /* \"#utility.yul\":1967:1990   */\n      sub\n        /* \"#utility.yul\":1963:1995   */\n      slt\n        /* \"#utility.yul\":1960:2079   */\n      iszero\n      tag_176\n      jumpi\n        /* \"#utility.yul\":1998:2077   */\n      tag_177\n      tag_120\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":1960:2079   */\n    tag_176:\n        /* \"#utility.yul\":2118:2119   */\n      0x00\n        /* \"#utility.yul\":2143:2196   */\n      tag_178\n        /* \"#utility.yul\":2188:2195   */\n      dup5\n        /* \"#utility.yul\":2179:2185   */\n      dup3\n        /* \"#utility.yul\":2168:2177   */\n      dup6\n        /* \"#utility.yul\":2164:2186   */\n      add\n        /* \"#utility.yul\":2143:2196   */\n      tag_129\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":2133:2196   */\n      swap2\n      pop\n        /* \"#utility.yul\":2089:2206   */\n      pop\n        /* \"#utility.yul\":1884:2213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2309   */\n    tag_130:\n        /* \"#utility.yul\":2253:2260   */\n      0x00\n        /* \"#utility.yul\":2296:2301   */\n      dup2\n        /* \"#utility.yul\":2289:2302   */\n      iszero\n        /* \"#utility.yul\":2282:2303   */\n      iszero\n        /* \"#utility.yul\":2271:2303   */\n      swap1\n      pop\n        /* \"#utility.yul\":2219:2309   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2315:2424   */\n    tag_131:\n        /* \"#utility.yul\":2396:2417   */\n      tag_181\n        /* \"#utility.yul\":2411:2416   */\n      dup2\n        /* \"#utility.yul\":2396:2417   */\n      tag_130\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":2391:2394   */\n      dup3\n        /* \"#utility.yul\":2384:2418   */\n      mstore\n        /* \"#utility.yul\":2315:2424   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2430:2640   */\n    tag_31:\n        /* \"#utility.yul\":2517:2521   */\n      0x00\n        /* \"#utility.yul\":2555:2557   */\n      0x20\n        /* \"#utility.yul\":2544:2553   */\n      dup3\n        /* \"#utility.yul\":2540:2558   */\n      add\n        /* \"#utility.yul\":2532:2558   */\n      swap1\n      pop\n        /* \"#utility.yul\":2568:2633   */\n      tag_183\n        /* \"#utility.yul\":2630:2631   */\n      0x00\n        /* \"#utility.yul\":2619:2628   */\n      dup4\n        /* \"#utility.yul\":2615:2632   */\n      add\n        /* \"#utility.yul\":2606:2612   */\n      dup5\n        /* \"#utility.yul\":2568:2633   */\n      tag_131\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":2430:2640   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2646:3120   */\n    tag_34:\n        /* \"#utility.yul\":2714:2720   */\n      0x00\n        /* \"#utility.yul\":2722:2728   */\n      dup1\n        /* \"#utility.yul\":2771:2773   */\n      0x40\n        /* \"#utility.yul\":2759:2768   */\n      dup4\n        /* \"#utility.yul\":2750:2757   */\n      dup6\n        /* \"#utility.yul\":2746:2769   */\n      sub\n        /* \"#utility.yul\":2742:2774   */\n      slt\n        /* \"#utility.yul\":2739:2858   */\n      iszero\n      tag_185\n      jumpi\n        /* \"#utility.yul\":2777:2856   */\n      tag_186\n      tag_120\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":2739:2858   */\n    tag_185:\n        /* \"#utility.yul\":2897:2898   */\n      0x00\n        /* \"#utility.yul\":2922:2975   */\n      tag_187\n        /* \"#utility.yul\":2967:2974   */\n      dup6\n        /* \"#utility.yul\":2958:2964   */\n      dup3\n        /* \"#utility.yul\":2947:2956   */\n      dup7\n        /* \"#utility.yul\":2943:2965   */\n      add\n        /* \"#utility.yul\":2922:2975   */\n      tag_129\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":2912:2975   */\n      swap3\n      pop\n        /* \"#utility.yul\":2868:2985   */\n      pop\n        /* \"#utility.yul\":3024:3026   */\n      0x20\n        /* \"#utility.yul\":3050:3103   */\n      tag_188\n        /* \"#utility.yul\":3095:3102   */\n      dup6\n        /* \"#utility.yul\":3086:3092   */\n      dup3\n        /* \"#utility.yul\":3075:3084   */\n      dup7\n        /* \"#utility.yul\":3071:3093   */\n      add\n        /* \"#utility.yul\":3050:3103   */\n      tag_125\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":3040:3103   */\n      swap2\n      pop\n        /* \"#utility.yul\":2995:3113   */\n      pop\n        /* \"#utility.yul\":2646:3120   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3126:3244   */\n    tag_132:\n        /* \"#utility.yul\":3213:3237   */\n      tag_190\n        /* \"#utility.yul\":3231:3236   */\n      dup2\n        /* \"#utility.yul\":3213:3237   */\n      tag_123\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":3208:3211   */\n      dup3\n        /* \"#utility.yul\":3201:3238   */\n      mstore\n        /* \"#utility.yul\":3126:3244   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3250:3472   */\n    tag_47:\n        /* \"#utility.yul\":3343:3347   */\n      0x00\n        /* \"#utility.yul\":3381:3383   */\n      0x20\n        /* \"#utility.yul\":3370:3379   */\n      dup3\n        /* \"#utility.yul\":3366:3384   */\n      add\n        /* \"#utility.yul\":3358:3384   */\n      swap1\n      pop\n        /* \"#utility.yul\":3394:3465   */\n      tag_192\n        /* \"#utility.yul\":3462:3463   */\n      0x00\n        /* \"#utility.yul\":3451:3460   */\n      dup4\n        /* \"#utility.yul\":3447:3464   */\n      add\n        /* \"#utility.yul\":3438:3444   */\n      dup5\n        /* \"#utility.yul\":3394:3465   */\n      tag_132\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":3250:3472   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3478:3538   */\n    tag_133:\n        /* \"#utility.yul\":3506:3509   */\n      0x00\n        /* \"#utility.yul\":3527:3532   */\n      dup2\n        /* \"#utility.yul\":3520:3532   */\n      swap1\n      pop\n        /* \"#utility.yul\":3478:3538   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3544:3686   */\n    tag_134:\n        /* \"#utility.yul\":3594:3603   */\n      0x00\n        /* \"#utility.yul\":3627:3680   */\n      tag_195\n        /* \"#utility.yul\":3645:3679   */\n      tag_196\n        /* \"#utility.yul\":3654:3678   */\n      tag_197\n        /* \"#utility.yul\":3672:3677   */\n      dup5\n        /* \"#utility.yul\":3654:3678   */\n      tag_122\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":3645:3679   */\n      tag_133\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":3627:3680   */\n      tag_122\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":3614:3680   */\n      swap1\n      pop\n        /* \"#utility.yul\":3544:3686   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3692:3818   */\n    tag_135:\n        /* \"#utility.yul\":3742:3751   */\n      0x00\n        /* \"#utility.yul\":3775:3812   */\n      tag_199\n        /* \"#utility.yul\":3806:3811   */\n      dup3\n        /* \"#utility.yul\":3775:3812   */\n      tag_134\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":3762:3812   */\n      swap1\n      pop\n        /* \"#utility.yul\":3692:3818   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3824:3964   */\n    tag_136:\n        /* \"#utility.yul\":3888:3897   */\n      0x00\n        /* \"#utility.yul\":3921:3958   */\n      tag_201\n        /* \"#utility.yul\":3952:3957   */\n      dup3\n        /* \"#utility.yul\":3921:3958   */\n      tag_135\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":3908:3958   */\n      swap1\n      pop\n        /* \"#utility.yul\":3824:3964   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3970:4129   */\n    tag_137:\n        /* \"#utility.yul\":4071:4122   */\n      tag_203\n        /* \"#utility.yul\":4116:4121   */\n      dup2\n        /* \"#utility.yul\":4071:4122   */\n      tag_136\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":4066:4069   */\n      dup3\n        /* \"#utility.yul\":4059:4123   */\n      mstore\n        /* \"#utility.yul\":3970:4129   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4135:4385   */\n    tag_59:\n        /* \"#utility.yul\":4242:4246   */\n      0x00\n        /* \"#utility.yul\":4280:4282   */\n      0x20\n        /* \"#utility.yul\":4269:4278   */\n      dup3\n        /* \"#utility.yul\":4265:4283   */\n      add\n        /* \"#utility.yul\":4257:4283   */\n      swap1\n      pop\n        /* \"#utility.yul\":4293:4378   */\n      tag_205\n        /* \"#utility.yul\":4375:4376   */\n      0x00\n        /* \"#utility.yul\":4364:4373   */\n      dup4\n        /* \"#utility.yul\":4360:4377   */\n      add\n        /* \"#utility.yul\":4351:4357   */\n      dup5\n        /* \"#utility.yul\":4293:4378   */\n      tag_137\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":4135:4385   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4391:4534   */\n    tag_138:\n        /* \"#utility.yul\":4448:4453   */\n      0x00\n        /* \"#utility.yul\":4479:4485   */\n      dup2\n        /* \"#utility.yul\":4473:4486   */\n      mload\n        /* \"#utility.yul\":4464:4486   */\n      swap1\n      pop\n        /* \"#utility.yul\":4495:4528   */\n      tag_207\n        /* \"#utility.yul\":4522:4527   */\n      dup2\n        /* \"#utility.yul\":4495:4528   */\n      tag_124\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":4391:4534   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4540:4891   */\n    tag_66:\n        /* \"#utility.yul\":4610:4616   */\n      0x00\n        /* \"#utility.yul\":4659:4661   */\n      0x20\n        /* \"#utility.yul\":4647:4656   */\n      dup3\n        /* \"#utility.yul\":4638:4645   */\n      dup5\n        /* \"#utility.yul\":4634:4657   */\n      sub\n        /* \"#utility.yul\":4630:4662   */\n      slt\n        /* \"#utility.yul\":4627:4746   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":4665:4744   */\n      tag_210\n      tag_120\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":4627:4746   */\n    tag_209:\n        /* \"#utility.yul\":4785:4786   */\n      0x00\n        /* \"#utility.yul\":4810:4874   */\n      tag_211\n        /* \"#utility.yul\":4866:4873   */\n      dup5\n        /* \"#utility.yul\":4857:4863   */\n      dup3\n        /* \"#utility.yul\":4846:4855   */\n      dup6\n        /* \"#utility.yul\":4842:4864   */\n      add\n        /* \"#utility.yul\":4810:4874   */\n      tag_138\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":4800:4874   */\n      swap2\n      pop\n        /* \"#utility.yul\":4756:4884   */\n      pop\n        /* \"#utility.yul\":4540:4891   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4897:5066   */\n    tag_139:\n        /* \"#utility.yul\":4981:4992   */\n      0x00\n        /* \"#utility.yul\":5015:5021   */\n      dup3\n        /* \"#utility.yul\":5010:5013   */\n      dup3\n        /* \"#utility.yul\":5003:5022   */\n      mstore\n        /* \"#utility.yul\":5055:5059   */\n      0x20\n        /* \"#utility.yul\":5050:5053   */\n      dup3\n        /* \"#utility.yul\":5046:5060   */\n      add\n        /* \"#utility.yul\":5031:5060   */\n      swap1\n      pop\n        /* \"#utility.yul\":4897:5066   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5072:5297   */\n    tag_140:\n        /* \"#utility.yul\":5212:5246   */\n      0x596f75206d757374206f776e207468652070726f6475637420746f2072656379\n        /* \"#utility.yul\":5208:5209   */\n      0x00\n        /* \"#utility.yul\":5200:5206   */\n      dup3\n        /* \"#utility.yul\":5196:5210   */\n      add\n        /* \"#utility.yul\":5189:5247   */\n      mstore\n        /* \"#utility.yul\":5281:5289   */\n      0x636c652069740000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5276:5278   */\n      0x20\n        /* \"#utility.yul\":5268:5274   */\n      dup3\n        /* \"#utility.yul\":5264:5279   */\n      add\n        /* \"#utility.yul\":5257:5290   */\n      mstore\n        /* \"#utility.yul\":5072:5297   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5303:5669   */\n    tag_141:\n        /* \"#utility.yul\":5445:5448   */\n      0x00\n        /* \"#utility.yul\":5466:5533   */\n      tag_215\n        /* \"#utility.yul\":5530:5532   */\n      0x26\n        /* \"#utility.yul\":5525:5528   */\n      dup4\n        /* \"#utility.yul\":5466:5533   */\n      tag_139\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":5459:5533   */\n      swap2\n      pop\n        /* \"#utility.yul\":5542:5635   */\n      tag_216\n        /* \"#utility.yul\":5631:5634   */\n      dup3\n        /* \"#utility.yul\":5542:5635   */\n      tag_140\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":5660:5662   */\n      0x40\n        /* \"#utility.yul\":5655:5658   */\n      dup3\n        /* \"#utility.yul\":5651:5663   */\n      add\n        /* \"#utility.yul\":5644:5663   */\n      swap1\n      pop\n        /* \"#utility.yul\":5303:5669   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5675:6094   */\n    tag_69:\n        /* \"#utility.yul\":5841:5845   */\n      0x00\n        /* \"#utility.yul\":5879:5881   */\n      0x20\n        /* \"#utility.yul\":5868:5877   */\n      dup3\n        /* \"#utility.yul\":5864:5882   */\n      add\n        /* \"#utility.yul\":5856:5882   */\n      swap1\n      pop\n        /* \"#utility.yul\":5928:5937   */\n      dup2\n        /* \"#utility.yul\":5922:5926   */\n      dup2\n        /* \"#utility.yul\":5918:5938   */\n      sub\n        /* \"#utility.yul\":5914:5915   */\n      0x00\n        /* \"#utility.yul\":5903:5912   */\n      dup4\n        /* \"#utility.yul\":5899:5916   */\n      add\n        /* \"#utility.yul\":5892:5939   */\n      mstore\n        /* \"#utility.yul\":5956:6087   */\n      tag_218\n        /* \"#utility.yul\":6082:6086   */\n      dup2\n        /* \"#utility.yul\":5956:6087   */\n      tag_141\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":5948:6087   */\n      swap1\n      pop\n        /* \"#utility.yul\":5675:6094   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6100:6325   */\n    tag_142:\n        /* \"#utility.yul\":6240:6274   */\n      0x546869732070726f647563742068617320616c7265616479206265656e207265\n        /* \"#utility.yul\":6236:6237   */\n      0x00\n        /* \"#utility.yul\":6228:6234   */\n      dup3\n        /* \"#utility.yul\":6224:6238   */\n      add\n        /* \"#utility.yul\":6217:6275   */\n      mstore\n        /* \"#utility.yul\":6309:6317   */\n      0x6379636c65640000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6304:6306   */\n      0x20\n        /* \"#utility.yul\":6296:6302   */\n      dup3\n        /* \"#utility.yul\":6292:6307   */\n      add\n        /* \"#utility.yul\":6285:6318   */\n      mstore\n        /* \"#utility.yul\":6100:6325   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6331:6697   */\n    tag_143:\n        /* \"#utility.yul\":6473:6476   */\n      0x00\n        /* \"#utility.yul\":6494:6561   */\n      tag_221\n        /* \"#utility.yul\":6558:6560   */\n      0x26\n        /* \"#utility.yul\":6553:6556   */\n      dup4\n        /* \"#utility.yul\":6494:6561   */\n      tag_139\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":6487:6561   */\n      swap2\n      pop\n        /* \"#utility.yul\":6570:6663   */\n      tag_222\n        /* \"#utility.yul\":6659:6662   */\n      dup3\n        /* \"#utility.yul\":6570:6663   */\n      tag_142\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":6688:6690   */\n      0x40\n        /* \"#utility.yul\":6683:6686   */\n      dup3\n        /* \"#utility.yul\":6679:6691   */\n      add\n        /* \"#utility.yul\":6672:6691   */\n      swap1\n      pop\n        /* \"#utility.yul\":6331:6697   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6703:7122   */\n    tag_72:\n        /* \"#utility.yul\":6869:6873   */\n      0x00\n        /* \"#utility.yul\":6907:6909   */\n      0x20\n        /* \"#utility.yul\":6896:6905   */\n      dup3\n        /* \"#utility.yul\":6892:6910   */\n      add\n        /* \"#utility.yul\":6884:6910   */\n      swap1\n      pop\n        /* \"#utility.yul\":6956:6965   */\n      dup2\n        /* \"#utility.yul\":6950:6954   */\n      dup2\n        /* \"#utility.yul\":6946:6966   */\n      sub\n        /* \"#utility.yul\":6942:6943   */\n      0x00\n        /* \"#utility.yul\":6931:6940   */\n      dup4\n        /* \"#utility.yul\":6927:6944   */\n      add\n        /* \"#utility.yul\":6920:6967   */\n      mstore\n        /* \"#utility.yul\":6984:7115   */\n      tag_224\n        /* \"#utility.yul\":7110:7114   */\n      dup2\n        /* \"#utility.yul\":6984:7115   */\n      tag_143\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":6976:7115   */\n      swap1\n      pop\n        /* \"#utility.yul\":6703:7122   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7128:7460   */\n    tag_76:\n        /* \"#utility.yul\":7249:7253   */\n      0x00\n        /* \"#utility.yul\":7287:7289   */\n      0x40\n        /* \"#utility.yul\":7276:7285   */\n      dup3\n        /* \"#utility.yul\":7272:7290   */\n      add\n        /* \"#utility.yul\":7264:7290   */\n      swap1\n      pop\n        /* \"#utility.yul\":7300:7371   */\n      tag_226\n        /* \"#utility.yul\":7368:7369   */\n      0x00\n        /* \"#utility.yul\":7357:7366   */\n      dup4\n        /* \"#utility.yul\":7353:7370   */\n      add\n        /* \"#utility.yul\":7344:7350   */\n      dup6\n        /* \"#utility.yul\":7300:7371   */\n      tag_132\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":7381:7453   */\n      tag_227\n        /* \"#utility.yul\":7449:7451   */\n      0x20\n        /* \"#utility.yul\":7438:7447   */\n      dup4\n        /* \"#utility.yul\":7434:7452   */\n      add\n        /* \"#utility.yul\":7425:7431   */\n      dup5\n        /* \"#utility.yul\":7381:7453   */\n      tag_127\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":7128:7460   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7466:7582   */\n    tag_144:\n        /* \"#utility.yul\":7536:7557   */\n      tag_229\n        /* \"#utility.yul\":7551:7556   */\n      dup2\n        /* \"#utility.yul\":7536:7557   */\n      tag_130\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":7529:7534   */\n      dup2\n        /* \"#utility.yul\":7526:7558   */\n      eq\n        /* \"#utility.yul\":7516:7576   */\n      tag_230\n      jumpi\n        /* \"#utility.yul\":7572:7573   */\n      0x00\n        /* \"#utility.yul\":7569:7570   */\n      dup1\n        /* \"#utility.yul\":7562:7574   */\n      revert\n        /* \"#utility.yul\":7516:7576   */\n    tag_230:\n        /* \"#utility.yul\":7466:7582   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7588:7725   */\n    tag_145:\n        /* \"#utility.yul\":7642:7647   */\n      0x00\n        /* \"#utility.yul\":7673:7679   */\n      dup2\n        /* \"#utility.yul\":7667:7680   */\n      mload\n        /* \"#utility.yul\":7658:7680   */\n      swap1\n      pop\n        /* \"#utility.yul\":7689:7719   */\n      tag_232\n        /* \"#utility.yul\":7713:7718   */\n      dup2\n        /* \"#utility.yul\":7689:7719   */\n      tag_144\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":7588:7725   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7731:8076   */\n    tag_80:\n        /* \"#utility.yul\":7798:7804   */\n      0x00\n        /* \"#utility.yul\":7847:7849   */\n      0x20\n        /* \"#utility.yul\":7835:7844   */\n      dup3\n        /* \"#utility.yul\":7826:7833   */\n      dup5\n        /* \"#utility.yul\":7822:7845   */\n      sub\n        /* \"#utility.yul\":7818:7850   */\n      slt\n        /* \"#utility.yul\":7815:7934   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":7853:7932   */\n      tag_235\n      tag_120\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":7815:7934   */\n    tag_234:\n        /* \"#utility.yul\":7973:7974   */\n      0x00\n        /* \"#utility.yul\":7998:8059   */\n      tag_236\n        /* \"#utility.yul\":8051:8058   */\n      dup5\n        /* \"#utility.yul\":8042:8048   */\n      dup3\n        /* \"#utility.yul\":8031:8040   */\n      dup6\n        /* \"#utility.yul\":8027:8049   */\n      add\n        /* \"#utility.yul\":7998:8059   */\n      tag_145\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":7988:8059   */\n      swap2\n      pop\n        /* \"#utility.yul\":7944:8069   */\n      pop\n        /* \"#utility.yul\":7731:8076   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8082:8252   */\n    tag_146:\n        /* \"#utility.yul\":8222:8244   */\n      0x4e6f207265776172647320617661696c61626c65000000000000000000000000\n        /* \"#utility.yul\":8218:8219   */\n      0x00\n        /* \"#utility.yul\":8210:8216   */\n      dup3\n        /* \"#utility.yul\":8206:8220   */\n      add\n        /* \"#utility.yul\":8199:8245   */\n      mstore\n        /* \"#utility.yul\":8082:8252   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8258:8624   */\n    tag_147:\n        /* \"#utility.yul\":8400:8403   */\n      0x00\n        /* \"#utility.yul\":8421:8488   */\n      tag_239\n        /* \"#utility.yul\":8485:8487   */\n      0x14\n        /* \"#utility.yul\":8480:8483   */\n      dup4\n        /* \"#utility.yul\":8421:8488   */\n      tag_139\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":8414:8488   */\n      swap2\n      pop\n        /* \"#utility.yul\":8497:8590   */\n      tag_240\n        /* \"#utility.yul\":8586:8589   */\n      dup3\n        /* \"#utility.yul\":8497:8590   */\n      tag_146\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":8615:8617   */\n      0x20\n        /* \"#utility.yul\":8610:8613   */\n      dup3\n        /* \"#utility.yul\":8606:8618   */\n      add\n        /* \"#utility.yul\":8599:8618   */\n      swap1\n      pop\n        /* \"#utility.yul\":8258:8624   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8630:9049   */\n    tag_96:\n        /* \"#utility.yul\":8796:8800   */\n      0x00\n        /* \"#utility.yul\":8834:8836   */\n      0x20\n        /* \"#utility.yul\":8823:8832   */\n      dup3\n        /* \"#utility.yul\":8819:8837   */\n      add\n        /* \"#utility.yul\":8811:8837   */\n      swap1\n      pop\n        /* \"#utility.yul\":8883:8892   */\n      dup2\n        /* \"#utility.yul\":8877:8881   */\n      dup2\n        /* \"#utility.yul\":8873:8893   */\n      sub\n        /* \"#utility.yul\":8869:8870   */\n      0x00\n        /* \"#utility.yul\":8858:8867   */\n      dup4\n        /* \"#utility.yul\":8854:8871   */\n      add\n        /* \"#utility.yul\":8847:8894   */\n      mstore\n        /* \"#utility.yul\":8911:9042   */\n      tag_242\n        /* \"#utility.yul\":9037:9041   */\n      dup2\n        /* \"#utility.yul\":8911:9042   */\n      tag_147\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":8903:9042   */\n      swap1\n      pop\n        /* \"#utility.yul\":8630:9049   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9055:9235   */\n    tag_148:\n        /* \"#utility.yul\":9103:9180   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9100:9101   */\n      0x00\n        /* \"#utility.yul\":9093:9181   */\n      mstore\n        /* \"#utility.yul\":9200:9204   */\n      0x11\n        /* \"#utility.yul\":9197:9198   */\n      0x04\n        /* \"#utility.yul\":9190:9205   */\n      mstore\n        /* \"#utility.yul\":9224:9228   */\n      0x24\n        /* \"#utility.yul\":9221:9222   */\n      0x00\n        /* \"#utility.yul\":9214:9229   */\n      revert\n        /* \"#utility.yul\":9241:9432   */\n    tag_109:\n        /* \"#utility.yul\":9281:9284   */\n      0x00\n        /* \"#utility.yul\":9300:9320   */\n      tag_245\n        /* \"#utility.yul\":9318:9319   */\n      dup3\n        /* \"#utility.yul\":9300:9320   */\n      tag_126\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":9295:9320   */\n      swap2\n      pop\n        /* \"#utility.yul\":9334:9354   */\n      tag_246\n        /* \"#utility.yul\":9352:9353   */\n      dup4\n        /* \"#utility.yul\":9334:9354   */\n      tag_126\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":9329:9354   */\n      swap3\n      pop\n        /* \"#utility.yul\":9377:9378   */\n      dup3\n        /* \"#utility.yul\":9374:9375   */\n      dup3\n        /* \"#utility.yul\":9370:9379   */\n      add\n        /* \"#utility.yul\":9363:9379   */\n      swap1\n      pop\n        /* \"#utility.yul\":9398:9401   */\n      dup1\n        /* \"#utility.yul\":9395:9396   */\n      dup3\n        /* \"#utility.yul\":9392:9402   */\n      gt\n        /* \"#utility.yul\":9389:9425   */\n      iszero\n      tag_247\n      jumpi\n        /* \"#utility.yul\":9405:9423   */\n      tag_248\n      tag_148\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":9389:9425   */\n    tag_247:\n        /* \"#utility.yul\":9241:9432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220eb049350ba0ddf1517e075ccc9736823b462d616e2a54815381fc801fb4f205e64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_752": {
									"entryPoint": null,
									"id": 752,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 268,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_address_fromMemory": {
									"entryPoint": 618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 707,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 465,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 562,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 461,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 515,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2223:7",
										"nodeType": "YulBlock",
										"src": "0:2223:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "611:79:7",
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:7",
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:7",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:7",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nativeSrc": "670:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nativeSrc": "670:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nativeSrc": "641:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nativeSrc": "631:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nativeSrc": "624:43:7",
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nativeSrc": "621:63:7",
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:7",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nativeSrc": "759:80:7",
													"nodeType": "YulBlock",
													"src": "759:80:7",
													"statements": [
														{
															"nativeSrc": "769:22:7",
															"nodeType": "YulAssignment",
															"src": "769:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:7"
																},
																"nativeSrc": "778:13:7",
																"nodeType": "YulFunctionCall",
																"src": "778:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:7"
																},
																"nativeSrc": "800:33:7",
																"nodeType": "YulFunctionCall",
																"src": "800:33:7"
															},
															"nativeSrc": "800:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:7",
														"nodeType": "YulTypedName",
														"src": "737:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:7",
														"nodeType": "YulTypedName",
														"src": "745:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:7",
														"nodeType": "YulTypedName",
														"src": "753:5:7",
														"type": ""
													}
												],
												"src": "696:143:7"
											},
											{
												"body": {
													"nativeSrc": "890:32:7",
													"nodeType": "YulBlock",
													"src": "890:32:7",
													"statements": [
														{
															"nativeSrc": "900:16:7",
															"nodeType": "YulAssignment",
															"src": "900:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "911:5:7",
																"nodeType": "YulIdentifier",
																"src": "911:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "900:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "845:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "872:5:7",
														"nodeType": "YulTypedName",
														"src": "872:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "882:7:7",
														"nodeType": "YulTypedName",
														"src": "882:7:7",
														"type": ""
													}
												],
												"src": "845:77:7"
											},
											{
												"body": {
													"nativeSrc": "971:79:7",
													"nodeType": "YulBlock",
													"src": "971:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:7",
																"nodeType": "YulBlock",
																"src": "1028:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:7"
																			},
																			"nativeSrc": "1030:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:7"
																		},
																		"nativeSrc": "1030:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1001:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:7"
																				},
																				"nativeSrc": "1001:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:7"
																		},
																		"nativeSrc": "991:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:7"
																},
																"nativeSrc": "984:43:7",
																"nodeType": "YulFunctionCall",
																"src": "984:43:7"
															},
															"nativeSrc": "981:63:7",
															"nodeType": "YulIf",
															"src": "981:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "928:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:7",
														"nodeType": "YulTypedName",
														"src": "964:5:7",
														"type": ""
													}
												],
												"src": "928:122:7"
											},
											{
												"body": {
													"nativeSrc": "1119:80:7",
													"nodeType": "YulBlock",
													"src": "1119:80:7",
													"statements": [
														{
															"nativeSrc": "1129:22:7",
															"nodeType": "YulAssignment",
															"src": "1129:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:7"
																},
																"nativeSrc": "1138:13:7",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1160:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:7"
																},
																"nativeSrc": "1160:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:7"
															},
															"nativeSrc": "1160:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1056:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:7",
														"nodeType": "YulTypedName",
														"src": "1097:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:7",
														"nodeType": "YulTypedName",
														"src": "1105:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:7",
														"nodeType": "YulTypedName",
														"src": "1113:5:7",
														"type": ""
													}
												],
												"src": "1056:143:7"
											},
											{
												"body": {
													"nativeSrc": "1316:552:7",
													"nodeType": "YulBlock",
													"src": "1316:552:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1362:83:7",
																"nodeType": "YulBlock",
																"src": "1362:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1364:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "1364:77:7"
																			},
																			"nativeSrc": "1364:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1364:79:7"
																		},
																		"nativeSrc": "1364:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1337:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1337:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1346:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1346:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1333:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1333:3:7"
																		},
																		"nativeSrc": "1333:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1333:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1358:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1358:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1329:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1329:3:7"
																},
																"nativeSrc": "1329:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1329:32:7"
															},
															"nativeSrc": "1326:119:7",
															"nodeType": "YulIf",
															"src": "1326:119:7"
														},
														{
															"nativeSrc": "1455:128:7",
															"nodeType": "YulBlock",
															"src": "1455:128:7",
															"statements": [
																{
																	"nativeSrc": "1470:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1470:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1484:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1484:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1474:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1474:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1499:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1499:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1545:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1545:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1556:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1556:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1541:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1541:3:7"
																				},
																				"nativeSrc": "1541:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1541:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1565:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1565:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1509:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1509:31:7"
																		},
																		"nativeSrc": "1509:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1509:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1499:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1499:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1593:129:7",
															"nodeType": "YulBlock",
															"src": "1593:129:7",
															"statements": [
																{
																	"nativeSrc": "1608:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1608:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1622:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1622:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1612:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1612:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1638:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1638:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1684:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1684:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1695:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1695:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1680:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1680:3:7"
																				},
																				"nativeSrc": "1680:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1680:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1704:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1704:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1648:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1648:31:7"
																		},
																		"nativeSrc": "1648:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1648:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1638:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1638:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1732:129:7",
															"nodeType": "YulBlock",
															"src": "1732:129:7",
															"statements": [
																{
																	"nativeSrc": "1747:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1747:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1761:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1761:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1751:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1751:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1777:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1777:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1823:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1823:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1834:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1834:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1819:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1819:3:7"
																				},
																				"nativeSrc": "1819:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1819:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1843:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1843:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1787:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1787:31:7"
																		},
																		"nativeSrc": "1787:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1787:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1777:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1777:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_address_fromMemory",
												"nativeSrc": "1205:663:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1270:9:7",
														"nodeType": "YulTypedName",
														"src": "1270:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1281:7:7",
														"nodeType": "YulTypedName",
														"src": "1281:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1293:6:7",
														"nodeType": "YulTypedName",
														"src": "1293:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1301:6:7",
														"nodeType": "YulTypedName",
														"src": "1301:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1309:6:7",
														"nodeType": "YulTypedName",
														"src": "1309:6:7",
														"type": ""
													}
												],
												"src": "1205:663:7"
											},
											{
												"body": {
													"nativeSrc": "1939:53:7",
													"nodeType": "YulBlock",
													"src": "1939:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1956:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1956:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1979:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1979:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1961:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "1961:17:7"
																		},
																		"nativeSrc": "1961:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1961:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1949:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1949:6:7"
																},
																"nativeSrc": "1949:37:7",
																"nodeType": "YulFunctionCall",
																"src": "1949:37:7"
															},
															"nativeSrc": "1949:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "1949:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1874:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1927:5:7",
														"nodeType": "YulTypedName",
														"src": "1927:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1934:3:7",
														"nodeType": "YulTypedName",
														"src": "1934:3:7",
														"type": ""
													}
												],
												"src": "1874:118:7"
											},
											{
												"body": {
													"nativeSrc": "2096:124:7",
													"nodeType": "YulBlock",
													"src": "2096:124:7",
													"statements": [
														{
															"nativeSrc": "2106:26:7",
															"nodeType": "YulAssignment",
															"src": "2106:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2118:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2118:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2129:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2129:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2114:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2114:3:7"
																},
																"nativeSrc": "2114:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2114:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2106:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2106:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2186:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2186:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2199:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2199:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2210:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2210:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2195:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2195:3:7"
																		},
																		"nativeSrc": "2195:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2195:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2142:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "2142:43:7"
																},
																"nativeSrc": "2142:71:7",
																"nodeType": "YulFunctionCall",
																"src": "2142:71:7"
															},
															"nativeSrc": "2142:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "2142:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1998:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2068:9:7",
														"nodeType": "YulTypedName",
														"src": "2068:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2080:6:7",
														"nodeType": "YulTypedName",
														"src": "2080:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2091:4:7",
														"nodeType": "YulTypedName",
														"src": "2091:4:7",
														"type": ""
													}
												],
												"src": "1998:222:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b50604051620011613803806200116183398181016040528101906200003691906200026a565b805f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000aa575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a19190620002d4565b60405180910390fd5b620000bb816200010c60201b60201c565b508260015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600481905550505050620002ef565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620001fc82620001d1565b9050919050565b6200020e81620001f0565b811462000219575f80fd5b50565b5f815190506200022c8162000203565b92915050565b5f819050919050565b620002468162000232565b811462000251575f80fd5b50565b5f8151905062000264816200023b565b92915050565b5f805f60608486031215620002845762000283620001cd565b5b5f62000293868287016200021c565b9350506020620002a68682870162000254565b9250506040620002b9868287016200021c565b9150509250925092565b620002ce81620001f0565b82525050565b5f602082019050620002e95f830184620002c3565b92915050565b610e6480620002fd5f395ff3fe608060405234801561000f575f80fd5b50600436106100b2575f3560e01c80637e1a37861161006f5780637e1a37861461018a5780638da5cb5b146101a85780639ef3a261146101c6578063c7b8981c146101e2578063f2fde38b146101ec578063f7c618c114610208576100b2565b80630660f1e8146100b6578063078b0fb7146100e65780633f608ad21461011657806344301c131461014657806345e1d96014610162578063715018a614610180575b5f80fd5b6100d060048036038101906100cb91906109c1565b610226565b6040516100dd9190610a04565b60405180910390f35b61010060048036038101906100fb91906109c1565b61023b565b60405161010d9190610a04565b60405180910390f35b610130600480360381019061012b9190610a47565b610281565b60405161013d9190610a8c565b60405180910390f35b610160600480360381019061015b9190610aa5565b61029e565b005b61016a610596565b6040516101779190610a04565b60405180910390f35b61018861059c565b005b6101926105af565b60405161019f9190610a04565b60405180910390f35b6101b06105b8565b6040516101bd9190610af2565b60405180910390f35b6101e060048036038101906101db9190610a47565b6105df565b005b6101ea6105f1565b005b610206600480360381019061020191906109c1565b610756565b005b6102106107da565b60405161021d9190610b66565b60405180910390f35b6003602052805f5260405f205f915090505481565b5f60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6002602052805f5260405f205f915054906101000a900460ff1681565b5f8190503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016102f29190610a04565b602060405180830381865afa15801561030d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103319190610b93565b73ffffffffffffffffffffffffffffffffffffffff1614610387576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037e90610c3e565b60405180910390fd5b60025f8481526020019081526020015f205f9054906101000a900460ff16156103e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103dc90610ccc565b60405180910390fd5b600160025f8581526020019081526020015f205f6101000a81548160ff02191690831515021790555061046060045460035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546107ff90919063ffffffff16565b60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb336004546040518363ffffffff1660e01b81526004016104ff929190610cea565b6020604051808303815f875af115801561051b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061053f9190610d3b565b50823373ffffffffffffffffffffffffffffffffffffffff167f080ac4523930bdcc2e85ca0a99da6547ba0d4c3badb2a3693f781d80aa4863dc6004546040516105899190610a04565b60405180910390a3505050565b60045481565b6105a4610814565b6105ad5f61089b565b565b5f600454905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6105e7610814565b8060048190555050565b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8111610674576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066b90610db0565b60405180910390fd5b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610712929190610cea565b6020604051808303815f875af115801561072e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107529190610d3b565b5050565b61075e610814565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107ce575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107c59190610af2565b60405180910390fd5b6107d78161089b565b50565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f818361080c9190610dfb565b905092915050565b61081c61095c565b73ffffffffffffffffffffffffffffffffffffffff1661083a6105b8565b73ffffffffffffffffffffffffffffffffffffffff16146108995761085d61095c565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108909190610af2565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61099082610967565b9050919050565b6109a081610986565b81146109aa575f80fd5b50565b5f813590506109bb81610997565b92915050565b5f602082840312156109d6576109d5610963565b5b5f6109e3848285016109ad565b91505092915050565b5f819050919050565b6109fe816109ec565b82525050565b5f602082019050610a175f8301846109f5565b92915050565b610a26816109ec565b8114610a30575f80fd5b50565b5f81359050610a4181610a1d565b92915050565b5f60208284031215610a5c57610a5b610963565b5b5f610a6984828501610a33565b91505092915050565b5f8115159050919050565b610a8681610a72565b82525050565b5f602082019050610a9f5f830184610a7d565b92915050565b5f8060408385031215610abb57610aba610963565b5b5f610ac885828601610a33565b9250506020610ad9858286016109ad565b9150509250929050565b610aec81610986565b82525050565b5f602082019050610b055f830184610ae3565b92915050565b5f819050919050565b5f610b2e610b29610b2484610967565b610b0b565b610967565b9050919050565b5f610b3f82610b14565b9050919050565b5f610b5082610b35565b9050919050565b610b6081610b46565b82525050565b5f602082019050610b795f830184610b57565b92915050565b5f81519050610b8d81610997565b92915050565b5f60208284031215610ba857610ba7610963565b5b5f610bb584828501610b7f565b91505092915050565b5f82825260208201905092915050565b7f596f75206d757374206f776e207468652070726f6475637420746f20726563795f8201527f636c652069740000000000000000000000000000000000000000000000000000602082015250565b5f610c28602683610bbe565b9150610c3382610bce565b604082019050919050565b5f6020820190508181035f830152610c5581610c1c565b9050919050565b7f546869732070726f647563742068617320616c7265616479206265656e2072655f8201527f6379636c65640000000000000000000000000000000000000000000000000000602082015250565b5f610cb6602683610bbe565b9150610cc182610c5c565b604082019050919050565b5f6020820190508181035f830152610ce381610caa565b9050919050565b5f604082019050610cfd5f830185610ae3565b610d0a60208301846109f5565b9392505050565b610d1a81610a72565b8114610d24575f80fd5b50565b5f81519050610d3581610d11565b92915050565b5f60208284031215610d5057610d4f610963565b5b5f610d5d84828501610d27565b91505092915050565b7f4e6f207265776172647320617661696c61626c650000000000000000000000005f82015250565b5f610d9a601483610bbe565b9150610da582610d66565b602082019050919050565b5f6020820190508181035f830152610dc781610d8e565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610e05826109ec565b9150610e10836109ec565b9250828201905080821115610e2857610e27610dce565b5b9291505056fea2646970667358221220eb049350ba0ddf1517e075ccc9736823b462d616e2a54815381fc801fb4f205e64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1161 CODESIZE SUB DUP1 PUSH3 0x1161 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x26A JUMP JUMPDEST DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA1 SWAP2 SWAP1 PUSH3 0x2D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBB DUP2 PUSH3 0x10C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP POP POP PUSH3 0x2EF JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x1FC DUP3 PUSH3 0x1D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x20E DUP2 PUSH3 0x1F0 JUMP JUMPDEST DUP2 EQ PUSH3 0x219 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x22C DUP2 PUSH3 0x203 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x246 DUP2 PUSH3 0x232 JUMP JUMPDEST DUP2 EQ PUSH3 0x251 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x264 DUP2 PUSH3 0x23B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x284 JUMPI PUSH3 0x283 PUSH3 0x1CD JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x293 DUP7 DUP3 DUP8 ADD PUSH3 0x21C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x2A6 DUP7 DUP3 DUP8 ADD PUSH3 0x254 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x2B9 DUP7 DUP3 DUP8 ADD PUSH3 0x21C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH3 0x2CE DUP2 PUSH3 0x1F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x2E9 PUSH0 DUP4 ADD DUP5 PUSH3 0x2C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE64 DUP1 PUSH3 0x2FD PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E1A3786 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x7E1A3786 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x9EF3A261 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC7B8981C EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x208 JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x660F1E8 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x78B0FB7 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x3F608AD2 EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x44301C13 EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x45E1D960 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x180 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x9C1 JUMP JUMPDEST PUSH2 0x226 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x9C1 JUMP JUMPDEST PUSH2 0x23B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10D SWAP2 SWAP1 PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x130 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12B SWAP2 SWAP1 PUSH2 0xA47 JUMP JUMPDEST PUSH2 0x281 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13D SWAP2 SWAP1 PUSH2 0xA8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x160 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15B SWAP2 SWAP1 PUSH2 0xAA5 JUMP JUMPDEST PUSH2 0x29E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16A PUSH2 0x596 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x177 SWAP2 SWAP1 PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH2 0x59C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x192 PUSH2 0x5AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH2 0x5B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0xAF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0xA47 JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EA PUSH2 0x5F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x206 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x201 SWAP2 SWAP1 PUSH2 0x9C1 JUMP JUMPDEST PUSH2 0x756 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x210 PUSH2 0x7DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0xB66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x30D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x331 SWAP2 SWAP1 PUSH2 0xB93 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x387 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37E SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DC SWAP1 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x460 PUSH1 0x4 SLOAD PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x7FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FF SWAP3 SWAP2 SWAP1 PUSH2 0xCEA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x51B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x53F SWAP2 SWAP1 PUSH2 0xD3B JUMP JUMPDEST POP DUP3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x80AC4523930BDCC2E85CA0A99DA6547BA0D4C3BADB2A3693F781D80AA4863DC PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH2 0x589 SWAP2 SWAP1 PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x5A4 PUSH2 0x814 JUMP JUMPDEST PUSH2 0x5AD PUSH0 PUSH2 0x89B JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5E7 PUSH2 0x814 JUMP JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x674 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x66B SWAP1 PUSH2 0xDB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x712 SWAP3 SWAP2 SWAP1 PUSH2 0xCEA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x72E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x752 SWAP2 SWAP1 PUSH2 0xD3B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x75E PUSH2 0x814 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7CE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C5 SWAP2 SWAP1 PUSH2 0xAF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7D7 DUP2 PUSH2 0x89B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x80C SWAP2 SWAP1 PUSH2 0xDFB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x81C PUSH2 0x95C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x83A PUSH2 0x5B8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x899 JUMPI PUSH2 0x85D PUSH2 0x95C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x890 SWAP2 SWAP1 PUSH2 0xAF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x990 DUP3 PUSH2 0x967 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9A0 DUP2 PUSH2 0x986 JUMP JUMPDEST DUP2 EQ PUSH2 0x9AA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9BB DUP2 PUSH2 0x997 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9D6 JUMPI PUSH2 0x9D5 PUSH2 0x963 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9E3 DUP5 DUP3 DUP6 ADD PUSH2 0x9AD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9FE DUP2 PUSH2 0x9EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA17 PUSH0 DUP4 ADD DUP5 PUSH2 0x9F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA26 DUP2 PUSH2 0x9EC JUMP JUMPDEST DUP2 EQ PUSH2 0xA30 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA41 DUP2 PUSH2 0xA1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA5C JUMPI PUSH2 0xA5B PUSH2 0x963 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA69 DUP5 DUP3 DUP6 ADD PUSH2 0xA33 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA86 DUP2 PUSH2 0xA72 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA9F PUSH0 DUP4 ADD DUP5 PUSH2 0xA7D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xABB JUMPI PUSH2 0xABA PUSH2 0x963 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xAC8 DUP6 DUP3 DUP7 ADD PUSH2 0xA33 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xAD9 DUP6 DUP3 DUP7 ADD PUSH2 0x9AD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xAEC DUP2 PUSH2 0x986 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB05 PUSH0 DUP4 ADD DUP5 PUSH2 0xAE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB2E PUSH2 0xB29 PUSH2 0xB24 DUP5 PUSH2 0x967 JUMP JUMPDEST PUSH2 0xB0B JUMP JUMPDEST PUSH2 0x967 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB3F DUP3 PUSH2 0xB14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB50 DUP3 PUSH2 0xB35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB60 DUP2 PUSH2 0xB46 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB79 PUSH0 DUP4 ADD DUP5 PUSH2 0xB57 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xB8D DUP2 PUSH2 0x997 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBA8 JUMPI PUSH2 0xBA7 PUSH2 0x963 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBB5 DUP5 DUP3 DUP6 ADD PUSH2 0xB7F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F75206D757374206F776E207468652070726F6475637420746F2072656379 PUSH0 DUP3 ADD MSTORE PUSH32 0x636C652069740000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC28 PUSH1 0x26 DUP4 PUSH2 0xBBE JUMP JUMPDEST SWAP2 POP PUSH2 0xC33 DUP3 PUSH2 0xBCE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC55 DUP2 PUSH2 0xC1C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546869732070726F647563742068617320616C7265616479206265656E207265 PUSH0 DUP3 ADD MSTORE PUSH32 0x6379636C65640000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xCB6 PUSH1 0x26 DUP4 PUSH2 0xBBE JUMP JUMPDEST SWAP2 POP PUSH2 0xCC1 DUP3 PUSH2 0xC5C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xCE3 DUP2 PUSH2 0xCAA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xCFD PUSH0 DUP4 ADD DUP6 PUSH2 0xAE3 JUMP JUMPDEST PUSH2 0xD0A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x9F5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xD1A DUP2 PUSH2 0xA72 JUMP JUMPDEST DUP2 EQ PUSH2 0xD24 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xD35 DUP2 PUSH2 0xD11 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD50 JUMPI PUSH2 0xD4F PUSH2 0x963 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD5D DUP5 DUP3 DUP6 ADD PUSH2 0xD27 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F207265776172647320617661696C61626C65000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD9A PUSH1 0x14 DUP4 PUSH2 0xBBE JUMP JUMPDEST SWAP2 POP PUSH2 0xDA5 DUP3 PUSH2 0xD66 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDC7 DUP2 PUSH2 0xD8E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE05 DUP3 PUSH2 0x9EC JUMP JUMPDEST SWAP2 POP PUSH2 0xE10 DUP4 PUSH2 0x9EC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE28 JUMPI PUSH2 0xE27 PUSH2 0xDCE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB DIV SWAP4 POP 0xBA 0xD 0xDF ISZERO OR 0xE0 PUSH22 0xCCC9736823B462D616E2A54815381FC801FB4F205E64 PUSH20 0x6F6C634300081800330000000000000000000000 ",
							"sourceMap": "286:3269:6:-:0;;;1197:208;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1290:12;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1335:12:6::1;1314:11;;:34;;;;;;;;;;;;;;;;;;1379:19;1358:18;:40;;;;1197:208:::0;;;286:3269;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:663::-;1293:6;1301;1309;1358:2;1346:9;1337:7;1333:23;1329:32;1326:119;;;1364:79;;:::i;:::-;1326:119;1484:1;1509:64;1565:7;1556:6;1545:9;1541:22;1509:64;:::i;:::-;1499:74;;1455:128;1622:2;1648:64;1704:7;1695:6;1684:9;1680:22;1648:64;:::i;:::-;1638:74;;1593:129;1761:2;1787:64;1843:7;1834:6;1823:9;1819:22;1787:64;:::i;:::-;1777:74;;1732:129;1205:663;;;;;:::o;1874:118::-;1961:24;1979:5;1961:24;:::i;:::-;1956:3;1949:37;1874:118;;:::o;1998:222::-;2091:4;2129:2;2118:9;2114:18;2106:26;;2142:71;2210:1;2199:9;2195:17;2186:6;2142:71;:::i;:::-;1998:222;;;;:::o;286:3269:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 2068,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_354": {
									"entryPoint": 2396,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 2203,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_560": {
									"entryPoint": 2047,
									"id": 560,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getRewardRate_877": {
									"entryPoint": 1455,
									"id": 877,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getUserRewards_890": {
									"entryPoint": 571,
									"id": 890,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1464,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@recycleProduct_821": {
									"entryPoint": 670,
									"id": 821,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@recycledProducts_714": {
									"entryPoint": 641,
									"id": 714,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1436,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardPerRecycling_720": {
									"entryPoint": 1430,
									"id": 720,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardToken_710": {
									"entryPoint": 2010,
									"id": 710,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1878,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateRewardRate_834": {
									"entryPoint": 1503,
									"id": 834,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userRewards_718": {
									"entryPoint": 550,
									"id": 718,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawRewards_868": {
									"entryPoint": 1521,
									"id": 868,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 2943,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 2963,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2631,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 2725,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2685,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack": {
									"entryPoint": 2903,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_2da2db0404507227023dd9f195d6179e0c85c03033a3bbf7dafc83719096b4a5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cce2530319b152d2026bbe9448a787f6729d8df990f9962cfbcb0ab16b6f5dd1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2802,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3306,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed": {
									"entryPoint": 2918,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2da2db0404507227023dd9f195d6179e0c85c03033a3bbf7dafc83719096b4a5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3134,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3504,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cce2530319b152d2026bbe9448a787f6729d8df990f9962cfbcb0ab16b6f5dd1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3276,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2564,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2438,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2674,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2407,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$225_to_t_address": {
									"entryPoint": 2886,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2869,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2827,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3534,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2403,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_2da2db0404507227023dd9f195d6179e0c85c03033a3bbf7dafc83719096b4a5": {
									"entryPoint": 3022,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040": {
									"entryPoint": 3430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cce2530319b152d2026bbe9448a787f6729d8df990f9962cfbcb0ab16b6f5dd1": {
									"entryPoint": 3164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2589,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9435:7",
										"nodeType": "YulBlock",
										"src": "0:9435:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "611:79:7",
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:7",
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:7",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:7",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nativeSrc": "670:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nativeSrc": "670:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nativeSrc": "641:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nativeSrc": "631:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nativeSrc": "624:43:7",
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nativeSrc": "621:63:7",
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:7",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nativeSrc": "748:87:7",
													"nodeType": "YulBlock",
													"src": "748:87:7",
													"statements": [
														{
															"nativeSrc": "758:29:7",
															"nodeType": "YulAssignment",
															"src": "758:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:7"
																},
																"nativeSrc": "767:20:7",
																"nodeType": "YulFunctionCall",
																"src": "767:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:7"
																},
																"nativeSrc": "796:33:7",
																"nodeType": "YulFunctionCall",
																"src": "796:33:7"
															},
															"nativeSrc": "796:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:7",
														"nodeType": "YulTypedName",
														"src": "726:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:7",
														"nodeType": "YulTypedName",
														"src": "734:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:7",
														"nodeType": "YulTypedName",
														"src": "742:5:7",
														"type": ""
													}
												],
												"src": "696:139:7"
											},
											{
												"body": {
													"nativeSrc": "907:263:7",
													"nodeType": "YulBlock",
													"src": "907:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:7",
																"nodeType": "YulBlock",
																"src": "953:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:7"
																			},
																			"nativeSrc": "955:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:7"
																		},
																		"nativeSrc": "955:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:7"
																		},
																		"nativeSrc": "924:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:7",
																		"nodeType": "YulLiteral",
																		"src": "949:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:7"
																},
																"nativeSrc": "920:32:7",
																"nodeType": "YulFunctionCall",
																"src": "920:32:7"
															},
															"nativeSrc": "917:119:7",
															"nodeType": "YulIf",
															"src": "917:119:7"
														},
														{
															"nativeSrc": "1046:117:7",
															"nodeType": "YulBlock",
															"src": "1046:117:7",
															"statements": [
																{
																	"nativeSrc": "1061:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:7",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:7"
																				},
																				"nativeSrc": "1121:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:7"
																		},
																		"nativeSrc": "1100:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:7",
														"nodeType": "YulTypedName",
														"src": "877:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:7",
														"nodeType": "YulTypedName",
														"src": "888:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:7",
														"nodeType": "YulTypedName",
														"src": "900:6:7",
														"type": ""
													}
												],
												"src": "841:329:7"
											},
											{
												"body": {
													"nativeSrc": "1221:32:7",
													"nodeType": "YulBlock",
													"src": "1221:32:7",
													"statements": [
														{
															"nativeSrc": "1231:16:7",
															"nodeType": "YulAssignment",
															"src": "1231:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:7",
																"nodeType": "YulIdentifier",
																"src": "1242:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:7",
														"nodeType": "YulTypedName",
														"src": "1203:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:7",
														"nodeType": "YulTypedName",
														"src": "1213:7:7",
														"type": ""
													}
												],
												"src": "1176:77:7"
											},
											{
												"body": {
													"nativeSrc": "1324:53:7",
													"nodeType": "YulBlock",
													"src": "1324:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:7"
																		},
																		"nativeSrc": "1346:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:7"
																},
																"nativeSrc": "1334:37:7",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:7"
															},
															"nativeSrc": "1334:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:7",
														"nodeType": "YulTypedName",
														"src": "1312:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:7",
														"nodeType": "YulTypedName",
														"src": "1319:3:7",
														"type": ""
													}
												],
												"src": "1259:118:7"
											},
											{
												"body": {
													"nativeSrc": "1481:124:7",
													"nodeType": "YulBlock",
													"src": "1481:124:7",
													"statements": [
														{
															"nativeSrc": "1491:26:7",
															"nodeType": "YulAssignment",
															"src": "1491:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1503:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1499:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:7"
																},
																"nativeSrc": "1499:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1499:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1491:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1571:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1584:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1595:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1580:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:7"
																		},
																		"nativeSrc": "1580:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1527:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:7"
																},
																"nativeSrc": "1527:71:7",
																"nodeType": "YulFunctionCall",
																"src": "1527:71:7"
															},
															"nativeSrc": "1527:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1383:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1453:9:7",
														"nodeType": "YulTypedName",
														"src": "1453:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1465:6:7",
														"nodeType": "YulTypedName",
														"src": "1465:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1476:4:7",
														"nodeType": "YulTypedName",
														"src": "1476:4:7",
														"type": ""
													}
												],
												"src": "1383:222:7"
											},
											{
												"body": {
													"nativeSrc": "1654:79:7",
													"nodeType": "YulBlock",
													"src": "1654:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1711:16:7",
																"nodeType": "YulBlock",
																"src": "1711:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1720:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1723:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1713:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:7"
																			},
																			"nativeSrc": "1713:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:7"
																		},
																		"nativeSrc": "1713:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1677:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1702:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1684:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:7"
																				},
																				"nativeSrc": "1684:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1674:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:7"
																		},
																		"nativeSrc": "1674:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1667:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:7"
																},
																"nativeSrc": "1667:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1667:43:7"
															},
															"nativeSrc": "1664:63:7",
															"nodeType": "YulIf",
															"src": "1664:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1611:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1647:5:7",
														"nodeType": "YulTypedName",
														"src": "1647:5:7",
														"type": ""
													}
												],
												"src": "1611:122:7"
											},
											{
												"body": {
													"nativeSrc": "1791:87:7",
													"nodeType": "YulBlock",
													"src": "1791:87:7",
													"statements": [
														{
															"nativeSrc": "1801:29:7",
															"nodeType": "YulAssignment",
															"src": "1801:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1823:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1810:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:7"
																},
																"nativeSrc": "1810:20:7",
																"nodeType": "YulFunctionCall",
																"src": "1810:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1801:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1866:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1839:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:7"
																},
																"nativeSrc": "1839:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1839:33:7"
															},
															"nativeSrc": "1839:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1739:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1769:6:7",
														"nodeType": "YulTypedName",
														"src": "1769:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1777:3:7",
														"nodeType": "YulTypedName",
														"src": "1777:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1785:5:7",
														"nodeType": "YulTypedName",
														"src": "1785:5:7",
														"type": ""
													}
												],
												"src": "1739:139:7"
											},
											{
												"body": {
													"nativeSrc": "1950:263:7",
													"nodeType": "YulBlock",
													"src": "1950:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1996:83:7",
																"nodeType": "YulBlock",
																"src": "1996:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1998:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "1998:77:7"
																			},
																			"nativeSrc": "1998:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1998:79:7"
																		},
																		"nativeSrc": "1998:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1998:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1971:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1971:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1980:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1980:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1967:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1967:3:7"
																		},
																		"nativeSrc": "1967:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1967:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1992:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1992:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1963:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1963:3:7"
																},
																"nativeSrc": "1963:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1963:32:7"
															},
															"nativeSrc": "1960:119:7",
															"nodeType": "YulIf",
															"src": "1960:119:7"
														},
														{
															"nativeSrc": "2089:117:7",
															"nodeType": "YulBlock",
															"src": "2089:117:7",
															"statements": [
																{
																	"nativeSrc": "2104:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2104:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2118:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2118:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2108:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2108:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2133:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2133:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2168:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2168:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2179:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2179:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2164:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2164:3:7"
																				},
																				"nativeSrc": "2164:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2164:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2188:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2188:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2143:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2143:20:7"
																		},
																		"nativeSrc": "2143:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2143:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2133:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2133:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1884:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1920:9:7",
														"nodeType": "YulTypedName",
														"src": "1920:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1931:7:7",
														"nodeType": "YulTypedName",
														"src": "1931:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1943:6:7",
														"nodeType": "YulTypedName",
														"src": "1943:6:7",
														"type": ""
													}
												],
												"src": "1884:329:7"
											},
											{
												"body": {
													"nativeSrc": "2261:48:7",
													"nodeType": "YulBlock",
													"src": "2261:48:7",
													"statements": [
														{
															"nativeSrc": "2271:32:7",
															"nodeType": "YulAssignment",
															"src": "2271:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2296:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2296:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2289:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2289:6:7"
																		},
																		"nativeSrc": "2289:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2289:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2282:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2282:6:7"
																},
																"nativeSrc": "2282:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2282:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2271:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2271:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2219:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2243:5:7",
														"nodeType": "YulTypedName",
														"src": "2243:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2253:7:7",
														"nodeType": "YulTypedName",
														"src": "2253:7:7",
														"type": ""
													}
												],
												"src": "2219:90:7"
											},
											{
												"body": {
													"nativeSrc": "2374:50:7",
													"nodeType": "YulBlock",
													"src": "2374:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2391:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2391:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2411:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2411:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2396:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "2396:14:7"
																		},
																		"nativeSrc": "2396:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2396:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2384:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2384:6:7"
																},
																"nativeSrc": "2384:34:7",
																"nodeType": "YulFunctionCall",
																"src": "2384:34:7"
															},
															"nativeSrc": "2384:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "2384:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "2315:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2362:5:7",
														"nodeType": "YulTypedName",
														"src": "2362:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2369:3:7",
														"nodeType": "YulTypedName",
														"src": "2369:3:7",
														"type": ""
													}
												],
												"src": "2315:109:7"
											},
											{
												"body": {
													"nativeSrc": "2522:118:7",
													"nodeType": "YulBlock",
													"src": "2522:118:7",
													"statements": [
														{
															"nativeSrc": "2532:26:7",
															"nodeType": "YulAssignment",
															"src": "2532:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2544:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2544:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2555:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2555:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2540:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2540:3:7"
																},
																"nativeSrc": "2540:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2540:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2532:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2532:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2606:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2606:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2619:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2619:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2630:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2630:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2615:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2615:3:7"
																		},
																		"nativeSrc": "2615:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2615:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "2568:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "2568:37:7"
																},
																"nativeSrc": "2568:65:7",
																"nodeType": "YulFunctionCall",
																"src": "2568:65:7"
															},
															"nativeSrc": "2568:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "2568:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "2430:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2494:9:7",
														"nodeType": "YulTypedName",
														"src": "2494:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2506:6:7",
														"nodeType": "YulTypedName",
														"src": "2506:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2517:4:7",
														"nodeType": "YulTypedName",
														"src": "2517:4:7",
														"type": ""
													}
												],
												"src": "2430:210:7"
											},
											{
												"body": {
													"nativeSrc": "2729:391:7",
													"nodeType": "YulBlock",
													"src": "2729:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2775:83:7",
																"nodeType": "YulBlock",
																"src": "2775:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2777:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2777:77:7"
																			},
																			"nativeSrc": "2777:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2777:79:7"
																		},
																		"nativeSrc": "2777:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2777:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2750:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2750:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2759:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2759:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2746:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2746:3:7"
																		},
																		"nativeSrc": "2746:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2746:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2771:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2771:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2742:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2742:3:7"
																},
																"nativeSrc": "2742:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2742:32:7"
															},
															"nativeSrc": "2739:119:7",
															"nodeType": "YulIf",
															"src": "2739:119:7"
														},
														{
															"nativeSrc": "2868:117:7",
															"nodeType": "YulBlock",
															"src": "2868:117:7",
															"statements": [
																{
																	"nativeSrc": "2883:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2883:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2897:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2897:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2887:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2887:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2912:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2912:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2947:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2947:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2958:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2958:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2943:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2943:3:7"
																				},
																				"nativeSrc": "2943:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2943:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2967:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2967:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2922:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2922:20:7"
																		},
																		"nativeSrc": "2922:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2922:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2912:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2912:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2995:118:7",
															"nodeType": "YulBlock",
															"src": "2995:118:7",
															"statements": [
																{
																	"nativeSrc": "3010:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3010:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3024:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3024:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3014:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3014:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3040:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3040:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3075:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3075:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3086:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3086:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3071:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3071:3:7"
																				},
																				"nativeSrc": "3071:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3071:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3095:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3095:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3050:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3050:20:7"
																		},
																		"nativeSrc": "3050:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3050:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3040:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3040:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nativeSrc": "2646:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2691:9:7",
														"nodeType": "YulTypedName",
														"src": "2691:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2702:7:7",
														"nodeType": "YulTypedName",
														"src": "2702:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2714:6:7",
														"nodeType": "YulTypedName",
														"src": "2714:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2722:6:7",
														"nodeType": "YulTypedName",
														"src": "2722:6:7",
														"type": ""
													}
												],
												"src": "2646:474:7"
											},
											{
												"body": {
													"nativeSrc": "3191:53:7",
													"nodeType": "YulBlock",
													"src": "3191:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3208:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3208:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3231:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3231:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3213:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3213:17:7"
																		},
																		"nativeSrc": "3213:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3213:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3201:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3201:6:7"
																},
																"nativeSrc": "3201:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3201:37:7"
															},
															"nativeSrc": "3201:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "3201:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3126:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3179:5:7",
														"nodeType": "YulTypedName",
														"src": "3179:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3186:3:7",
														"nodeType": "YulTypedName",
														"src": "3186:3:7",
														"type": ""
													}
												],
												"src": "3126:118:7"
											},
											{
												"body": {
													"nativeSrc": "3348:124:7",
													"nodeType": "YulBlock",
													"src": "3348:124:7",
													"statements": [
														{
															"nativeSrc": "3358:26:7",
															"nodeType": "YulAssignment",
															"src": "3358:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3370:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3370:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3381:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3381:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3366:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3366:3:7"
																},
																"nativeSrc": "3366:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3366:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3358:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3358:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3438:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3438:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3451:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3451:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3462:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3462:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3447:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3447:3:7"
																		},
																		"nativeSrc": "3447:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3447:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3394:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3394:43:7"
																},
																"nativeSrc": "3394:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3394:71:7"
															},
															"nativeSrc": "3394:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "3394:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3250:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3320:9:7",
														"nodeType": "YulTypedName",
														"src": "3320:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3332:6:7",
														"nodeType": "YulTypedName",
														"src": "3332:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3343:4:7",
														"nodeType": "YulTypedName",
														"src": "3343:4:7",
														"type": ""
													}
												],
												"src": "3250:222:7"
											},
											{
												"body": {
													"nativeSrc": "3510:28:7",
													"nodeType": "YulBlock",
													"src": "3510:28:7",
													"statements": [
														{
															"nativeSrc": "3520:12:7",
															"nodeType": "YulAssignment",
															"src": "3520:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "3527:5:7",
																"nodeType": "YulIdentifier",
																"src": "3527:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3520:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3520:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3478:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3496:5:7",
														"nodeType": "YulTypedName",
														"src": "3496:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3506:3:7",
														"nodeType": "YulTypedName",
														"src": "3506:3:7",
														"type": ""
													}
												],
												"src": "3478:60:7"
											},
											{
												"body": {
													"nativeSrc": "3604:82:7",
													"nodeType": "YulBlock",
													"src": "3604:82:7",
													"statements": [
														{
															"nativeSrc": "3614:66:7",
															"nodeType": "YulAssignment",
															"src": "3614:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3672:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3672:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "3654:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "3654:17:7"
																				},
																				"nativeSrc": "3654:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3654:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3645:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "3645:8:7"
																		},
																		"nativeSrc": "3645:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3645:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3627:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "3627:17:7"
																},
																"nativeSrc": "3627:53:7",
																"nodeType": "YulFunctionCall",
																"src": "3627:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3614:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "3614:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "3544:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3584:5:7",
														"nodeType": "YulTypedName",
														"src": "3584:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3594:9:7",
														"nodeType": "YulTypedName",
														"src": "3594:9:7",
														"type": ""
													}
												],
												"src": "3544:142:7"
											},
											{
												"body": {
													"nativeSrc": "3752:66:7",
													"nodeType": "YulBlock",
													"src": "3752:66:7",
													"statements": [
														{
															"nativeSrc": "3762:50:7",
															"nodeType": "YulAssignment",
															"src": "3762:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3806:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3806:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "3775:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "3775:30:7"
																},
																"nativeSrc": "3775:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3775:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3762:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "3762:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "3692:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3732:5:7",
														"nodeType": "YulTypedName",
														"src": "3732:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3742:9:7",
														"nodeType": "YulTypedName",
														"src": "3742:9:7",
														"type": ""
													}
												],
												"src": "3692:126:7"
											},
											{
												"body": {
													"nativeSrc": "3898:66:7",
													"nodeType": "YulBlock",
													"src": "3898:66:7",
													"statements": [
														{
															"nativeSrc": "3908:50:7",
															"nodeType": "YulAssignment",
															"src": "3908:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3952:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3952:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "3921:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "3921:30:7"
																},
																"nativeSrc": "3921:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3921:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3908:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "3908:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$225_to_t_address",
												"nativeSrc": "3824:140:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3878:5:7",
														"nodeType": "YulTypedName",
														"src": "3878:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3888:9:7",
														"nodeType": "YulTypedName",
														"src": "3888:9:7",
														"type": ""
													}
												],
												"src": "3824:140:7"
											},
											{
												"body": {
													"nativeSrc": "4049:80:7",
													"nodeType": "YulBlock",
													"src": "4049:80:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4066:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4066:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4116:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4116:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$225_to_t_address",
																			"nativeSrc": "4071:44:7",
																			"nodeType": "YulIdentifier",
																			"src": "4071:44:7"
																		},
																		"nativeSrc": "4071:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4071:51:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4059:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4059:6:7"
																},
																"nativeSrc": "4059:64:7",
																"nodeType": "YulFunctionCall",
																"src": "4059:64:7"
															},
															"nativeSrc": "4059:64:7",
															"nodeType": "YulExpressionStatement",
															"src": "4059:64:7"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack",
												"nativeSrc": "3970:159:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4037:5:7",
														"nodeType": "YulTypedName",
														"src": "4037:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4044:3:7",
														"nodeType": "YulTypedName",
														"src": "4044:3:7",
														"type": ""
													}
												],
												"src": "3970:159:7"
											},
											{
												"body": {
													"nativeSrc": "4247:138:7",
													"nodeType": "YulBlock",
													"src": "4247:138:7",
													"statements": [
														{
															"nativeSrc": "4257:26:7",
															"nodeType": "YulAssignment",
															"src": "4257:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4269:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4269:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4280:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4280:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4265:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4265:3:7"
																},
																"nativeSrc": "4265:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4265:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4257:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4257:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4351:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4351:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4364:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4364:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4375:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4375:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4360:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4360:3:7"
																		},
																		"nativeSrc": "4360:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4360:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack",
																	"nativeSrc": "4293:57:7",
																	"nodeType": "YulIdentifier",
																	"src": "4293:57:7"
																},
																"nativeSrc": "4293:85:7",
																"nodeType": "YulFunctionCall",
																"src": "4293:85:7"
															},
															"nativeSrc": "4293:85:7",
															"nodeType": "YulExpressionStatement",
															"src": "4293:85:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed",
												"nativeSrc": "4135:250:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4219:9:7",
														"nodeType": "YulTypedName",
														"src": "4219:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4231:6:7",
														"nodeType": "YulTypedName",
														"src": "4231:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4242:4:7",
														"nodeType": "YulTypedName",
														"src": "4242:4:7",
														"type": ""
													}
												],
												"src": "4135:250:7"
											},
											{
												"body": {
													"nativeSrc": "4454:80:7",
													"nodeType": "YulBlock",
													"src": "4454:80:7",
													"statements": [
														{
															"nativeSrc": "4464:22:7",
															"nodeType": "YulAssignment",
															"src": "4464:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4479:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4479:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4473:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4473:5:7"
																},
																"nativeSrc": "4473:13:7",
																"nodeType": "YulFunctionCall",
																"src": "4473:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4464:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4464:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4522:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4522:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4495:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "4495:26:7"
																},
																"nativeSrc": "4495:33:7",
																"nodeType": "YulFunctionCall",
																"src": "4495:33:7"
															},
															"nativeSrc": "4495:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "4495:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "4391:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4432:6:7",
														"nodeType": "YulTypedName",
														"src": "4432:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4440:3:7",
														"nodeType": "YulTypedName",
														"src": "4440:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4448:5:7",
														"nodeType": "YulTypedName",
														"src": "4448:5:7",
														"type": ""
													}
												],
												"src": "4391:143:7"
											},
											{
												"body": {
													"nativeSrc": "4617:274:7",
													"nodeType": "YulBlock",
													"src": "4617:274:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4663:83:7",
																"nodeType": "YulBlock",
																"src": "4663:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4665:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4665:77:7"
																			},
																			"nativeSrc": "4665:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4665:79:7"
																		},
																		"nativeSrc": "4665:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4665:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4638:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4638:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4647:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4647:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4634:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4634:3:7"
																		},
																		"nativeSrc": "4634:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4634:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4659:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4659:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4630:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4630:3:7"
																},
																"nativeSrc": "4630:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4630:32:7"
															},
															"nativeSrc": "4627:119:7",
															"nodeType": "YulIf",
															"src": "4627:119:7"
														},
														{
															"nativeSrc": "4756:128:7",
															"nodeType": "YulBlock",
															"src": "4756:128:7",
															"statements": [
																{
																	"nativeSrc": "4771:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4771:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4785:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4785:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4775:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4775:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4800:74:7",
																	"nodeType": "YulAssignment",
																	"src": "4800:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4846:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4846:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4857:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4857:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4842:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4842:3:7"
																				},
																				"nativeSrc": "4842:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4842:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4866:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4866:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "4810:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "4810:31:7"
																		},
																		"nativeSrc": "4810:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4810:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4800:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4800:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "4540:351:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4587:9:7",
														"nodeType": "YulTypedName",
														"src": "4587:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4598:7:7",
														"nodeType": "YulTypedName",
														"src": "4598:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4610:6:7",
														"nodeType": "YulTypedName",
														"src": "4610:6:7",
														"type": ""
													}
												],
												"src": "4540:351:7"
											},
											{
												"body": {
													"nativeSrc": "4993:73:7",
													"nodeType": "YulBlock",
													"src": "4993:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5010:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5010:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5015:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5015:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5003:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5003:6:7"
																},
																"nativeSrc": "5003:19:7",
																"nodeType": "YulFunctionCall",
																"src": "5003:19:7"
															},
															"nativeSrc": "5003:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "5003:19:7"
														},
														{
															"nativeSrc": "5031:29:7",
															"nodeType": "YulAssignment",
															"src": "5031:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5050:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5050:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5055:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5055:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5046:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5046:3:7"
																},
																"nativeSrc": "5046:14:7",
																"nodeType": "YulFunctionCall",
																"src": "5046:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5031:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "5031:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4897:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4965:3:7",
														"nodeType": "YulTypedName",
														"src": "4965:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4970:6:7",
														"nodeType": "YulTypedName",
														"src": "4970:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4981:11:7",
														"nodeType": "YulTypedName",
														"src": "4981:11:7",
														"type": ""
													}
												],
												"src": "4897:169:7"
											},
											{
												"body": {
													"nativeSrc": "5178:119:7",
													"nodeType": "YulBlock",
													"src": "5178:119:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5200:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5200:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5208:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5208:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5196:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5196:3:7"
																		},
																		"nativeSrc": "5196:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5196:14:7"
																	},
																	{
																		"hexValue": "596f75206d757374206f776e207468652070726f6475637420746f2072656379",
																		"kind": "string",
																		"nativeSrc": "5212:34:7",
																		"nodeType": "YulLiteral",
																		"src": "5212:34:7",
																		"type": "",
																		"value": "You must own the product to recy"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5189:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5189:6:7"
																},
																"nativeSrc": "5189:58:7",
																"nodeType": "YulFunctionCall",
																"src": "5189:58:7"
															},
															"nativeSrc": "5189:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "5189:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5268:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5268:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5276:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5276:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5264:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5264:3:7"
																		},
																		"nativeSrc": "5264:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5264:15:7"
																	},
																	{
																		"hexValue": "636c65206974",
																		"kind": "string",
																		"nativeSrc": "5281:8:7",
																		"nodeType": "YulLiteral",
																		"src": "5281:8:7",
																		"type": "",
																		"value": "cle it"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5257:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5257:6:7"
																},
																"nativeSrc": "5257:33:7",
																"nodeType": "YulFunctionCall",
																"src": "5257:33:7"
															},
															"nativeSrc": "5257:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "5257:33:7"
														}
													]
												},
												"name": "store_literal_in_memory_2da2db0404507227023dd9f195d6179e0c85c03033a3bbf7dafc83719096b4a5",
												"nativeSrc": "5072:225:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5170:6:7",
														"nodeType": "YulTypedName",
														"src": "5170:6:7",
														"type": ""
													}
												],
												"src": "5072:225:7"
											},
											{
												"body": {
													"nativeSrc": "5449:220:7",
													"nodeType": "YulBlock",
													"src": "5449:220:7",
													"statements": [
														{
															"nativeSrc": "5459:74:7",
															"nodeType": "YulAssignment",
															"src": "5459:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5525:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5525:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5530:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5530:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5466:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "5466:58:7"
																},
																"nativeSrc": "5466:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5466:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5459:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5459:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5631:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5631:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2da2db0404507227023dd9f195d6179e0c85c03033a3bbf7dafc83719096b4a5",
																	"nativeSrc": "5542:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "5542:88:7"
																},
																"nativeSrc": "5542:93:7",
																"nodeType": "YulFunctionCall",
																"src": "5542:93:7"
															},
															"nativeSrc": "5542:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "5542:93:7"
														},
														{
															"nativeSrc": "5644:19:7",
															"nodeType": "YulAssignment",
															"src": "5644:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5655:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5655:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5660:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5660:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5651:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5651:3:7"
																},
																"nativeSrc": "5651:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5651:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5644:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5644:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2da2db0404507227023dd9f195d6179e0c85c03033a3bbf7dafc83719096b4a5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5303:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5437:3:7",
														"nodeType": "YulTypedName",
														"src": "5437:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5445:3:7",
														"nodeType": "YulTypedName",
														"src": "5445:3:7",
														"type": ""
													}
												],
												"src": "5303:366:7"
											},
											{
												"body": {
													"nativeSrc": "5846:248:7",
													"nodeType": "YulBlock",
													"src": "5846:248:7",
													"statements": [
														{
															"nativeSrc": "5856:26:7",
															"nodeType": "YulAssignment",
															"src": "5856:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5868:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5868:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5879:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5879:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5864:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5864:3:7"
																},
																"nativeSrc": "5864:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5864:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5856:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5856:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5903:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5903:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5914:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5914:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5899:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5899:3:7"
																		},
																		"nativeSrc": "5899:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5899:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5922:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5922:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5928:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5928:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5918:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5918:3:7"
																		},
																		"nativeSrc": "5918:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5918:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5892:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5892:6:7"
																},
																"nativeSrc": "5892:47:7",
																"nodeType": "YulFunctionCall",
																"src": "5892:47:7"
															},
															"nativeSrc": "5892:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "5892:47:7"
														},
														{
															"nativeSrc": "5948:139:7",
															"nodeType": "YulAssignment",
															"src": "5948:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6082:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6082:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2da2db0404507227023dd9f195d6179e0c85c03033a3bbf7dafc83719096b4a5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5956:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "5956:124:7"
																},
																"nativeSrc": "5956:131:7",
																"nodeType": "YulFunctionCall",
																"src": "5956:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5948:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5948:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2da2db0404507227023dd9f195d6179e0c85c03033a3bbf7dafc83719096b4a5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5675:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5826:9:7",
														"nodeType": "YulTypedName",
														"src": "5826:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5841:4:7",
														"nodeType": "YulTypedName",
														"src": "5841:4:7",
														"type": ""
													}
												],
												"src": "5675:419:7"
											},
											{
												"body": {
													"nativeSrc": "6206:119:7",
													"nodeType": "YulBlock",
													"src": "6206:119:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6228:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6228:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6236:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6236:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6224:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6224:3:7"
																		},
																		"nativeSrc": "6224:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6224:14:7"
																	},
																	{
																		"hexValue": "546869732070726f647563742068617320616c7265616479206265656e207265",
																		"kind": "string",
																		"nativeSrc": "6240:34:7",
																		"nodeType": "YulLiteral",
																		"src": "6240:34:7",
																		"type": "",
																		"value": "This product has already been re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6217:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6217:6:7"
																},
																"nativeSrc": "6217:58:7",
																"nodeType": "YulFunctionCall",
																"src": "6217:58:7"
															},
															"nativeSrc": "6217:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "6217:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6296:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6296:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6304:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6304:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6292:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6292:3:7"
																		},
																		"nativeSrc": "6292:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6292:15:7"
																	},
																	{
																		"hexValue": "6379636c6564",
																		"kind": "string",
																		"nativeSrc": "6309:8:7",
																		"nodeType": "YulLiteral",
																		"src": "6309:8:7",
																		"type": "",
																		"value": "cycled"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6285:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6285:6:7"
																},
																"nativeSrc": "6285:33:7",
																"nodeType": "YulFunctionCall",
																"src": "6285:33:7"
															},
															"nativeSrc": "6285:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "6285:33:7"
														}
													]
												},
												"name": "store_literal_in_memory_cce2530319b152d2026bbe9448a787f6729d8df990f9962cfbcb0ab16b6f5dd1",
												"nativeSrc": "6100:225:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6198:6:7",
														"nodeType": "YulTypedName",
														"src": "6198:6:7",
														"type": ""
													}
												],
												"src": "6100:225:7"
											},
											{
												"body": {
													"nativeSrc": "6477:220:7",
													"nodeType": "YulBlock",
													"src": "6477:220:7",
													"statements": [
														{
															"nativeSrc": "6487:74:7",
															"nodeType": "YulAssignment",
															"src": "6487:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6553:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6553:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6558:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6558:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6494:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "6494:58:7"
																},
																"nativeSrc": "6494:67:7",
																"nodeType": "YulFunctionCall",
																"src": "6494:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6487:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6487:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6659:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6659:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cce2530319b152d2026bbe9448a787f6729d8df990f9962cfbcb0ab16b6f5dd1",
																	"nativeSrc": "6570:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "6570:88:7"
																},
																"nativeSrc": "6570:93:7",
																"nodeType": "YulFunctionCall",
																"src": "6570:93:7"
															},
															"nativeSrc": "6570:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "6570:93:7"
														},
														{
															"nativeSrc": "6672:19:7",
															"nodeType": "YulAssignment",
															"src": "6672:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6683:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6683:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6688:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6688:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6679:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6679:3:7"
																},
																"nativeSrc": "6679:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6679:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6672:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6672:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cce2530319b152d2026bbe9448a787f6729d8df990f9962cfbcb0ab16b6f5dd1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6331:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6465:3:7",
														"nodeType": "YulTypedName",
														"src": "6465:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6473:3:7",
														"nodeType": "YulTypedName",
														"src": "6473:3:7",
														"type": ""
													}
												],
												"src": "6331:366:7"
											},
											{
												"body": {
													"nativeSrc": "6874:248:7",
													"nodeType": "YulBlock",
													"src": "6874:248:7",
													"statements": [
														{
															"nativeSrc": "6884:26:7",
															"nodeType": "YulAssignment",
															"src": "6884:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6896:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6896:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6907:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6907:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6892:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6892:3:7"
																},
																"nativeSrc": "6892:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6892:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6884:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6884:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6931:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6931:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6942:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6942:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6927:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6927:3:7"
																		},
																		"nativeSrc": "6927:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6927:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6950:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "6950:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6956:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6956:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6946:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6946:3:7"
																		},
																		"nativeSrc": "6946:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6946:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6920:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6920:6:7"
																},
																"nativeSrc": "6920:47:7",
																"nodeType": "YulFunctionCall",
																"src": "6920:47:7"
															},
															"nativeSrc": "6920:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "6920:47:7"
														},
														{
															"nativeSrc": "6976:139:7",
															"nodeType": "YulAssignment",
															"src": "6976:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7110:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7110:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cce2530319b152d2026bbe9448a787f6729d8df990f9962cfbcb0ab16b6f5dd1_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6984:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "6984:124:7"
																},
																"nativeSrc": "6984:131:7",
																"nodeType": "YulFunctionCall",
																"src": "6984:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6976:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6976:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cce2530319b152d2026bbe9448a787f6729d8df990f9962cfbcb0ab16b6f5dd1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6703:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6854:9:7",
														"nodeType": "YulTypedName",
														"src": "6854:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6869:4:7",
														"nodeType": "YulTypedName",
														"src": "6869:4:7",
														"type": ""
													}
												],
												"src": "6703:419:7"
											},
											{
												"body": {
													"nativeSrc": "7254:206:7",
													"nodeType": "YulBlock",
													"src": "7254:206:7",
													"statements": [
														{
															"nativeSrc": "7264:26:7",
															"nodeType": "YulAssignment",
															"src": "7264:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7276:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7276:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7287:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7287:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7272:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7272:3:7"
																},
																"nativeSrc": "7272:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7272:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7264:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7264:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7344:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7344:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7357:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7357:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7368:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7368:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7353:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7353:3:7"
																		},
																		"nativeSrc": "7353:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7353:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7300:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7300:43:7"
																},
																"nativeSrc": "7300:71:7",
																"nodeType": "YulFunctionCall",
																"src": "7300:71:7"
															},
															"nativeSrc": "7300:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "7300:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7425:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7425:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7438:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7438:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7449:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7449:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7434:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7434:3:7"
																		},
																		"nativeSrc": "7434:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7434:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7381:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7381:43:7"
																},
																"nativeSrc": "7381:72:7",
																"nodeType": "YulFunctionCall",
																"src": "7381:72:7"
															},
															"nativeSrc": "7381:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "7381:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7128:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7218:9:7",
														"nodeType": "YulTypedName",
														"src": "7218:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7230:6:7",
														"nodeType": "YulTypedName",
														"src": "7230:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7238:6:7",
														"nodeType": "YulTypedName",
														"src": "7238:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7249:4:7",
														"nodeType": "YulTypedName",
														"src": "7249:4:7",
														"type": ""
													}
												],
												"src": "7128:332:7"
											},
											{
												"body": {
													"nativeSrc": "7506:76:7",
													"nodeType": "YulBlock",
													"src": "7506:76:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7560:16:7",
																"nodeType": "YulBlock",
																"src": "7560:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7569:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7569:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7572:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7572:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7562:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7562:6:7"
																			},
																			"nativeSrc": "7562:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7562:12:7"
																		},
																		"nativeSrc": "7562:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7562:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7529:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "7529:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7551:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "7551:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "7536:14:7",
																					"nodeType": "YulIdentifier",
																					"src": "7536:14:7"
																				},
																				"nativeSrc": "7536:21:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7536:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7526:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "7526:2:7"
																		},
																		"nativeSrc": "7526:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7526:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7519:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7519:6:7"
																},
																"nativeSrc": "7519:40:7",
																"nodeType": "YulFunctionCall",
																"src": "7519:40:7"
															},
															"nativeSrc": "7516:60:7",
															"nodeType": "YulIf",
															"src": "7516:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "7466:116:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7499:5:7",
														"nodeType": "YulTypedName",
														"src": "7499:5:7",
														"type": ""
													}
												],
												"src": "7466:116:7"
											},
											{
												"body": {
													"nativeSrc": "7648:77:7",
													"nodeType": "YulBlock",
													"src": "7648:77:7",
													"statements": [
														{
															"nativeSrc": "7658:22:7",
															"nodeType": "YulAssignment",
															"src": "7658:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7673:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7673:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7667:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7667:5:7"
																},
																"nativeSrc": "7667:13:7",
																"nodeType": "YulFunctionCall",
																"src": "7667:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7658:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7658:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7713:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7713:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "7689:23:7",
																	"nodeType": "YulIdentifier",
																	"src": "7689:23:7"
																},
																"nativeSrc": "7689:30:7",
																"nodeType": "YulFunctionCall",
																"src": "7689:30:7"
															},
															"nativeSrc": "7689:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "7689:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "7588:137:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7626:6:7",
														"nodeType": "YulTypedName",
														"src": "7626:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7634:3:7",
														"nodeType": "YulTypedName",
														"src": "7634:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7642:5:7",
														"nodeType": "YulTypedName",
														"src": "7642:5:7",
														"type": ""
													}
												],
												"src": "7588:137:7"
											},
											{
												"body": {
													"nativeSrc": "7805:271:7",
													"nodeType": "YulBlock",
													"src": "7805:271:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7851:83:7",
																"nodeType": "YulBlock",
																"src": "7851:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7853:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7853:77:7"
																			},
																			"nativeSrc": "7853:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7853:79:7"
																		},
																		"nativeSrc": "7853:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7853:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7826:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7826:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7835:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7835:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7822:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7822:3:7"
																		},
																		"nativeSrc": "7822:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7822:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7847:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7847:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7818:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7818:3:7"
																},
																"nativeSrc": "7818:32:7",
																"nodeType": "YulFunctionCall",
																"src": "7818:32:7"
															},
															"nativeSrc": "7815:119:7",
															"nodeType": "YulIf",
															"src": "7815:119:7"
														},
														{
															"nativeSrc": "7944:125:7",
															"nodeType": "YulBlock",
															"src": "7944:125:7",
															"statements": [
																{
																	"nativeSrc": "7959:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7959:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7973:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7973:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7963:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7963:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7988:71:7",
																	"nodeType": "YulAssignment",
																	"src": "7988:71:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8031:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8031:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8042:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8042:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8027:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8027:3:7"
																				},
																				"nativeSrc": "8027:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8027:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8051:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8051:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "7998:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "7998:28:7"
																		},
																		"nativeSrc": "7998:61:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7998:61:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7988:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7988:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "7731:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7775:9:7",
														"nodeType": "YulTypedName",
														"src": "7775:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7786:7:7",
														"nodeType": "YulTypedName",
														"src": "7786:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7798:6:7",
														"nodeType": "YulTypedName",
														"src": "7798:6:7",
														"type": ""
													}
												],
												"src": "7731:345:7"
											},
											{
												"body": {
													"nativeSrc": "8188:64:7",
													"nodeType": "YulBlock",
													"src": "8188:64:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8210:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8210:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8218:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8218:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8206:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8206:3:7"
																		},
																		"nativeSrc": "8206:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8206:14:7"
																	},
																	{
																		"hexValue": "4e6f207265776172647320617661696c61626c65",
																		"kind": "string",
																		"nativeSrc": "8222:22:7",
																		"nodeType": "YulLiteral",
																		"src": "8222:22:7",
																		"type": "",
																		"value": "No rewards available"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8199:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8199:6:7"
																},
																"nativeSrc": "8199:46:7",
																"nodeType": "YulFunctionCall",
																"src": "8199:46:7"
															},
															"nativeSrc": "8199:46:7",
															"nodeType": "YulExpressionStatement",
															"src": "8199:46:7"
														}
													]
												},
												"name": "store_literal_in_memory_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040",
												"nativeSrc": "8082:170:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8180:6:7",
														"nodeType": "YulTypedName",
														"src": "8180:6:7",
														"type": ""
													}
												],
												"src": "8082:170:7"
											},
											{
												"body": {
													"nativeSrc": "8404:220:7",
													"nodeType": "YulBlock",
													"src": "8404:220:7",
													"statements": [
														{
															"nativeSrc": "8414:74:7",
															"nodeType": "YulAssignment",
															"src": "8414:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8480:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8480:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8485:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8485:2:7",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8421:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "8421:58:7"
																},
																"nativeSrc": "8421:67:7",
																"nodeType": "YulFunctionCall",
																"src": "8421:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8414:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8414:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8586:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8586:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040",
																	"nativeSrc": "8497:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "8497:88:7"
																},
																"nativeSrc": "8497:93:7",
																"nodeType": "YulFunctionCall",
																"src": "8497:93:7"
															},
															"nativeSrc": "8497:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "8497:93:7"
														},
														{
															"nativeSrc": "8599:19:7",
															"nodeType": "YulAssignment",
															"src": "8599:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8610:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8610:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8615:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8615:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8606:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8606:3:7"
																},
																"nativeSrc": "8606:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8606:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8599:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8599:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8258:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8392:3:7",
														"nodeType": "YulTypedName",
														"src": "8392:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8400:3:7",
														"nodeType": "YulTypedName",
														"src": "8400:3:7",
														"type": ""
													}
												],
												"src": "8258:366:7"
											},
											{
												"body": {
													"nativeSrc": "8801:248:7",
													"nodeType": "YulBlock",
													"src": "8801:248:7",
													"statements": [
														{
															"nativeSrc": "8811:26:7",
															"nodeType": "YulAssignment",
															"src": "8811:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8823:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8823:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8834:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8834:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8819:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8819:3:7"
																},
																"nativeSrc": "8819:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8819:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8811:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8811:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8858:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8858:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8869:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8869:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8854:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8854:3:7"
																		},
																		"nativeSrc": "8854:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8854:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8877:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8877:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8883:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8883:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8873:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8873:3:7"
																		},
																		"nativeSrc": "8873:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8873:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8847:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8847:6:7"
																},
																"nativeSrc": "8847:47:7",
																"nodeType": "YulFunctionCall",
																"src": "8847:47:7"
															},
															"nativeSrc": "8847:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "8847:47:7"
														},
														{
															"nativeSrc": "8903:139:7",
															"nodeType": "YulAssignment",
															"src": "8903:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9037:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9037:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8911:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "8911:124:7"
																},
																"nativeSrc": "8911:131:7",
																"nodeType": "YulFunctionCall",
																"src": "8911:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8903:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8903:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8630:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8781:9:7",
														"nodeType": "YulTypedName",
														"src": "8781:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8796:4:7",
														"nodeType": "YulTypedName",
														"src": "8796:4:7",
														"type": ""
													}
												],
												"src": "8630:419:7"
											},
											{
												"body": {
													"nativeSrc": "9083:152:7",
													"nodeType": "YulBlock",
													"src": "9083:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9100:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9100:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9103:77:7",
																		"nodeType": "YulLiteral",
																		"src": "9103:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9093:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9093:6:7"
																},
																"nativeSrc": "9093:88:7",
																"nodeType": "YulFunctionCall",
																"src": "9093:88:7"
															},
															"nativeSrc": "9093:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "9093:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9197:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9200:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9200:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9190:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9190:6:7"
																},
																"nativeSrc": "9190:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9190:15:7"
															},
															"nativeSrc": "9190:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9190:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9221:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9221:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9224:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9224:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9214:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9214:6:7"
																},
																"nativeSrc": "9214:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9214:15:7"
															},
															"nativeSrc": "9214:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9214:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9055:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "9055:180:7"
											},
											{
												"body": {
													"nativeSrc": "9285:147:7",
													"nodeType": "YulBlock",
													"src": "9285:147:7",
													"statements": [
														{
															"nativeSrc": "9295:25:7",
															"nodeType": "YulAssignment",
															"src": "9295:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9318:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9318:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9300:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9300:17:7"
																},
																"nativeSrc": "9300:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9300:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9295:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9295:1:7"
																}
															]
														},
														{
															"nativeSrc": "9329:25:7",
															"nodeType": "YulAssignment",
															"src": "9329:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9352:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9352:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9334:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9334:17:7"
																},
																"nativeSrc": "9334:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9334:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9329:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9329:1:7"
																}
															]
														},
														{
															"nativeSrc": "9363:16:7",
															"nodeType": "YulAssignment",
															"src": "9363:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9374:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9374:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9377:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9377:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9370:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9370:3:7"
																},
																"nativeSrc": "9370:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9370:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9363:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9363:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9403:22:7",
																"nodeType": "YulBlock",
																"src": "9403:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9405:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9405:16:7"
																			},
																			"nativeSrc": "9405:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9405:18:7"
																		},
																		"nativeSrc": "9405:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9405:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9395:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9395:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9398:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9398:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9392:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "9392:2:7"
																},
																"nativeSrc": "9392:10:7",
																"nodeType": "YulFunctionCall",
																"src": "9392:10:7"
															},
															"nativeSrc": "9389:36:7",
															"nodeType": "YulIf",
															"src": "9389:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9241:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9272:1:7",
														"nodeType": "YulTypedName",
														"src": "9272:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9275:1:7",
														"nodeType": "YulTypedName",
														"src": "9275:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9281:3:7",
														"nodeType": "YulTypedName",
														"src": "9281:3:7",
														"type": ""
													}
												],
												"src": "9241:191:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$225_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$225_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_2da2db0404507227023dd9f195d6179e0c85c03033a3bbf7dafc83719096b4a5(memPtr) {\n\n        mstore(add(memPtr, 0), \"You must own the product to recy\")\n\n        mstore(add(memPtr, 32), \"cle it\")\n\n    }\n\n    function abi_encode_t_stringliteral_2da2db0404507227023dd9f195d6179e0c85c03033a3bbf7dafc83719096b4a5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_2da2db0404507227023dd9f195d6179e0c85c03033a3bbf7dafc83719096b4a5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2da2db0404507227023dd9f195d6179e0c85c03033a3bbf7dafc83719096b4a5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2da2db0404507227023dd9f195d6179e0c85c03033a3bbf7dafc83719096b4a5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cce2530319b152d2026bbe9448a787f6729d8df990f9962cfbcb0ab16b6f5dd1(memPtr) {\n\n        mstore(add(memPtr, 0), \"This product has already been re\")\n\n        mstore(add(memPtr, 32), \"cycled\")\n\n    }\n\n    function abi_encode_t_stringliteral_cce2530319b152d2026bbe9448a787f6729d8df990f9962cfbcb0ab16b6f5dd1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_cce2530319b152d2026bbe9448a787f6729d8df990f9962cfbcb0ab16b6f5dd1(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cce2530319b152d2026bbe9448a787f6729d8df990f9962cfbcb0ab16b6f5dd1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cce2530319b152d2026bbe9448a787f6729d8df990f9962cfbcb0ab16b6f5dd1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040(memPtr) {\n\n        mstore(add(memPtr, 0), \"No rewards available\")\n\n    }\n\n    function abi_encode_t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100b2575f3560e01c80637e1a37861161006f5780637e1a37861461018a5780638da5cb5b146101a85780639ef3a261146101c6578063c7b8981c146101e2578063f2fde38b146101ec578063f7c618c114610208576100b2565b80630660f1e8146100b6578063078b0fb7146100e65780633f608ad21461011657806344301c131461014657806345e1d96014610162578063715018a614610180575b5f80fd5b6100d060048036038101906100cb91906109c1565b610226565b6040516100dd9190610a04565b60405180910390f35b61010060048036038101906100fb91906109c1565b61023b565b60405161010d9190610a04565b60405180910390f35b610130600480360381019061012b9190610a47565b610281565b60405161013d9190610a8c565b60405180910390f35b610160600480360381019061015b9190610aa5565b61029e565b005b61016a610596565b6040516101779190610a04565b60405180910390f35b61018861059c565b005b6101926105af565b60405161019f9190610a04565b60405180910390f35b6101b06105b8565b6040516101bd9190610af2565b60405180910390f35b6101e060048036038101906101db9190610a47565b6105df565b005b6101ea6105f1565b005b610206600480360381019061020191906109c1565b610756565b005b6102106107da565b60405161021d9190610b66565b60405180910390f35b6003602052805f5260405f205f915090505481565b5f60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6002602052805f5260405f205f915054906101000a900460ff1681565b5f8190503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016102f29190610a04565b602060405180830381865afa15801561030d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103319190610b93565b73ffffffffffffffffffffffffffffffffffffffff1614610387576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037e90610c3e565b60405180910390fd5b60025f8481526020019081526020015f205f9054906101000a900460ff16156103e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103dc90610ccc565b60405180910390fd5b600160025f8581526020019081526020015f205f6101000a81548160ff02191690831515021790555061046060045460035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546107ff90919063ffffffff16565b60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb336004546040518363ffffffff1660e01b81526004016104ff929190610cea565b6020604051808303815f875af115801561051b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061053f9190610d3b565b50823373ffffffffffffffffffffffffffffffffffffffff167f080ac4523930bdcc2e85ca0a99da6547ba0d4c3badb2a3693f781d80aa4863dc6004546040516105899190610a04565b60405180910390a3505050565b60045481565b6105a4610814565b6105ad5f61089b565b565b5f600454905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6105e7610814565b8060048190555050565b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8111610674576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066b90610db0565b60405180910390fd5b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610712929190610cea565b6020604051808303815f875af115801561072e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107529190610d3b565b5050565b61075e610814565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107ce575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107c59190610af2565b60405180910390fd5b6107d78161089b565b50565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f818361080c9190610dfb565b905092915050565b61081c61095c565b73ffffffffffffffffffffffffffffffffffffffff1661083a6105b8565b73ffffffffffffffffffffffffffffffffffffffff16146108995761085d61095c565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108909190610af2565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61099082610967565b9050919050565b6109a081610986565b81146109aa575f80fd5b50565b5f813590506109bb81610997565b92915050565b5f602082840312156109d6576109d5610963565b5b5f6109e3848285016109ad565b91505092915050565b5f819050919050565b6109fe816109ec565b82525050565b5f602082019050610a175f8301846109f5565b92915050565b610a26816109ec565b8114610a30575f80fd5b50565b5f81359050610a4181610a1d565b92915050565b5f60208284031215610a5c57610a5b610963565b5b5f610a6984828501610a33565b91505092915050565b5f8115159050919050565b610a8681610a72565b82525050565b5f602082019050610a9f5f830184610a7d565b92915050565b5f8060408385031215610abb57610aba610963565b5b5f610ac885828601610a33565b9250506020610ad9858286016109ad565b9150509250929050565b610aec81610986565b82525050565b5f602082019050610b055f830184610ae3565b92915050565b5f819050919050565b5f610b2e610b29610b2484610967565b610b0b565b610967565b9050919050565b5f610b3f82610b14565b9050919050565b5f610b5082610b35565b9050919050565b610b6081610b46565b82525050565b5f602082019050610b795f830184610b57565b92915050565b5f81519050610b8d81610997565b92915050565b5f60208284031215610ba857610ba7610963565b5b5f610bb584828501610b7f565b91505092915050565b5f82825260208201905092915050565b7f596f75206d757374206f776e207468652070726f6475637420746f20726563795f8201527f636c652069740000000000000000000000000000000000000000000000000000602082015250565b5f610c28602683610bbe565b9150610c3382610bce565b604082019050919050565b5f6020820190508181035f830152610c5581610c1c565b9050919050565b7f546869732070726f647563742068617320616c7265616479206265656e2072655f8201527f6379636c65640000000000000000000000000000000000000000000000000000602082015250565b5f610cb6602683610bbe565b9150610cc182610c5c565b604082019050919050565b5f6020820190508181035f830152610ce381610caa565b9050919050565b5f604082019050610cfd5f830185610ae3565b610d0a60208301846109f5565b9392505050565b610d1a81610a72565b8114610d24575f80fd5b50565b5f81519050610d3581610d11565b92915050565b5f60208284031215610d5057610d4f610963565b5b5f610d5d84828501610d27565b91505092915050565b7f4e6f207265776172647320617661696c61626c650000000000000000000000005f82015250565b5f610d9a601483610bbe565b9150610da582610d66565b602082019050919050565b5f6020820190508181035f830152610dc781610d8e565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610e05826109ec565b9150610e10836109ec565b9250828201905080821115610e2857610e27610dce565b5b9291505056fea2646970667358221220eb049350ba0ddf1517e075ccc9736823b462d616e2a54815381fc801fb4f205e64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E1A3786 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x7E1A3786 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x9EF3A261 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC7B8981C EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x208 JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x660F1E8 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x78B0FB7 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x3F608AD2 EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x44301C13 EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x45E1D960 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x180 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x9C1 JUMP JUMPDEST PUSH2 0x226 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x9C1 JUMP JUMPDEST PUSH2 0x23B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10D SWAP2 SWAP1 PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x130 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12B SWAP2 SWAP1 PUSH2 0xA47 JUMP JUMPDEST PUSH2 0x281 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13D SWAP2 SWAP1 PUSH2 0xA8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x160 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15B SWAP2 SWAP1 PUSH2 0xAA5 JUMP JUMPDEST PUSH2 0x29E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16A PUSH2 0x596 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x177 SWAP2 SWAP1 PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH2 0x59C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x192 PUSH2 0x5AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH2 0x5B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0xAF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0xA47 JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EA PUSH2 0x5F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x206 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x201 SWAP2 SWAP1 PUSH2 0x9C1 JUMP JUMPDEST PUSH2 0x756 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x210 PUSH2 0x7DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0xB66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x30D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x331 SWAP2 SWAP1 PUSH2 0xB93 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x387 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37E SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DC SWAP1 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x460 PUSH1 0x4 SLOAD PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x7FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FF SWAP3 SWAP2 SWAP1 PUSH2 0xCEA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x51B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x53F SWAP2 SWAP1 PUSH2 0xD3B JUMP JUMPDEST POP DUP3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x80AC4523930BDCC2E85CA0A99DA6547BA0D4C3BADB2A3693F781D80AA4863DC PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH2 0x589 SWAP2 SWAP1 PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x5A4 PUSH2 0x814 JUMP JUMPDEST PUSH2 0x5AD PUSH0 PUSH2 0x89B JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5E7 PUSH2 0x814 JUMP JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x674 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x66B SWAP1 PUSH2 0xDB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x712 SWAP3 SWAP2 SWAP1 PUSH2 0xCEA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x72E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x752 SWAP2 SWAP1 PUSH2 0xD3B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x75E PUSH2 0x814 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7CE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C5 SWAP2 SWAP1 PUSH2 0xAF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7D7 DUP2 PUSH2 0x89B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x80C SWAP2 SWAP1 PUSH2 0xDFB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x81C PUSH2 0x95C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x83A PUSH2 0x5B8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x899 JUMPI PUSH2 0x85D PUSH2 0x95C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x890 SWAP2 SWAP1 PUSH2 0xAF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x990 DUP3 PUSH2 0x967 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9A0 DUP2 PUSH2 0x986 JUMP JUMPDEST DUP2 EQ PUSH2 0x9AA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9BB DUP2 PUSH2 0x997 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9D6 JUMPI PUSH2 0x9D5 PUSH2 0x963 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9E3 DUP5 DUP3 DUP6 ADD PUSH2 0x9AD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9FE DUP2 PUSH2 0x9EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA17 PUSH0 DUP4 ADD DUP5 PUSH2 0x9F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA26 DUP2 PUSH2 0x9EC JUMP JUMPDEST DUP2 EQ PUSH2 0xA30 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA41 DUP2 PUSH2 0xA1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA5C JUMPI PUSH2 0xA5B PUSH2 0x963 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA69 DUP5 DUP3 DUP6 ADD PUSH2 0xA33 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA86 DUP2 PUSH2 0xA72 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA9F PUSH0 DUP4 ADD DUP5 PUSH2 0xA7D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xABB JUMPI PUSH2 0xABA PUSH2 0x963 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xAC8 DUP6 DUP3 DUP7 ADD PUSH2 0xA33 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xAD9 DUP6 DUP3 DUP7 ADD PUSH2 0x9AD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xAEC DUP2 PUSH2 0x986 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB05 PUSH0 DUP4 ADD DUP5 PUSH2 0xAE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB2E PUSH2 0xB29 PUSH2 0xB24 DUP5 PUSH2 0x967 JUMP JUMPDEST PUSH2 0xB0B JUMP JUMPDEST PUSH2 0x967 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB3F DUP3 PUSH2 0xB14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB50 DUP3 PUSH2 0xB35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB60 DUP2 PUSH2 0xB46 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB79 PUSH0 DUP4 ADD DUP5 PUSH2 0xB57 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xB8D DUP2 PUSH2 0x997 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBA8 JUMPI PUSH2 0xBA7 PUSH2 0x963 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBB5 DUP5 DUP3 DUP6 ADD PUSH2 0xB7F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F75206D757374206F776E207468652070726F6475637420746F2072656379 PUSH0 DUP3 ADD MSTORE PUSH32 0x636C652069740000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC28 PUSH1 0x26 DUP4 PUSH2 0xBBE JUMP JUMPDEST SWAP2 POP PUSH2 0xC33 DUP3 PUSH2 0xBCE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC55 DUP2 PUSH2 0xC1C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546869732070726F647563742068617320616C7265616479206265656E207265 PUSH0 DUP3 ADD MSTORE PUSH32 0x6379636C65640000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xCB6 PUSH1 0x26 DUP4 PUSH2 0xBBE JUMP JUMPDEST SWAP2 POP PUSH2 0xCC1 DUP3 PUSH2 0xC5C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xCE3 DUP2 PUSH2 0xCAA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xCFD PUSH0 DUP4 ADD DUP6 PUSH2 0xAE3 JUMP JUMPDEST PUSH2 0xD0A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x9F5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xD1A DUP2 PUSH2 0xA72 JUMP JUMPDEST DUP2 EQ PUSH2 0xD24 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xD35 DUP2 PUSH2 0xD11 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD50 JUMPI PUSH2 0xD4F PUSH2 0x963 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD5D DUP5 DUP3 DUP6 ADD PUSH2 0xD27 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F207265776172647320617661696C61626C65000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD9A PUSH1 0x14 DUP4 PUSH2 0xBBE JUMP JUMPDEST SWAP2 POP PUSH2 0xDA5 DUP3 PUSH2 0xD66 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDC7 DUP2 PUSH2 0xD8E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE05 DUP3 PUSH2 0x9EC JUMP JUMPDEST SWAP2 POP PUSH2 0xE10 DUP4 PUSH2 0x9EC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE28 JUMPI PUSH2 0xE27 PUSH2 0xDCE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB DIV SWAP4 POP 0xBA 0xD 0xDF ISZERO OR 0xE0 PUSH22 0xCCC9736823B462D616E2A54815381FC801FB4F205E64 PUSH20 0x6F6C634300081800330000000000000000000000 ",
							"sourceMap": "286:3269:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;544:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3442:111;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;490:48;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1631:754;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;656:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;3166:99:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2548:119:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2747:288;;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;393:25:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;544:46;;;;;;;;;;;;;;;;;:::o;3442:111::-;3503:7;3529:11;:17;3541:4;3529:17;;;;;;;;;;;;;;;;3522:24;;3442:111;;;:::o;490:48::-;;;;;;;;;;;;;;;;;;;;;;:::o;1631:754::-;1712:11;1734;1712:34;;1875:10;1851:34;;:3;:11;;;1863:7;1851:20;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:34;;;1843:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;1947:16;:25;1964:7;1947:25;;;;;;;;;;;;;;;;;;;;;1946:26;1938:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;2094:4;2066:16;:25;2083:7;2066:25;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;2197:47;2225:18;;2197:11;:23;2209:10;2197:23;;;;;;;;;;;;;;;;:27;;:47;;;;:::i;:::-;2171:11;:23;2183:10;2171:23;;;;;;;;;;;;;;;:73;;;;2254:11;;;;;;;;;;;:20;;;2275:10;2287:18;;2254:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2350:7;2338:10;2322:56;;;2359:18;;2322:56;;;;;;:::i;:::-;;;;;;;;1702:683;1631:754;;:::o;656:33::-;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;3166:99:6:-;3214:7;3240:18;;3233:25;;3166:99;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2548:119:6:-;1531:13:0;:11;:13::i;:::-;2647::6::1;2626:18;:34;;;;2548:119:::0;:::o;2747:288::-;2793:14;2810:11;:23;2822:10;2810:23;;;;;;;;;;;;;;;;2793:40;;2860:1;2851:6;:10;2843:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;2977:1;2951:11;:23;2963:10;2951:23;;;;;;;;;;;;;;;:27;;;;2988:11;;;;;;;;;;;:20;;;3009:10;3021:6;2988:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2783:252;2747:288::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;393:25:6:-;;;;;;;;;;;;;:::o;2755:96:5:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:3:-;709:7;735:10;728:17;;656:96;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:329::-;1943:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:119;;;1998:79;;:::i;:::-;1960:119;2118:1;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2089:117;1884:329;;;;:::o;2219:90::-;2253:7;2296:5;2289:13;2282:21;2271:32;;2219:90;;;:::o;2315:109::-;2396:21;2411:5;2396:21;:::i;:::-;2391:3;2384:34;2315:109;;:::o;2430:210::-;2517:4;2555:2;2544:9;2540:18;2532:26;;2568:65;2630:1;2619:9;2615:17;2606:6;2568:65;:::i;:::-;2430:210;;;;:::o;2646:474::-;2714:6;2722;2771:2;2759:9;2750:7;2746:23;2742:32;2739:119;;;2777:79;;:::i;:::-;2739:119;2897:1;2922:53;2967:7;2958:6;2947:9;2943:22;2922:53;:::i;:::-;2912:63;;2868:117;3024:2;3050:53;3095:7;3086:6;3075:9;3071:22;3050:53;:::i;:::-;3040:63;;2995:118;2646:474;;;;;:::o;3126:118::-;3213:24;3231:5;3213:24;:::i;:::-;3208:3;3201:37;3126:118;;:::o;3250:222::-;3343:4;3381:2;3370:9;3366:18;3358:26;;3394:71;3462:1;3451:9;3447:17;3438:6;3394:71;:::i;:::-;3250:222;;;;:::o;3478:60::-;3506:3;3527:5;3520:12;;3478:60;;;:::o;3544:142::-;3594:9;3627:53;3645:34;3654:24;3672:5;3654:24;:::i;:::-;3645:34;:::i;:::-;3627:53;:::i;:::-;3614:66;;3544:142;;;:::o;3692:126::-;3742:9;3775:37;3806:5;3775:37;:::i;:::-;3762:50;;3692:126;;;:::o;3824:140::-;3888:9;3921:37;3952:5;3921:37;:::i;:::-;3908:50;;3824:140;;;:::o;3970:159::-;4071:51;4116:5;4071:51;:::i;:::-;4066:3;4059:64;3970:159;;:::o;4135:250::-;4242:4;4280:2;4269:9;4265:18;4257:26;;4293:85;4375:1;4364:9;4360:17;4351:6;4293:85;:::i;:::-;4135:250;;;;:::o;4391:143::-;4448:5;4479:6;4473:13;4464:22;;4495:33;4522:5;4495:33;:::i;:::-;4391:143;;;;:::o;4540:351::-;4610:6;4659:2;4647:9;4638:7;4634:23;4630:32;4627:119;;;4665:79;;:::i;:::-;4627:119;4785:1;4810:64;4866:7;4857:6;4846:9;4842:22;4810:64;:::i;:::-;4800:74;;4756:128;4540:351;;;;:::o;4897:169::-;4981:11;5015:6;5010:3;5003:19;5055:4;5050:3;5046:14;5031:29;;4897:169;;;;:::o;5072:225::-;5212:34;5208:1;5200:6;5196:14;5189:58;5281:8;5276:2;5268:6;5264:15;5257:33;5072:225;:::o;5303:366::-;5445:3;5466:67;5530:2;5525:3;5466:67;:::i;:::-;5459:74;;5542:93;5631:3;5542:93;:::i;:::-;5660:2;5655:3;5651:12;5644:19;;5303:366;;;:::o;5675:419::-;5841:4;5879:2;5868:9;5864:18;5856:26;;5928:9;5922:4;5918:20;5914:1;5903:9;5899:17;5892:47;5956:131;6082:4;5956:131;:::i;:::-;5948:139;;5675:419;;;:::o;6100:225::-;6240:34;6236:1;6228:6;6224:14;6217:58;6309:8;6304:2;6296:6;6292:15;6285:33;6100:225;:::o;6331:366::-;6473:3;6494:67;6558:2;6553:3;6494:67;:::i;:::-;6487:74;;6570:93;6659:3;6570:93;:::i;:::-;6688:2;6683:3;6679:12;6672:19;;6331:366;;;:::o;6703:419::-;6869:4;6907:2;6896:9;6892:18;6884:26;;6956:9;6950:4;6946:20;6942:1;6931:9;6927:17;6920:47;6984:131;7110:4;6984:131;:::i;:::-;6976:139;;6703:419;;;:::o;7128:332::-;7249:4;7287:2;7276:9;7272:18;7264:26;;7300:71;7368:1;7357:9;7353:17;7344:6;7300:71;:::i;:::-;7381:72;7449:2;7438:9;7434:18;7425:6;7381:72;:::i;:::-;7128:332;;;;;:::o;7466:116::-;7536:21;7551:5;7536:21;:::i;:::-;7529:5;7526:32;7516:60;;7572:1;7569;7562:12;7516:60;7466:116;:::o;7588:137::-;7642:5;7673:6;7667:13;7658:22;;7689:30;7713:5;7689:30;:::i;:::-;7588:137;;;;:::o;7731:345::-;7798:6;7847:2;7835:9;7826:7;7822:23;7818:32;7815:119;;;7853:79;;:::i;:::-;7815:119;7973:1;7998:61;8051:7;8042:6;8031:9;8027:22;7998:61;:::i;:::-;7988:71;;7944:125;7731:345;;;;:::o;8082:170::-;8222:22;8218:1;8210:6;8206:14;8199:46;8082:170;:::o;8258:366::-;8400:3;8421:67;8485:2;8480:3;8421:67;:::i;:::-;8414:74;;8497:93;8586:3;8497:93;:::i;:::-;8615:2;8610:3;8606:12;8599:19;;8258:366;;;:::o;8630:419::-;8796:4;8834:2;8823:9;8819:18;8811:26;;8883:9;8877:4;8873:20;8869:1;8858:9;8854:17;8847:47;8911:131;9037:4;8911:131;:::i;:::-;8903:139;;8630:419;;;:::o;9055:180::-;9103:77;9100:1;9093:88;9200:4;9197:1;9190:15;9224:4;9221:1;9214:15;9241:191;9281:3;9300:20;9318:1;9300:20;:::i;:::-;9295:25;;9334:20;9352:1;9334:20;:::i;:::-;9329:25;;9377:1;9374;9370:9;9363:16;;9398:3;9395:1;9392:10;9389:36;;;9405:18;;:::i;:::-;9389:36;9241:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "736800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getRewardRate()": "2432",
								"getUserRewards(address)": "2852",
								"owner()": "2537",
								"recycleProduct(uint256,address)": "infinite",
								"recycledProducts(uint256)": "2830",
								"renounceOwnership()": "infinite",
								"rewardPerRecycling()": "2514",
								"rewardToken()": "infinite",
								"transferOwnership(address)": "infinite",
								"updateRewardRate(uint256)": "infinite",
								"userRewards(address)": "2803",
								"withdrawRewards()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 286,
									"end": 3555,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 286,
									"end": 3555,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 286,
									"end": 3555,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1197,
									"end": 1405,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1197,
									"end": 1405,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1197,
									"end": 1405,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1197,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1197,
									"end": 1405,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1197,
									"end": 1405,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1197,
									"end": 1405,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1197,
									"end": 1405,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1197,
									"end": 1405,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1197,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1197,
									"end": 1405,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1197,
									"end": 1405,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1197,
									"end": 1405,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1197,
									"end": 1405,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1197,
									"end": 1405,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1197,
									"end": 1405,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1197,
									"end": 1405,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1197,
									"end": 1405,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1197,
									"end": 1405,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1197,
									"end": 1405,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1197,
									"end": 1405,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1197,
									"end": 1405,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1197,
									"end": 1405,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1197,
									"end": 1405,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1197,
									"end": 1405,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1197,
									"end": 1405,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1197,
									"end": 1405,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1197,
									"end": 1405,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1197,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1197,
									"end": 1405,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1197,
									"end": 1405,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1197,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1197,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1197,
									"end": 1405,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1197,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1290,
									"end": 1302,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1335,
									"end": 1347,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1314,
									"end": 1325,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1314,
									"end": 1325,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1314,
									"end": 1348,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1314,
									"end": 1348,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1314,
									"end": 1348,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1314,
									"end": 1348,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1314,
									"end": 1348,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1314,
									"end": 1348,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1314,
									"end": 1348,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1314,
									"end": 1348,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1314,
									"end": 1348,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1314,
									"end": 1348,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1314,
									"end": 1348,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1314,
									"end": 1348,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1314,
									"end": 1348,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1314,
									"end": 1348,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1314,
									"end": 1348,
									"modifierDepth": 1,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1314,
									"end": 1348,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1314,
									"end": 1348,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1314,
									"end": 1348,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1379,
									"end": 1398,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1376,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1358,
									"end": 1398,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1398,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1398,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1398,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1197,
									"end": 1405,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1197,
									"end": 1405,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1197,
									"end": 1405,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 286,
									"end": 3555,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 286,
									"end": 3555,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1293,
									"end": 1299,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1307,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1309,
									"end": 1315,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1346,
									"end": 1355,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1337,
									"end": 1344,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1333,
									"end": 1356,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1329,
									"end": 1361,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 1364,
									"end": 1443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1484,
									"end": 1485,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1565,
									"end": 1572,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1556,
									"end": 1562,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1545,
									"end": 1554,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1541,
									"end": 1563,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1509,
									"end": 1573,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1455,
									"end": 1583,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1622,
									"end": 1624,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1704,
									"end": 1711,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1695,
									"end": 1701,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1684,
									"end": 1693,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1680,
									"end": 1702,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1648,
									"end": 1712,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1593,
									"end": 1722,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1763,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1843,
									"end": 1850,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1834,
									"end": 1840,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1823,
									"end": 1832,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1819,
									"end": 1841,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1787,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1732,
									"end": 1861,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 1868,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1874,
									"end": 1992,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 1874,
									"end": 1992,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1961,
									"end": 1985,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1979,
									"end": 1984,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1961,
									"end": 1985,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 1961,
									"end": 1985,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1961,
									"end": 1985,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1961,
									"end": 1985,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1956,
									"end": 1959,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1949,
									"end": 1986,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1874,
									"end": 1992,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1874,
									"end": 1992,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1874,
									"end": 1992,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2091,
									"end": 2095,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2129,
									"end": 2131,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2118,
									"end": 2127,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2114,
									"end": 2132,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2106,
									"end": 2132,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2106,
									"end": 2132,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2142,
									"end": 2213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 2210,
									"end": 2211,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2199,
									"end": 2208,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2195,
									"end": 2212,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2186,
									"end": 2192,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2142,
									"end": 2213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 2142,
									"end": 2213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2142,
									"end": 2213,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 2142,
									"end": 2213,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1998,
									"end": 2220,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 286,
									"end": 3555,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 286,
									"end": 3555,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 286,
									"end": 3555,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 286,
									"end": 3555,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 286,
									"end": 3555,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 286,
									"end": 3555,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 286,
									"end": 3555,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 286,
									"end": 3555,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 286,
									"end": 3555,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220eb049350ba0ddf1517e075ccc9736823b462d616e2a54815381fc801fb4f205e64736f6c63430008180033",
									".code": [
										{
											"begin": 286,
											"end": 3555,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "PUSH",
											"source": 6,
											"value": "7E1A3786"
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "PUSH",
											"source": 6,
											"value": "7E1A3786"
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "PUSH",
											"source": 6,
											"value": "9EF3A261"
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "PUSH",
											"source": 6,
											"value": "C7B8981C"
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "PUSH",
											"source": 6,
											"value": "F7C618C1"
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "PUSH",
											"source": 6,
											"value": "660F1E8"
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "PUSH",
											"source": 6,
											"value": "78B0FB7"
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "PUSH",
											"source": 6,
											"value": "3F608AD2"
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "PUSH",
											"source": 6,
											"value": "44301C13"
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "PUSH",
											"source": 6,
											"value": "45E1D960"
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 286,
											"end": 3555,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 544,
											"end": 590,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 544,
											"end": 590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 544,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 544,
											"end": 590,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 544,
											"end": 590,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 544,
											"end": 590,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 544,
											"end": 590,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 544,
											"end": 590,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 544,
											"end": 590,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 544,
											"end": 590,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 544,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 544,
											"end": 590,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 544,
											"end": 590,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 544,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 544,
											"end": 590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 544,
											"end": 590,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 544,
											"end": 590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 544,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 544,
											"end": 590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 544,
											"end": 590,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 544,
											"end": 590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 544,
											"end": 590,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 544,
											"end": 590,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 544,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 544,
											"end": 590,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 544,
											"end": 590,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 544,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 544,
											"end": 590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 544,
											"end": 590,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 544,
											"end": 590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 544,
											"end": 590,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 544,
											"end": 590,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 544,
											"end": 590,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 544,
											"end": 590,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 544,
											"end": 590,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 544,
											"end": 590,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 544,
											"end": 590,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3442,
											"end": 3553,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3442,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3442,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 3442,
											"end": 3553,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3442,
											"end": 3553,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3442,
											"end": 3553,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3442,
											"end": 3553,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3442,
											"end": 3553,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3442,
											"end": 3553,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3442,
											"end": 3553,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3442,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 3442,
											"end": 3553,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3442,
											"end": 3553,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3442,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 3442,
											"end": 3553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3442,
											"end": 3553,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 3442,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3442,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3442,
											"end": 3553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3442,
											"end": 3553,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 3442,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3442,
											"end": 3553,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3442,
											"end": 3553,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3442,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 3442,
											"end": 3553,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3442,
											"end": 3553,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3442,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 3442,
											"end": 3553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3442,
											"end": 3553,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 3442,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3442,
											"end": 3553,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3442,
											"end": 3553,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3442,
											"end": 3553,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3442,
											"end": 3553,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3442,
											"end": 3553,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3442,
											"end": 3553,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3442,
											"end": 3553,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 490,
											"end": 538,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 490,
											"end": 538,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 490,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 490,
											"end": 538,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 490,
											"end": 538,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 490,
											"end": 538,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 490,
											"end": 538,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 490,
											"end": 538,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 490,
											"end": 538,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 490,
											"end": 538,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 490,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 490,
											"end": 538,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 490,
											"end": 538,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 490,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 490,
											"end": 538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 490,
											"end": 538,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 490,
											"end": 538,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 490,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 490,
											"end": 538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 490,
											"end": 538,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 490,
											"end": 538,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 490,
											"end": 538,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 490,
											"end": 538,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 490,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 490,
											"end": 538,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 490,
											"end": 538,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 490,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 490,
											"end": 538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 490,
											"end": 538,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 490,
											"end": 538,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 490,
											"end": 538,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 490,
											"end": 538,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 490,
											"end": 538,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 490,
											"end": 538,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 490,
											"end": 538,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 490,
											"end": 538,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 490,
											"end": 538,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 2385,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1631,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1631,
											"end": 2385,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1631,
											"end": 2385,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 2385,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 2385,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 2385,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 2385,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 2385,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1631,
											"end": 2385,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 2385,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1631,
											"end": 2385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 2385,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1631,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1631,
											"end": 2385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 2385,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1631,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 2385,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 689,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 656,
											"end": 689,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 656,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 656,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 656,
											"end": 689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 689,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 656,
											"end": 689,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 656,
											"end": 689,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 656,
											"end": 689,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 656,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 656,
											"end": 689,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 656,
											"end": 689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 656,
											"end": 689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 689,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 656,
											"end": 689,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 656,
											"end": 689,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 656,
											"end": 689,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 656,
											"end": 689,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 689,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 656,
											"end": 689,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 656,
											"end": 689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 689,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3166,
											"end": 3265,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3166,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3166,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3166,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3166,
											"end": 3265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3166,
											"end": 3265,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3166,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3166,
											"end": 3265,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3166,
											"end": 3265,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3166,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 3166,
											"end": 3265,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3166,
											"end": 3265,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3166,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 3166,
											"end": 3265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3166,
											"end": 3265,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 3166,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3166,
											"end": 3265,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3166,
											"end": 3265,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3166,
											"end": 3265,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3166,
											"end": 3265,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3166,
											"end": 3265,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3166,
											"end": 3265,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3166,
											"end": 3265,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2667,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2548,
											"end": 2667,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2548,
											"end": 2667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 2548,
											"end": 2667,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2548,
											"end": 2667,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2548,
											"end": 2667,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2548,
											"end": 2667,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2548,
											"end": 2667,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2548,
											"end": 2667,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2548,
											"end": 2667,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2548,
											"end": 2667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2548,
											"end": 2667,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2548,
											"end": 2667,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2548,
											"end": 2667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2548,
											"end": 2667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2548,
											"end": 2667,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2548,
											"end": 2667,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2548,
											"end": 2667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2548,
											"end": 2667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2548,
											"end": 2667,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 2548,
											"end": 2667,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2548,
											"end": 2667,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2747,
											"end": 3035,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 2747,
											"end": 3035,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2747,
											"end": 3035,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 2747,
											"end": 3035,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 2747,
											"end": 3035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2747,
											"end": 3035,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 2747,
											"end": 3035,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2747,
											"end": 3035,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 393,
											"end": 418,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 393,
											"end": 418,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 393,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 393,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 393,
											"end": 418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 393,
											"end": 418,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 393,
											"end": 418,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 393,
											"end": 418,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 393,
											"end": 418,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 393,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 393,
											"end": 418,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 393,
											"end": 418,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 393,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 393,
											"end": 418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 393,
											"end": 418,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 393,
											"end": 418,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 393,
											"end": 418,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 393,
											"end": 418,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 393,
											"end": 418,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 393,
											"end": 418,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 393,
											"end": 418,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 393,
											"end": 418,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 393,
											"end": 418,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 544,
											"end": 590,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 544,
											"end": 590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 544,
											"end": 590,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 544,
											"end": 590,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 544,
											"end": 590,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 544,
											"end": 590,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 544,
											"end": 590,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 544,
											"end": 590,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 544,
											"end": 590,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 544,
											"end": 590,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 544,
											"end": 590,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 544,
											"end": 590,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 544,
											"end": 590,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 544,
											"end": 590,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 544,
											"end": 590,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 544,
											"end": 590,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 544,
											"end": 590,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 544,
											"end": 590,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 544,
											"end": 590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3442,
											"end": 3553,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3442,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3503,
											"end": 3510,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3529,
											"end": 3540,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3529,
											"end": 3546,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3541,
											"end": 3545,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3529,
											"end": 3546,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3529,
											"end": 3546,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3529,
											"end": 3546,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3529,
											"end": 3546,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3529,
											"end": 3546,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3529,
											"end": 3546,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3529,
											"end": 3546,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3529,
											"end": 3546,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3529,
											"end": 3546,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3529,
											"end": 3546,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3529,
											"end": 3546,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3529,
											"end": 3546,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3529,
											"end": 3546,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3529,
											"end": 3546,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3529,
											"end": 3546,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3529,
											"end": 3546,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3546,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3546,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3442,
											"end": 3553,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3442,
											"end": 3553,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3442,
											"end": 3553,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3442,
											"end": 3553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 490,
											"end": 538,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 490,
											"end": 538,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 490,
											"end": 538,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 490,
											"end": 538,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 490,
											"end": 538,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 490,
											"end": 538,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 490,
											"end": 538,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 490,
											"end": 538,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 490,
											"end": 538,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 490,
											"end": 538,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 490,
											"end": 538,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 490,
											"end": 538,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 490,
											"end": 538,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 490,
											"end": 538,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 490,
											"end": 538,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 490,
											"end": 538,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 490,
											"end": 538,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 490,
											"end": 538,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 490,
											"end": 538,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 490,
											"end": 538,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 490,
											"end": 538,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 490,
											"end": 538,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 490,
											"end": 538,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 490,
											"end": 538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 2385,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1631,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1723,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1734,
											"end": 1745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1746,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1746,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1875,
											"end": 1885,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1885,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1851,
											"end": 1885,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1854,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1862,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1851,
											"end": 1862,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1862,
											"name": "PUSH",
											"source": 6,
											"value": "6352211E"
										},
										{
											"begin": 1863,
											"end": 1870,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 1851,
											"end": 1871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1851,
											"end": 1871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1851,
											"end": 1871,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1885,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1851,
											"end": 1885,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1885,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1843,
											"end": 1928,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1928,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1843,
											"end": 1928,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1928,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1843,
											"end": 1928,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1928,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1928,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1843,
											"end": 1928,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1843,
											"end": 1928,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1843,
											"end": 1928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1928,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1843,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1928,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1843,
											"end": 1928,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1928,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1928,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1928,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1928,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1928,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1928,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1843,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 1963,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1947,
											"end": 1972,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 1971,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 1972,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 1972,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 1972,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1947,
											"end": 1972,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 1972,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 1972,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 1972,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 1972,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1947,
											"end": 1972,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 1972,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1947,
											"end": 1972,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 1972,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1947,
											"end": 1972,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 1972,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 1972,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 1972,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1947,
											"end": 1972,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 1972,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 1972,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 1972,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1947,
											"end": 1972,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1946,
											"end": 1972,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1938,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1938,
											"end": 2015,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1938,
											"end": 2015,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1938,
											"end": 2015,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1938,
											"end": 2015,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1938,
											"end": 2015,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1938,
											"end": 2015,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1938,
											"end": 2015,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1938,
											"end": 2015,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1938,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1938,
											"end": 2015,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1938,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1938,
											"end": 2015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1938,
											"end": 2015,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1938,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1938,
											"end": 2015,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1938,
											"end": 2015,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1938,
											"end": 2015,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1938,
											"end": 2015,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1938,
											"end": 2015,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1938,
											"end": 2015,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1938,
											"end": 2015,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1938,
											"end": 2015,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1938,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2094,
											"end": 2098,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2066,
											"end": 2082,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2066,
											"end": 2091,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2083,
											"end": 2090,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2091,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2091,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2091,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2066,
											"end": 2091,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2091,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2091,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2091,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2091,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2066,
											"end": 2091,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2091,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2066,
											"end": 2091,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2091,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2066,
											"end": 2098,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2066,
											"end": 2098,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2098,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2098,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2098,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2098,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2066,
											"end": 2098,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2098,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2098,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2098,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2098,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2098,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2098,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2098,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2098,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2098,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2098,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2098,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2197,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2225,
											"end": 2243,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2225,
											"end": 2243,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2197,
											"end": 2208,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2197,
											"end": 2220,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2209,
											"end": 2219,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2197,
											"end": 2220,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2197,
											"end": 2220,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2197,
											"end": 2220,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2197,
											"end": 2220,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2197,
											"end": 2220,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2197,
											"end": 2220,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2197,
											"end": 2220,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2197,
											"end": 2220,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2197,
											"end": 2220,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2197,
											"end": 2220,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2197,
											"end": 2220,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2197,
											"end": 2220,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2197,
											"end": 2220,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2197,
											"end": 2220,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2220,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2197,
											"end": 2220,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2197,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 2197,
											"end": 2224,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2197,
											"end": 2244,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2197,
											"end": 2244,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2197,
											"end": 2244,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2197,
											"end": 2244,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2197,
											"end": 2244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2197,
											"end": 2244,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2197,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2182,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2171,
											"end": 2194,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2183,
											"end": 2193,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2194,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2171,
											"end": 2194,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2194,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2171,
											"end": 2194,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2194,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2194,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2194,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2171,
											"end": 2194,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2194,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2194,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2194,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2194,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2171,
											"end": 2194,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2194,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2171,
											"end": 2194,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2244,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2244,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2244,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2244,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2265,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2254,
											"end": 2265,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2254,
											"end": 2265,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2265,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2265,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2265,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2254,
											"end": 2265,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2265,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2265,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2265,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2254,
											"end": 2265,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2274,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2254,
											"end": 2274,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2274,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 2275,
											"end": 2285,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2305,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2287,
											"end": 2305,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2254,
											"end": 2306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2254,
											"end": 2306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2306,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2350,
											"end": 2357,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2338,
											"end": 2348,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2322,
											"end": 2378,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2322,
											"end": 2378,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2322,
											"end": 2378,
											"name": "PUSH",
											"source": 6,
											"value": "80AC4523930BDCC2E85CA0A99DA6547BA0D4C3BADB2A3693F781D80AA4863DC"
										},
										{
											"begin": 2359,
											"end": 2377,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2359,
											"end": 2377,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2322,
											"end": 2378,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2322,
											"end": 2378,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2322,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 2322,
											"end": 2378,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2322,
											"end": 2378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2322,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 2322,
											"end": 2378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2322,
											"end": 2378,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 2322,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2322,
											"end": 2378,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2322,
											"end": 2378,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2322,
											"end": 2378,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2322,
											"end": 2378,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2322,
											"end": 2378,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2322,
											"end": 2378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2322,
											"end": 2378,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 2385,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 2385,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 2385,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 2385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 689,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 656,
											"end": 689,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 656,
											"end": 689,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 656,
											"end": 689,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 656,
											"end": 689,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 656,
											"end": 689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3166,
											"end": 3265,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3166,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3214,
											"end": 3221,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3240,
											"end": 3258,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3240,
											"end": 3258,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3233,
											"end": 3258,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3233,
											"end": 3258,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3166,
											"end": 3265,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3166,
											"end": 3265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2667,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2548,
											"end": 2667,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2660,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 2644,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2626,
											"end": 2660,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 2660,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 2660,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 2660,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2548,
											"end": 2667,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2548,
											"end": 2667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2747,
											"end": 3035,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 2747,
											"end": 3035,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2793,
											"end": 2807,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2810,
											"end": 2821,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2810,
											"end": 2833,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2822,
											"end": 2832,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 2833,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2810,
											"end": 2833,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 2833,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2810,
											"end": 2833,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 2833,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 2833,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 2833,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2810,
											"end": 2833,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 2833,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 2833,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 2833,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 2833,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2810,
											"end": 2833,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 2833,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2810,
											"end": 2833,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 2833,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2793,
											"end": 2833,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2793,
											"end": 2833,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2860,
											"end": 2861,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2861,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 2843,
											"end": 2886,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2886,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2843,
											"end": 2886,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2886,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2843,
											"end": 2886,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2886,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2886,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2843,
											"end": 2886,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2843,
											"end": 2886,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 2843,
											"end": 2886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2886,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2843,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2886,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2843,
											"end": 2886,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2886,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2886,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2886,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2886,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2886,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2886,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 2843,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2977,
											"end": 2978,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2962,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2951,
											"end": 2974,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2963,
											"end": 2973,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2951,
											"end": 2974,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2951,
											"end": 2974,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2951,
											"end": 2974,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2951,
											"end": 2974,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2951,
											"end": 2974,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2951,
											"end": 2974,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2951,
											"end": 2974,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2951,
											"end": 2974,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2951,
											"end": 2974,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2951,
											"end": 2974,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2951,
											"end": 2974,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2951,
											"end": 2974,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2951,
											"end": 2974,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2951,
											"end": 2974,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2974,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2951,
											"end": 2978,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2951,
											"end": 2978,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2951,
											"end": 2978,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2951,
											"end": 2978,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 2999,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2988,
											"end": 2999,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2988,
											"end": 2999,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 2999,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 2999,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 2999,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2988,
											"end": 2999,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 2999,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 2999,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 2999,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2988,
											"end": 2999,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3008,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2988,
											"end": 3008,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3008,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 3009,
											"end": 3019,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3027,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2988,
											"end": 3028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2988,
											"end": 3028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3028,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 3035,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2747,
											"end": 3035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 393,
											"end": 418,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 393,
											"end": 418,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 393,
											"end": 418,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 393,
											"end": 418,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 393,
											"end": 418,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 393,
											"end": 418,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 393,
											"end": 418,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 393,
											"end": 418,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 393,
											"end": 418,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 393,
											"end": 418,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 393,
											"end": 418,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 393,
											"end": 418,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 393,
											"end": 418,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 393,
											"end": 418,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 393,
											"end": 418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 1994,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 1978,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1967,
											"end": 1990,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 1995,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 1998,
											"end": 2077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2188,
											"end": 2195,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2168,
											"end": 2177,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2164,
											"end": 2186,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 2143,
											"end": 2196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2089,
											"end": 2206,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2219,
											"end": 2309,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 2219,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2253,
											"end": 2260,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2296,
											"end": 2301,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2289,
											"end": 2302,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2282,
											"end": 2303,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2303,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2303,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2219,
											"end": 2309,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2219,
											"end": 2309,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2219,
											"end": 2309,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2219,
											"end": 2309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2315,
											"end": 2424,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 2315,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2396,
											"end": 2417,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 2411,
											"end": 2416,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2396,
											"end": 2417,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 2396,
											"end": 2417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2396,
											"end": 2417,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 2396,
											"end": 2417,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2391,
											"end": 2394,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2384,
											"end": 2418,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2315,
											"end": 2424,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2315,
											"end": 2424,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2315,
											"end": 2424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2430,
											"end": 2640,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 2430,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2517,
											"end": 2521,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2555,
											"end": 2557,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2544,
											"end": 2553,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2540,
											"end": 2558,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2532,
											"end": 2558,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2532,
											"end": 2558,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2568,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 2630,
											"end": 2631,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2619,
											"end": 2628,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2615,
											"end": 2632,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2612,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2568,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 2568,
											"end": 2633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2568,
											"end": 2633,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 2568,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2430,
											"end": 2640,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2430,
											"end": 2640,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2430,
											"end": 2640,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2430,
											"end": 2640,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2430,
											"end": 2640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2646,
											"end": 3120,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 2646,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2714,
											"end": 2720,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2722,
											"end": 2728,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2771,
											"end": 2773,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2759,
											"end": 2768,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2750,
											"end": 2757,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2746,
											"end": 2769,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2742,
											"end": 2774,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2777,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 2777,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 2777,
											"end": 2856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2777,
											"end": 2856,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 2777,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2897,
											"end": 2898,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 2967,
											"end": 2974,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2958,
											"end": 2964,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2947,
											"end": 2956,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2943,
											"end": 2965,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 2922,
											"end": 2975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 2975,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 2922,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 2975,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 2975,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2868,
											"end": 2985,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3024,
											"end": 3026,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3050,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 3095,
											"end": 3102,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3086,
											"end": 3092,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3075,
											"end": 3084,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3071,
											"end": 3093,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3050,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 3050,
											"end": 3103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3050,
											"end": 3103,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 3050,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2995,
											"end": 3113,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2646,
											"end": 3120,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2646,
											"end": 3120,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2646,
											"end": 3120,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2646,
											"end": 3120,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2646,
											"end": 3120,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2646,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3244,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 3126,
											"end": 3244,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3213,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 3231,
											"end": 3236,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3213,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 3213,
											"end": 3237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3213,
											"end": 3237,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 3213,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3208,
											"end": 3211,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3201,
											"end": 3238,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3244,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3244,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3126,
											"end": 3244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3472,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 3250,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3347,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3383,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3370,
											"end": 3379,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3366,
											"end": 3384,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3358,
											"end": 3384,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3358,
											"end": 3384,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 3462,
											"end": 3463,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3451,
											"end": 3460,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3447,
											"end": 3464,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3438,
											"end": 3444,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 3394,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3465,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 3394,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3472,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3472,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3472,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3472,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3478,
											"end": 3538,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 3478,
											"end": 3538,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3506,
											"end": 3509,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3527,
											"end": 3532,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3520,
											"end": 3532,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3520,
											"end": 3532,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3478,
											"end": 3538,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3478,
											"end": 3538,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3478,
											"end": 3538,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3478,
											"end": 3538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3544,
											"end": 3686,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 3544,
											"end": 3686,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3594,
											"end": 3603,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3627,
											"end": 3680,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 3645,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 3654,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 3672,
											"end": 3677,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3654,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 3654,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3654,
											"end": 3678,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 3654,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3645,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 3645,
											"end": 3679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3645,
											"end": 3679,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 3645,
											"end": 3679,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3627,
											"end": 3680,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 3627,
											"end": 3680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3627,
											"end": 3680,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 3627,
											"end": 3680,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3614,
											"end": 3680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3614,
											"end": 3680,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3544,
											"end": 3686,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3544,
											"end": 3686,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3544,
											"end": 3686,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3544,
											"end": 3686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3692,
											"end": 3818,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 3692,
											"end": 3818,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3742,
											"end": 3751,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3775,
											"end": 3812,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 3806,
											"end": 3811,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3775,
											"end": 3812,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 3775,
											"end": 3812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3775,
											"end": 3812,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 3775,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3762,
											"end": 3812,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3762,
											"end": 3812,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3692,
											"end": 3818,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3692,
											"end": 3818,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3692,
											"end": 3818,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3692,
											"end": 3818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3824,
											"end": 3964,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 3824,
											"end": 3964,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3921,
											"end": 3958,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 3952,
											"end": 3957,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3921,
											"end": 3958,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 3921,
											"end": 3958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3921,
											"end": 3958,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 3921,
											"end": 3958,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3958,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3958,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3824,
											"end": 3964,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3824,
											"end": 3964,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3824,
											"end": 3964,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3824,
											"end": 3964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3970,
											"end": 4129,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 3970,
											"end": 4129,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4071,
											"end": 4122,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 4116,
											"end": 4121,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4071,
											"end": 4122,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 4071,
											"end": 4122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4071,
											"end": 4122,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 4071,
											"end": 4122,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4066,
											"end": 4069,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4059,
											"end": 4123,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3970,
											"end": 4129,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3970,
											"end": 4129,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3970,
											"end": 4129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4385,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 4135,
											"end": 4385,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4242,
											"end": 4246,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4280,
											"end": 4282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4269,
											"end": 4278,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4283,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4257,
											"end": 4283,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4257,
											"end": 4283,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4293,
											"end": 4378,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 4375,
											"end": 4376,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4364,
											"end": 4373,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4360,
											"end": 4377,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4351,
											"end": 4357,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4293,
											"end": 4378,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 4293,
											"end": 4378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4293,
											"end": 4378,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 4293,
											"end": 4378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4385,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4385,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4385,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4385,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4391,
											"end": 4534,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 4391,
											"end": 4534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4448,
											"end": 4453,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4479,
											"end": 4485,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4473,
											"end": 4486,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4464,
											"end": 4486,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4464,
											"end": 4486,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4495,
											"end": 4528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 4522,
											"end": 4527,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4495,
											"end": 4528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 4495,
											"end": 4528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4495,
											"end": 4528,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 4495,
											"end": 4528,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4391,
											"end": 4534,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4391,
											"end": 4534,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4391,
											"end": 4534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4391,
											"end": 4534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4391,
											"end": 4534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4540,
											"end": 4891,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 4540,
											"end": 4891,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4610,
											"end": 4616,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4659,
											"end": 4661,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4647,
											"end": 4656,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4638,
											"end": 4645,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4657,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4630,
											"end": 4662,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4627,
											"end": 4746,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4627,
											"end": 4746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 4627,
											"end": 4746,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4665,
											"end": 4744,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 4665,
											"end": 4744,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 4665,
											"end": 4744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4665,
											"end": 4744,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 4665,
											"end": 4744,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4627,
											"end": 4746,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 4627,
											"end": 4746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4785,
											"end": 4786,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4810,
											"end": 4874,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 4866,
											"end": 4873,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4857,
											"end": 4863,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4846,
											"end": 4855,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4842,
											"end": 4864,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4810,
											"end": 4874,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 4810,
											"end": 4874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4810,
											"end": 4874,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 4810,
											"end": 4874,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4800,
											"end": 4874,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4800,
											"end": 4874,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4756,
											"end": 4884,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4540,
											"end": 4891,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4540,
											"end": 4891,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4540,
											"end": 4891,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4540,
											"end": 4891,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4540,
											"end": 4891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4897,
											"end": 5066,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 4897,
											"end": 5066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4981,
											"end": 4992,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5015,
											"end": 5021,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5010,
											"end": 5013,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5003,
											"end": 5022,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5055,
											"end": 5059,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5050,
											"end": 5053,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5046,
											"end": 5060,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5031,
											"end": 5060,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5031,
											"end": 5060,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4897,
											"end": 5066,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4897,
											"end": 5066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4897,
											"end": 5066,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4897,
											"end": 5066,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4897,
											"end": 5066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5072,
											"end": 5297,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 5072,
											"end": 5297,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5246,
											"name": "PUSH",
											"source": 7,
											"value": "596F75206D757374206F776E207468652070726F6475637420746F2072656379"
										},
										{
											"begin": 5208,
											"end": 5209,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5200,
											"end": 5206,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5196,
											"end": 5210,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5189,
											"end": 5247,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5281,
											"end": 5289,
											"name": "PUSH",
											"source": 7,
											"value": "636C652069740000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5276,
											"end": 5278,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5268,
											"end": 5274,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5264,
											"end": 5279,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5257,
											"end": 5290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5072,
											"end": 5297,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5072,
											"end": 5297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5303,
											"end": 5669,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 5303,
											"end": 5669,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5445,
											"end": 5448,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5466,
											"end": 5533,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 5530,
											"end": 5532,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 5525,
											"end": 5528,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5466,
											"end": 5533,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 5466,
											"end": 5533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5466,
											"end": 5533,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 5466,
											"end": 5533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5459,
											"end": 5533,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5459,
											"end": 5533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5542,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 5631,
											"end": 5634,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5542,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 5542,
											"end": 5635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5542,
											"end": 5635,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 5542,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5660,
											"end": 5662,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5655,
											"end": 5658,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5651,
											"end": 5663,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5644,
											"end": 5663,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5644,
											"end": 5663,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5303,
											"end": 5669,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5303,
											"end": 5669,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5303,
											"end": 5669,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5303,
											"end": 5669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5675,
											"end": 6094,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 5675,
											"end": 6094,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5841,
											"end": 5845,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5879,
											"end": 5881,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5868,
											"end": 5877,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5864,
											"end": 5882,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5856,
											"end": 5882,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5856,
											"end": 5882,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5928,
											"end": 5937,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5922,
											"end": 5926,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5918,
											"end": 5938,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5914,
											"end": 5915,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5903,
											"end": 5912,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5899,
											"end": 5916,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5892,
											"end": 5939,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5956,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 6082,
											"end": 6086,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5956,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 5956,
											"end": 6087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5956,
											"end": 6087,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 5956,
											"end": 6087,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5948,
											"end": 6087,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5948,
											"end": 6087,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5675,
											"end": 6094,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5675,
											"end": 6094,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5675,
											"end": 6094,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5675,
											"end": 6094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6100,
											"end": 6325,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 6100,
											"end": 6325,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6240,
											"end": 6274,
											"name": "PUSH",
											"source": 7,
											"value": "546869732070726F647563742068617320616C7265616479206265656E207265"
										},
										{
											"begin": 6236,
											"end": 6237,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6228,
											"end": 6234,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6224,
											"end": 6238,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6217,
											"end": 6275,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6309,
											"end": 6317,
											"name": "PUSH",
											"source": 7,
											"value": "6379636C65640000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6304,
											"end": 6306,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6296,
											"end": 6302,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6292,
											"end": 6307,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6285,
											"end": 6318,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6100,
											"end": 6325,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6100,
											"end": 6325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6331,
											"end": 6697,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 6331,
											"end": 6697,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6473,
											"end": 6476,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6494,
											"end": 6561,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 6558,
											"end": 6560,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 6553,
											"end": 6556,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6494,
											"end": 6561,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 6494,
											"end": 6561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6494,
											"end": 6561,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 6494,
											"end": 6561,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6487,
											"end": 6561,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6487,
											"end": 6561,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6570,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 6659,
											"end": 6662,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6570,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 6570,
											"end": 6663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6570,
											"end": 6663,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 6570,
											"end": 6663,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6688,
											"end": 6690,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6683,
											"end": 6686,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6679,
											"end": 6691,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6672,
											"end": 6691,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6672,
											"end": 6691,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6331,
											"end": 6697,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6331,
											"end": 6697,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6331,
											"end": 6697,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6331,
											"end": 6697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6703,
											"end": 7122,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 6703,
											"end": 7122,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6869,
											"end": 6873,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6907,
											"end": 6909,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6896,
											"end": 6905,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6892,
											"end": 6910,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6884,
											"end": 6910,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6884,
											"end": 6910,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6956,
											"end": 6965,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6950,
											"end": 6954,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6946,
											"end": 6966,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6942,
											"end": 6943,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6931,
											"end": 6940,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6927,
											"end": 6944,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6920,
											"end": 6967,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6984,
											"end": 7115,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 7110,
											"end": 7114,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6984,
											"end": 7115,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 6984,
											"end": 7115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6984,
											"end": 7115,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 6984,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6976,
											"end": 7115,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6976,
											"end": 7115,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6703,
											"end": 7122,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6703,
											"end": 7122,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6703,
											"end": 7122,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6703,
											"end": 7122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7128,
											"end": 7460,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 7128,
											"end": 7460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7249,
											"end": 7253,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7287,
											"end": 7289,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7276,
											"end": 7285,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7272,
											"end": 7290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7264,
											"end": 7290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7264,
											"end": 7290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7300,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 7368,
											"end": 7369,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7357,
											"end": 7366,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7353,
											"end": 7370,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7344,
											"end": 7350,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7300,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 7300,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7300,
											"end": 7371,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 7300,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7381,
											"end": 7453,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 7449,
											"end": 7451,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7438,
											"end": 7447,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7434,
											"end": 7452,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7425,
											"end": 7431,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7381,
											"end": 7453,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 7381,
											"end": 7453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7381,
											"end": 7453,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 7381,
											"end": 7453,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7128,
											"end": 7460,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7128,
											"end": 7460,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7128,
											"end": 7460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7128,
											"end": 7460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7128,
											"end": 7460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7128,
											"end": 7460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7466,
											"end": 7582,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 7466,
											"end": 7582,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7536,
											"end": 7557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 7551,
											"end": 7556,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7536,
											"end": 7557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 7536,
											"end": 7557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7536,
											"end": 7557,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 7536,
											"end": 7557,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7529,
											"end": 7534,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7526,
											"end": 7558,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7516,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 7516,
											"end": 7576,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7572,
											"end": 7573,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7569,
											"end": 7570,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7562,
											"end": 7574,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7516,
											"end": 7576,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 7516,
											"end": 7576,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7466,
											"end": 7582,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7466,
											"end": 7582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7588,
											"end": 7725,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 7588,
											"end": 7725,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7642,
											"end": 7647,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7673,
											"end": 7679,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7667,
											"end": 7680,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7658,
											"end": 7680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7658,
											"end": 7680,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7689,
											"end": 7719,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 7713,
											"end": 7718,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7689,
											"end": 7719,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 7689,
											"end": 7719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7689,
											"end": 7719,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 7689,
											"end": 7719,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7588,
											"end": 7725,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7588,
											"end": 7725,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7588,
											"end": 7725,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7588,
											"end": 7725,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7588,
											"end": 7725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7731,
											"end": 8076,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 7731,
											"end": 8076,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7798,
											"end": 7804,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7847,
											"end": 7849,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7835,
											"end": 7844,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7826,
											"end": 7833,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7822,
											"end": 7845,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7818,
											"end": 7850,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7815,
											"end": 7934,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7815,
											"end": 7934,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 7815,
											"end": 7934,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7853,
											"end": 7932,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 7853,
											"end": 7932,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 7853,
											"end": 7932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7853,
											"end": 7932,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 7853,
											"end": 7932,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7815,
											"end": 7934,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 7815,
											"end": 7934,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7973,
											"end": 7974,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7998,
											"end": 8059,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 8051,
											"end": 8058,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8042,
											"end": 8048,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8031,
											"end": 8040,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8027,
											"end": 8049,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7998,
											"end": 8059,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 7998,
											"end": 8059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7998,
											"end": 8059,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 7998,
											"end": 8059,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7988,
											"end": 8059,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7988,
											"end": 8059,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7944,
											"end": 8069,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7731,
											"end": 8076,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7731,
											"end": 8076,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7731,
											"end": 8076,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7731,
											"end": 8076,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7731,
											"end": 8076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8082,
											"end": 8252,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 8082,
											"end": 8252,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8222,
											"end": 8244,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F207265776172647320617661696C61626C65000000000000000000000000"
										},
										{
											"begin": 8218,
											"end": 8219,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8210,
											"end": 8216,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8206,
											"end": 8220,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8199,
											"end": 8245,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8082,
											"end": 8252,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8082,
											"end": 8252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8258,
											"end": 8624,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 8258,
											"end": 8624,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8400,
											"end": 8403,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8421,
											"end": 8488,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 8485,
											"end": 8487,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 8480,
											"end": 8483,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8421,
											"end": 8488,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 8421,
											"end": 8488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8421,
											"end": 8488,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 8421,
											"end": 8488,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8414,
											"end": 8488,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8414,
											"end": 8488,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8497,
											"end": 8590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 8586,
											"end": 8589,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8497,
											"end": 8590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 8497,
											"end": 8590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8497,
											"end": 8590,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 8497,
											"end": 8590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8615,
											"end": 8617,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8610,
											"end": 8613,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8606,
											"end": 8618,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8599,
											"end": 8618,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8599,
											"end": 8618,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8258,
											"end": 8624,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8258,
											"end": 8624,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8258,
											"end": 8624,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8258,
											"end": 8624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8630,
											"end": 9049,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 8630,
											"end": 9049,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8796,
											"end": 8800,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8834,
											"end": 8836,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8823,
											"end": 8832,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8819,
											"end": 8837,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8811,
											"end": 8837,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8811,
											"end": 8837,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8883,
											"end": 8892,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8877,
											"end": 8881,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8873,
											"end": 8893,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8869,
											"end": 8870,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8858,
											"end": 8867,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8854,
											"end": 8871,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8847,
											"end": 8894,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8911,
											"end": 9042,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 9037,
											"end": 9041,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8911,
											"end": 9042,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 8911,
											"end": 9042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8911,
											"end": 9042,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 8911,
											"end": 9042,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8903,
											"end": 9042,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8903,
											"end": 9042,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8630,
											"end": 9049,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8630,
											"end": 9049,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8630,
											"end": 9049,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8630,
											"end": 9049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9055,
											"end": 9235,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 9055,
											"end": 9235,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9103,
											"end": 9180,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9100,
											"end": 9101,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9093,
											"end": 9181,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9200,
											"end": 9204,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 9197,
											"end": 9198,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9190,
											"end": 9205,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9224,
											"end": 9228,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9221,
											"end": 9222,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9214,
											"end": 9229,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9241,
											"end": 9432,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 9241,
											"end": 9432,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9281,
											"end": 9284,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9300,
											"end": 9320,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 9318,
											"end": 9319,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9300,
											"end": 9320,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 9300,
											"end": 9320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9300,
											"end": 9320,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 9300,
											"end": 9320,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9295,
											"end": 9320,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9295,
											"end": 9320,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9334,
											"end": 9354,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 9352,
											"end": 9353,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9334,
											"end": 9354,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 9334,
											"end": 9354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9334,
											"end": 9354,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 9334,
											"end": 9354,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9329,
											"end": 9354,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9329,
											"end": 9354,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9377,
											"end": 9378,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9374,
											"end": 9375,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9370,
											"end": 9379,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9363,
											"end": 9379,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9363,
											"end": 9379,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9398,
											"end": 9401,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9395,
											"end": 9396,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9392,
											"end": 9402,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9389,
											"end": 9425,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9389,
											"end": 9425,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 9389,
											"end": 9425,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9405,
											"end": 9423,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 9405,
											"end": 9423,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 9405,
											"end": 9423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9405,
											"end": 9423,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 9405,
											"end": 9423,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9389,
											"end": 9425,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 9389,
											"end": 9425,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9241,
											"end": 9432,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9241,
											"end": 9432,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9241,
											"end": 9432,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9241,
											"end": 9432,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9241,
											"end": 9432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Backend/RecyclingRewards.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getRewardRate()": "7e1a3786",
							"getUserRewards(address)": "078b0fb7",
							"owner()": "8da5cb5b",
							"recycleProduct(uint256,address)": "44301c13",
							"recycledProducts(uint256)": "3f608ad2",
							"renounceOwnership()": "715018a6",
							"rewardPerRecycling()": "45e1d960",
							"rewardToken()": "f7c618c1",
							"transferOwnership(address)": "f2fde38b",
							"updateRewardRate(uint256)": "9ef3a261",
							"userRewards(address)": "0660f1e8",
							"withdrawRewards()": "c7b8981c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardPerRecycling\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"ProductRecycled\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getRewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"}],\"name\":\"recycleProduct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"recycledProducts\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerRecycling\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newRewardRate\",\"type\":\"uint256\"}],\"name\":\"updateRewardRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_rewardPerRecycling\":\"The amount of reward given per recycled product\",\"_rewardToken\":\"Address of the ERC20 reward token contract\",\"initialOwner\":\"The address of the initial owner (msg.sender)\"}},\"getRewardRate()\":{\"returns\":{\"_0\":\"The reward rate per recycled product\"}},\"getUserRewards(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The total accumulated rewards for the user\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"recycleProduct(uint256,address)\":{\"params\":{\"nftContract\":\"The address of the NFT contract representing the product\",\"tokenId\":\"The ID of the product NFT that is being recycled\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateRewardRate(uint256)\":{\"params\":{\"newRewardRate\":\"The new amount of reward given per recycled product\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor to initialize the contract with the reward token and reward rate\"},\"getRewardRate()\":{\"notice\":\"Get the current reward rate for recycling\"},\"getUserRewards(address)\":{\"notice\":\"Get the accumulated rewards for a user\"},\"recycleProduct(uint256,address)\":{\"notice\":\"Recycle a product and earn rewards\"},\"updateRewardRate(uint256)\":{\"notice\":\"Update the reward rate for recycling products\"},\"withdrawRewards()\":{\"notice\":\"Withdraw the rewards accumulated by a user\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Backend/RecyclingRewards.sol\":\"RecyclingRewards\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"Backend/RecyclingRewards.sol\":{\"keccak256\":\"0x1936a50517029f39f5f98f8e39f17793a3b90731333dea90905692252a62e675\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53e4c862fc8fa213864eeeeb365d376d70d13bd66e65b0778100d88533cd7c93\",\"dweb:/ipfs/QmbPApUE79fiNpHny3gfAFDTh59LqSW9TCuxqFBAAyA99U\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "Backend/RecyclingRewards.sol:RecyclingRewards",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 710,
								"contract": "Backend/RecyclingRewards.sol:RecyclingRewards",
								"label": "rewardToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)225"
							},
							{
								"astId": 714,
								"contract": "Backend/RecyclingRewards.sol:RecyclingRewards",
								"label": "recycledProducts",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_bool)"
							},
							{
								"astId": 718,
								"contract": "Backend/RecyclingRewards.sol:RecyclingRewards",
								"label": "userRewards",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 720,
								"contract": "Backend/RecyclingRewards.sol:RecyclingRewards",
								"label": "rewardPerRecycling",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)225": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"constructor": {
								"notice": "Constructor to initialize the contract with the reward token and reward rate"
							},
							"getRewardRate()": {
								"notice": "Get the current reward rate for recycling"
							},
							"getUserRewards(address)": {
								"notice": "Get the accumulated rewards for a user"
							},
							"recycleProduct(uint256,address)": {
								"notice": "Recycle a product and earn rewards"
							},
							"updateRewardRate(uint256)": {
								"notice": "Update the reward rate for recycling products"
							},
							"withdrawRewards()": {
								"notice": "Withdraw the rewards accumulated by a user"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							372
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 373,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 372,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 372,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								372
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 354,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						]
					},
					"id": 226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:1",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 225,
							"linearizedBaseContracts": [
								225
							],
							"name": "IERC20",
							"nameLocation": "214:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 159,
									"name": "Transfer",
									"nameLocation": "396:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "405:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "427:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "447:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:1"
									},
									"src": "390:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 168,
									"name": "Approval",
									"nameLocation": "627:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "636:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "659:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "684:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:1"
									},
									"src": "621:78:1"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "821:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:1"
									},
									"scope": 225,
									"src": "775:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 225,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1222:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1234:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1267:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:1"
									},
									"scope": 225,
									"src": "1204:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1567:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1582:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1622:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:1"
									},
									"scope": 225,
									"src": "1548:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2326:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2343:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2376:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:1"
									},
									"scope": 225,
									"src": "2309:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2712:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2726:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2738:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2771:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:1"
									},
									"scope": 225,
									"src": "2690:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 226,
							"src": "204:2575:1",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "106:2674:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							384
						],
						"IERC721": [
							342
						]
					},
					"id": 343,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 229,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 343,
							"sourceUnit": 385,
							"src": "134:62:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 228,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 384,
										"src": "142:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 231,
										"name": "IERC165",
										"nameLocations": [
											"288:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 384,
										"src": "288:7:2"
									},
									"id": 232,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:2"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 230,
								"nodeType": "StructuredDocumentation",
								"src": "198:68:2",
								"text": " @dev Required interface of an ERC-721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 342,
							"linearizedBaseContracts": [
								342,
								384
							],
							"name": "IERC721",
							"nameLocation": "277:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "302:88:2",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 241,
									"name": "Transfer",
									"nameLocation": "401:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "426:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "410:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "448:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "432:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "432:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "468:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "452:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "452:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:67:2"
									},
									"src": "395:82:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "483:94:2",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 250,
									"name": "Approval",
									"nameLocation": "588:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "613:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "597:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "636:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "620:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "662:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "646:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "596:74:2"
									},
									"src": "582:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "677:117:2",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 259,
									"name": "ApprovalForAll",
									"nameLocation": "805:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "836:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "820:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "859:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "843:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "843:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "874:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "869:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 256,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "869:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:64:2"
									},
									"src": "799:85:2"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "890:76:2",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "980:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "998:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "990:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:15:2"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1036:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1028:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:17:2"
									},
									"scope": 342,
									"src": "971:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "1051:131:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 275,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1196:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1212:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "1204:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1204:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1203:17:2"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1252:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "1244:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1244:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:15:2"
									},
									"scope": 342,
									"src": "1187:72:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "1265:565:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 287,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1844:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1869:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1861:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1861:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1883:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1875:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1875:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1895:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1887:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1887:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1919:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1904:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 283,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1904:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1860:64:2"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1933:0:2"
									},
									"scope": 342,
									"src": "1835:99:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "1940:706:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 297,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2660:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "2677:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2699:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "2691:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2691:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "2703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:43:2"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2728:0:2"
									},
									"scope": 342,
									"src": "2651:78:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "2735:733:2",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 307,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3482:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3503:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "3495:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3495:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3517:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "3509:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3529:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "3521:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3521:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3494:43:2"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3546:0:2"
									},
									"scope": 342,
									"src": "3473:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 308,
										"nodeType": "StructuredDocumentation",
										"src": "3553:452:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 315,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4019:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4035:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "4027:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4027:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4047:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "4039:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4026:29:2"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4064:0:2"
									},
									"scope": 342,
									"src": "4010:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 316,
										"nodeType": "StructuredDocumentation",
										"src": "4071:315:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 323,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4400:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4426:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "4418:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4418:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4441:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "4436:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 319,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4436:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4417:33:2"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4459:0:2"
									},
									"scope": 342,
									"src": "4391:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "4466:139:2",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 331,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4619:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4639:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "4631:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:17:2"
									},
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4679:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "4671:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4671:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4670:18:2"
									},
									"scope": 342,
									"src": "4610:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "4695:138:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 341,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4847:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4872:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "4864:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4864:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4887:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "4879:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4879:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4863:33:2"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "4920:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 338,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4920:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4919:6:2"
									},
									"scope": 342,
									"src": "4838:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 343,
							"src": "267:4661:2",
							"usedErrors": [],
							"usedEvents": [
								241,
								250,
								259
							]
						}
					],
					"src": "108:4821:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							372
						]
					},
					"id": 373,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 344,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 345,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 372,
							"linearizedBaseContracts": [
								372
							],
							"name": "Context",
							"nameLocation": "642:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "718:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 350,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 349,
												"id": 352,
												"nodeType": "Return",
												"src": "728:17:3"
											}
										]
									},
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:3"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "709:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:3"
									},
									"scope": 372,
									"src": "656:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "825:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 359,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 358,
												"id": 361,
												"nodeType": "Return",
												"src": "835:15:3"
											}
										]
									},
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:3"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "809:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 356,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:3"
									},
									"scope": 372,
									"src": "758:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "935:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 367,
												"id": 369,
												"nodeType": "Return",
												"src": "945:8:3"
											}
										]
									},
									"id": 371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:3"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:3"
									},
									"scope": 372,
									"src": "863:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 373,
							"src": "624:338:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							384
						]
					},
					"id": 385,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 374,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 375,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:4",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 384,
							"linearizedBaseContracts": [
								384
							],
							"name": "IERC165",
							"nameLocation": "432:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:4",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "818:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 377,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:4"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "861:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 380,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:4"
									},
									"scope": 384,
									"src": "791:76:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 385,
							"src": "422:447:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							696
						]
					},
					"id": 697,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 386,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 387,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:5",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 696,
							"linearizedBaseContracts": [
								696
							],
							"name": "SafeMath",
							"nameLocation": "490:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "717:140:5",
										"statements": [
											{
												"id": 417,
												"nodeType": "UncheckedBlock",
												"src": "727:124:5",
												"statements": [
													{
														"assignments": [
															400
														],
														"declarations": [
															{
																"constant": false,
																"id": 400,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:5",
																"nodeType": "VariableDeclaration",
																"scope": 417,
																"src": "751:9:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 399,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 404,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 401,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 390,
																"src": "763:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 402,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 392,
																"src": "767:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 405,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "786:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 406,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 390,
																"src": "790:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 412,
														"nodeType": "IfStatement",
														"src": "782:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 410,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 398,
															"id": 411,
															"nodeType": "Return",
															"src": "793:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 414,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "838:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 415,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 398,
														"id": 416,
														"nodeType": "Return",
														"src": "824:16:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:5",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "657:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "668:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:5"
									},
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "702:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 394,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "708:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:5"
									},
									"scope": 696,
									"src": "641:216:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "1078:113:5",
										"statements": [
											{
												"id": 445,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 431,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "1116:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 432,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 422,
																"src": "1120:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 438,
														"nodeType": "IfStatement",
														"src": "1112:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 436,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 430,
															"id": 437,
															"nodeType": "Return",
															"src": "1123:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 440,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 422,
																		"src": "1168:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 441,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 424,
																		"src": "1172:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 443,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 430,
														"id": 444,
														"nodeType": "Return",
														"src": "1154:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:5",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "1018:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "1029:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:5"
									},
									"returnParameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "1063:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 426,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "1069:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:5"
									},
									"scope": 696,
									"src": "1002:189:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "1415:417:5",
										"statements": [
											{
												"id": 487,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 459,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "1683:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 460,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 466,
														"nodeType": "IfStatement",
														"src": "1679:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 462,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 464,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 458,
															"id": 465,
															"nodeType": "Return",
															"src": "1691:16:5"
														}
													},
													{
														"assignments": [
															468
														],
														"declarations": [
															{
																"constant": false,
																"id": 468,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:5",
																"nodeType": "VariableDeclaration",
																"scope": 487,
																"src": "1721:9:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 467,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 472,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 469,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "1733:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 470,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 452,
																"src": "1737:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 473,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 468,
																	"src": "1756:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 474,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 450,
																	"src": "1760:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 476,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 452,
																"src": "1765:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 482,
														"nodeType": "IfStatement",
														"src": "1752:33:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 480,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 458,
															"id": 481,
															"nodeType": "Return",
															"src": "1768:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 484,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 468,
																	"src": "1813:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 485,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 458,
														"id": 486,
														"nodeType": "Return",
														"src": "1799:16:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:5",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "1355:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "1366:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:5"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "1400:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 454,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "1406:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:5"
									},
									"scope": 696,
									"src": "1339:493:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "2057:114:5",
										"statements": [
											{
												"id": 515,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 501,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 494,
																"src": "2095:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 508,
														"nodeType": "IfStatement",
														"src": "2091:29:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 506,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 500,
															"id": 507,
															"nodeType": "Return",
															"src": "2103:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 510,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 492,
																		"src": "2148:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 511,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 494,
																		"src": "2152:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 513,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 500,
														"id": 514,
														"nodeType": "Return",
														"src": "2134:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:5",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "1997:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "2008:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:5"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "2042:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 496,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "2048:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:5"
									},
									"scope": 696,
									"src": "1981:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "2406:114:5",
										"statements": [
											{
												"id": 543,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 529,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 522,
																"src": "2444:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 536,
														"nodeType": "IfStatement",
														"src": "2440:29:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 534,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 528,
															"id": 535,
															"nodeType": "Return",
															"src": "2452:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 538,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 520,
																		"src": "2497:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 539,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 522,
																		"src": "2501:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 541,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 528,
														"id": 542,
														"nodeType": "Return",
														"src": "2483:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "2346:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "2357:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:5"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "2391:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 524,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "2397:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:5"
									},
									"scope": 696,
									"src": "2330:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "2822:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 555,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "2839:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 556,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "2843:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 554,
												"id": 558,
												"nodeType": "Return",
												"src": "2832:12:5"
											}
										]
									},
									"documentation": {
										"id": 546,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:5",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "2768:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "2779:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:5"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "2813:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:5"
									},
									"scope": 696,
									"src": "2755:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "3189:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 570,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "3206:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 571,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 565,
														"src": "3210:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 569,
												"id": 573,
												"nodeType": "Return",
												"src": "3199:12:5"
											}
										]
									},
									"documentation": {
										"id": 561,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "3135:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "3146:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:5"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "3180:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:5"
									},
									"scope": 696,
									"src": "3122:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "3532:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 585,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "3549:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 586,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "3553:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 584,
												"id": 588,
												"nodeType": "Return",
												"src": "3542:12:5"
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:5",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "3478:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "3489:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:5"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "3523:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:5"
									},
									"scope": 696,
									"src": "3465:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "3917:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 600,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "3934:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 601,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "3938:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 599,
												"id": 603,
												"nodeType": "Return",
												"src": "3927:12:5"
											}
										]
									},
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "3863:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "3874:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:5"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "3908:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:5"
									},
									"scope": 696,
									"src": "3850:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 619,
										"nodeType": "Block",
										"src": "4466:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 615,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "4483:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 616,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 610,
														"src": "4487:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 614,
												"id": 618,
												"nodeType": "Return",
												"src": "4476:12:5"
											}
										]
									},
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "4412:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "4423:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:5"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "4457:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:5"
									},
									"scope": 696,
									"src": "4399:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "5054:106:5",
										"statements": [
											{
												"id": 643,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 633,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 625,
																		"src": "5096:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 634,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 623,
																		"src": "5101:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 636,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 627,
																	"src": "5104:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 632,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 638,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 639,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 623,
																"src": "5138:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 640,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 625,
																"src": "5142:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 631,
														"id": 642,
														"nodeType": "Return",
														"src": "5131:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 621,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "4972:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "4983:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "4994:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 626,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:5"
									},
									"returnParameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5045:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:5"
									},
									"scope": 696,
									"src": "4959:201:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 669,
										"nodeType": "Block",
										"src": "5739:105:5",
										"statements": [
											{
												"id": 668,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 658,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 650,
																		"src": "5781:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 661,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 652,
																	"src": "5788:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 657,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 663,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 664,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 648,
																"src": "5822:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 665,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 650,
																"src": "5826:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 656,
														"id": 667,
														"nodeType": "Return",
														"src": "5815:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "5657:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "5668:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "5679:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 651,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:5"
									},
									"returnParameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "5730:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:5"
									},
									"scope": 696,
									"src": "5644:200:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 694,
										"nodeType": "Block",
										"src": "6585:105:5",
										"statements": [
											{
												"id": 693,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 683,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 675,
																		"src": "6627:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 686,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 677,
																	"src": "6634:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 682,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 688,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 689,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 673,
																"src": "6668:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 690,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 675,
																"src": "6672:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 681,
														"id": 692,
														"nodeType": "Return",
														"src": "6661:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 671,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 695,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "6503:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "6514:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "6525:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 676,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:5"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "6576:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:5"
									},
									"scope": 696,
									"src": "6490:200:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 697,
							"src": "482:6210:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:6586:5"
				},
				"id": 5
			},
			"Backend/RecyclingRewards.sol": {
				"ast": {
					"absolutePath": "Backend/RecyclingRewards.sol",
					"exportedSymbols": {
						"Context": [
							372
						],
						"IERC165": [
							384
						],
						"IERC20": [
							225
						],
						"IERC721": [
							342
						],
						"Ownable": [
							147
						],
						"RecyclingRewards": [
							891
						],
						"SafeMath": [
							696
						]
					},
					"id": 892,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 698,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 699,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 892,
							"sourceUnit": 343,
							"src": "58:58:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 700,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 892,
							"sourceUnit": 226,
							"src": "117:56:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 701,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 892,
							"sourceUnit": 148,
							"src": "174:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 702,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 892,
							"sourceUnit": 697,
							"src": "227:57:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 703,
										"name": "Ownable",
										"nameLocations": [
											"315:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "315:7:6"
									},
									"id": 704,
									"nodeType": "InheritanceSpecifier",
									"src": "315:7:6"
								}
							],
							"canonicalName": "RecyclingRewards",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 891,
							"linearizedBaseContracts": [
								891,
								147,
								372
							],
							"name": "RecyclingRewards",
							"nameLocation": "295:16:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 707,
									"libraryName": {
										"id": 705,
										"name": "SafeMath",
										"nameLocations": [
											"335:8:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 696,
										"src": "335:8:6"
									},
									"nodeType": "UsingForDirective",
									"src": "329:27:6",
									"typeName": {
										"id": 706,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "348:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "f7c618c1",
									"id": 710,
									"mutability": "mutable",
									"name": "rewardToken",
									"nameLocation": "407:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 891,
									"src": "393:25:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$225",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 709,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 708,
											"name": "IERC20",
											"nameLocations": [
												"393:6:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 225,
											"src": "393:6:6"
										},
										"referencedDeclaration": 225,
										"src": "393:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$225",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3f608ad2",
									"id": 714,
									"mutability": "mutable",
									"name": "recycledProducts",
									"nameLocation": "522:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 891,
									"src": "490:48:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
										"typeString": "mapping(uint256 => bool)"
									},
									"typeName": {
										"id": 713,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 711,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "498:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "490:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
											"typeString": "mapping(uint256 => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 712,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "509:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0660f1e8",
									"id": 718,
									"mutability": "mutable",
									"name": "userRewards",
									"nameLocation": "579:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 891,
									"src": "544:46:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 717,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 715,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "552:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "544:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 716,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "563:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "45e1d960",
									"id": 720,
									"mutability": "mutable",
									"name": "rewardPerRecycling",
									"nameLocation": "671:18:6",
									"nodeType": "VariableDeclaration",
									"scope": 891,
									"src": "656:33:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 719,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "656:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "080ac4523930bdcc2e85ca0a99da6547ba0d4c3badb2a3693f781d80aa4863dc",
									"id": 728,
									"name": "ProductRecycled",
									"nameLocation": "773:15:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "805:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "789:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "789:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "827:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "811:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "811:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardAmount",
												"nameLocation": "844:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "836:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:69:6"
									},
									"src": "767:91:6"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "1304:101:6",
										"statements": [
											{
												"expression": {
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 741,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "1314:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 743,
																"name": "_rewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 731,
																"src": "1335:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 742,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "1328:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 744,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1328:20:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"src": "1314:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"id": 746,
												"nodeType": "ExpressionStatement",
												"src": "1314:34:6"
											},
											{
												"expression": {
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 747,
														"name": "rewardPerRecycling",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "1358:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 748,
														"name": "_rewardPerRecycling",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "1379:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1358:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 750,
												"nodeType": "ExpressionStatement",
												"src": "1358:40:6"
											}
										]
									},
									"documentation": {
										"id": 729,
										"nodeType": "StructuredDocumentation",
										"src": "864:328:6",
										"text": " @notice Constructor to initialize the contract with the reward token and reward rate\n @param _rewardToken Address of the ERC20 reward token contract\n @param _rewardPerRecycling The amount of reward given per recycled product\n @param initialOwner The address of the initial owner (msg.sender)"
									},
									"id": 752,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 738,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 735,
													"src": "1290:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 739,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 737,
												"name": "Ownable",
												"nameLocations": [
													"1282:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1282:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1282:21:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "_rewardToken",
												"nameLocation": "1217:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "1209:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1209:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "_rewardPerRecycling",
												"nameLocation": "1239:19:6",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "1231:27:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1231:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1268:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "1260:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1260:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1208:73:6"
									},
									"returnParameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1304:0:6"
									},
									"scope": 891,
									"src": "1197:208:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 820,
										"nodeType": "Block",
										"src": "1702:683:6",
										"statements": [
											{
												"assignments": [
													762
												],
												"declarations": [
													{
														"constant": false,
														"id": 762,
														"mutability": "mutable",
														"name": "nft",
														"nameLocation": "1720:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 820,
														"src": "1712:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$342",
															"typeString": "contract IERC721"
														},
														"typeName": {
															"id": 761,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 760,
																"name": "IERC721",
																"nameLocations": [
																	"1712:7:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 342,
																"src": "1712:7:6"
															},
															"referencedDeclaration": 342,
															"src": "1712:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$342",
																"typeString": "contract IERC721"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 764,
															"name": "nftContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "1734:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 763,
														"name": "IERC721",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 342,
														"src": "1726:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC721_$342_$",
															"typeString": "type(contract IERC721)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1726:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$342",
														"typeString": "contract IERC721"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1712:34:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 770,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 755,
																		"src": "1863:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 768,
																		"name": "nft",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 762,
																		"src": "1851:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$342",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1855:7:6",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 275,
																	"src": "1851:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1851:20:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 772,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1875:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1879:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1875:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1851:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f75206d757374206f776e207468652070726f6475637420746f2072656379636c65206974",
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1887:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2da2db0404507227023dd9f195d6179e0c85c03033a3bbf7dafc83719096b4a5",
																"typeString": "literal_string \"You must own the product to recycle it\""
															},
															"value": "You must own the product to recycle it"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2da2db0404507227023dd9f195d6179e0c85c03033a3bbf7dafc83719096b4a5",
																"typeString": "literal_string \"You must own the product to recycle it\""
															}
														],
														"id": 767,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1843:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1843:85:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 777,
												"nodeType": "ExpressionStatement",
												"src": "1843:85:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 782,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1946:26:6",
															"subExpression": {
																"baseExpression": {
																	"id": 779,
																	"name": "recycledProducts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 714,
																	"src": "1947:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 781,
																"indexExpression": {
																	"id": 780,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 755,
																	"src": "1964:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1947:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546869732070726f647563742068617320616c7265616479206265656e2072656379636c6564",
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1974:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cce2530319b152d2026bbe9448a787f6729d8df990f9962cfbcb0ab16b6f5dd1",
																"typeString": "literal_string \"This product has already been recycled\""
															},
															"value": "This product has already been recycled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cce2530319b152d2026bbe9448a787f6729d8df990f9962cfbcb0ab16b6f5dd1",
																"typeString": "literal_string \"This product has already been recycled\""
															}
														],
														"id": 778,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1938:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1938:77:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 785,
												"nodeType": "ExpressionStatement",
												"src": "1938:77:6"
											},
											{
												"expression": {
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 786,
															"name": "recycledProducts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "2066:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 788,
														"indexExpression": {
															"id": 787,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "2083:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2066:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 789,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2094:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2066:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 791,
												"nodeType": "ExpressionStatement",
												"src": "2066:32:6"
											},
											{
												"expression": {
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 792,
															"name": "userRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "2171:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 795,
														"indexExpression": {
															"expression": {
																"id": 793,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2183:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2187:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2183:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2171:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 801,
																"name": "rewardPerRecycling",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 720,
																"src": "2225:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 796,
																	"name": "userRewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 718,
																	"src": "2197:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 799,
																"indexExpression": {
																	"expression": {
																		"id": 797,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2209:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2213:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2209:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2197:23:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2221:3:6",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 560,
															"src": "2197:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 802,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2197:47:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2171:73:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "2171:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 808,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2275:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2279:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2275:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 810,
															"name": "rewardPerRecycling",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "2287:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 805,
															"name": "rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "2254:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 807,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2266:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 192,
														"src": "2254:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2254:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 812,
												"nodeType": "ExpressionStatement",
												"src": "2254:52:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 814,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2338:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2342:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2338:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 816,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "2350:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 817,
															"name": "rewardPerRecycling",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "2359:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 813,
														"name": "ProductRecycled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "2322:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2322:56:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 819,
												"nodeType": "EmitStatement",
												"src": "2317:61:6"
											}
										]
									},
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "1411:215:6",
										"text": " @notice Recycle a product and earn rewards\n @param tokenId The ID of the product NFT that is being recycled\n @param nftContract The address of the NFT contract representing the product"
									},
									"functionSelector": "44301c13",
									"id": 821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recycleProduct",
									"nameLocation": "1640:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1663:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1655:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1655:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "nftContract",
												"nameLocation": "1680:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1672:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1654:38:6"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1702:0:6"
									},
									"scope": 891,
									"src": "1631:754:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 833,
										"nodeType": "Block",
										"src": "2616:51:6",
										"statements": [
											{
												"expression": {
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 829,
														"name": "rewardPerRecycling",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "2626:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 830,
														"name": "newRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "2647:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2626:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 832,
												"nodeType": "ExpressionStatement",
												"src": "2626:34:6"
											}
										]
									},
									"documentation": {
										"id": 822,
										"nodeType": "StructuredDocumentation",
										"src": "2391:152:6",
										"text": " @notice Update the reward rate for recycling products\n @param newRewardRate The new amount of reward given per recycled product"
									},
									"functionSelector": "9ef3a261",
									"id": 834,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 827,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 826,
												"name": "onlyOwner",
												"nameLocations": [
													"2606:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2606:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2606:9:6"
										}
									],
									"name": "updateRewardRate",
									"nameLocation": "2557:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "newRewardRate",
												"nameLocation": "2582:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "2574:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2574:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2573:23:6"
									},
									"returnParameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2616:0:6"
									},
									"scope": 891,
									"src": "2548:119:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 867,
										"nodeType": "Block",
										"src": "2783:252:6",
										"statements": [
											{
												"assignments": [
													839
												],
												"declarations": [
													{
														"constant": false,
														"id": 839,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "2801:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 867,
														"src": "2793:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 838,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2793:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 844,
												"initialValue": {
													"baseExpression": {
														"id": 840,
														"name": "userRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "2810:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 843,
													"indexExpression": {
														"expression": {
															"id": 841,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2822:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 842,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2826:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2822:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2810:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2793:40:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 846,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 839,
																"src": "2851:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2860:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2851:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207265776172647320617661696c61626c65",
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2863:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040",
																"typeString": "literal_string \"No rewards available\""
															},
															"value": "No rewards available"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040",
																"typeString": "literal_string \"No rewards available\""
															}
														],
														"id": 845,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2843:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2843:43:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 851,
												"nodeType": "ExpressionStatement",
												"src": "2843:43:6"
											},
											{
												"expression": {
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 852,
															"name": "userRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "2951:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 855,
														"indexExpression": {
															"expression": {
																"id": 853,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2963:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2967:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2963:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2951:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 856,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2977:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2951:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 858,
												"nodeType": "ExpressionStatement",
												"src": "2951:27:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 862,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3009:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3013:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3009:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 864,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "3021:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 859,
															"name": "rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "2988:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 861,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3000:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 192,
														"src": "2988:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2988:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 866,
												"nodeType": "ExpressionStatement",
												"src": "2988:40:6"
											}
										]
									},
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "2673:69:6",
										"text": " @notice Withdraw the rewards accumulated by a user"
									},
									"functionSelector": "c7b8981c",
									"id": 868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawRewards",
									"nameLocation": "2756:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2771:2:6"
									},
									"returnParameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2783:0:6"
									},
									"scope": 891,
									"src": "2747:288:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 876,
										"nodeType": "Block",
										"src": "3223:42:6",
										"statements": [
											{
												"expression": {
													"id": 874,
													"name": "rewardPerRecycling",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 720,
													"src": "3240:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 873,
												"id": 875,
												"nodeType": "Return",
												"src": "3233:25:6"
											}
										]
									},
									"documentation": {
										"id": 869,
										"nodeType": "StructuredDocumentation",
										"src": "3041:120:6",
										"text": " @notice Get the current reward rate for recycling\n @return The reward rate per recycled product"
									},
									"functionSelector": "7e1a3786",
									"id": 877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardRate",
									"nameLocation": "3175:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3188:2:6"
									},
									"returnParameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "3214:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3214:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3213:9:6"
									},
									"scope": 891,
									"src": "3166:99:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 889,
										"nodeType": "Block",
										"src": "3512:41:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 885,
														"name": "userRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "3529:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 887,
													"indexExpression": {
														"id": 886,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 880,
														"src": "3541:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3529:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 884,
												"id": 888,
												"nodeType": "Return",
												"src": "3522:24:6"
											}
										]
									},
									"documentation": {
										"id": 878,
										"nodeType": "StructuredDocumentation",
										"src": "3271:166:6",
										"text": " @notice Get the accumulated rewards for a user\n @param user The address of the user\n @return The total accumulated rewards for the user"
									},
									"functionSelector": "078b0fb7",
									"id": 890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserRewards",
									"nameLocation": "3451:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3474:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "3466:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3465:14:6"
									},
									"returnParameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "3503:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3503:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3502:9:6"
									},
									"scope": 891,
									"src": "3442:111:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 892,
							"src": "286:3269:6",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								728
							]
						}
					],
					"src": "32:3524:6"
				},
				"id": 6
			}
		}
	}
}